<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\XMLAttributesImpl.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The XMLAttributesImpl class is an implementation of the XMLAttributes
        * interface which defines a collection of attributes for an element.
        * In the parser, the document source would scan the entire start element
        * and collect the attributes. The attributes are communicated to the
        * document handler in the startElement method.
        * &lt;p&gt;
        * The attributes are read-write so that subsequent stages in the document
        * pipeline can modify the values or change the attributes that are
        * propogated to the next stage.
        *
        * @see org.apache.xerces.xni.XMLDocumentHandler#startElement
        *
        * @author Andy Clark, IBM
        * @author Elena Litani, IBM
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: XMLAttributesImpl.java,v 1.26 2004/03/25 04:03:22 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XMLAttributesImpl</name>
        <super>
            <implements>implements
                <name>XMLAttributes</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default table size. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>TABLE_SIZE</name> =
                    <init>
                        <expr>101</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Threshold at which an instance is treated
                * as a large attribute list.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>SIZE_LIMIT</name> =
                    <init>
                        <expr>20</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// features</comment>

            <comment type="javadoc">/** Namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNamespaces</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// data</comment>

            <comment type="javadoc">/**
                * Usage count for the attribute table view.
                * Incremented each time all attributes are removed
                * when the attribute table view is in use.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fLargeCount</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Attribute count. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fLength</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Attribute information. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Attribute</name>
                        <index>[]</index>
                    </type>
                    <name>fAttributes</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>Attribute</name>
                                <index>[<expr>4</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Hashtable of attribute information.
                * Provides an alternate view of the attribute specification.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Attribute</name>
                        <index>[]</index>
                    </type>
                    <name>fAttributeTableView</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Tracks whether each chain in the hash table is stale
                * with respect to the current state of this object.
                * A chain is stale if its state is not the same as the number
                * of times the attribute table view has been used.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fAttributeTableViewChainState</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Actual number of buckets in the table view.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fTableViewBuckets</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Indicates whether the table view contains consistent data.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsTableViewConsistent</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLAttributesImpl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>TABLE_SIZE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * @param tableSize initial size of table view
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLAttributesImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>tableSize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fTableViewBuckets</name>
                            =
                            <name>tableSize</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fAttributes</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>Attribute</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Sets whether namespace processing is being performed. This state
                * is needed to return the correct value from the getLocalName method.
                *
                * @param namespaces True if namespace processing is turned on.
                *
                * @see #getLocalName
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNamespaces</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>namespaces</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            =
                            <name>namespaces</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setNamespaces(boolean)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLAttributes methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Adds an attribute. The attribute's non-normalized value of the
                * attribute will have the same value as the attribute value until
                * set using the &lt;code&gt;setNonNormalizedValue&lt;/code&gt; method. Also,
                * the added attribute will be marked as specified in the XML instance
                * document unless set otherwise using the &lt;code&gt;setSpecified&lt;/code&gt;
                * method.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; If an attribute of the same name already
                * exists, the old values for the attribute are replaced by the new
                * values.
                *
                * @param name The attribute name.
                * @param type The attribute type. The type name is determined by
                * the type specified for this attribute in the DTD.
                * For example: "CDATA", "ID", "NMTOKEN", etc. However,
                * attributes of type enumeration will have the type
                * value specified as the pipe ('|') separated list of
                * the enumeration values prefixed by an open
                * parenthesis and suffixed by a close parenthesis.
                * For example: "(true|false)".
                * @param value The attribute value.
                *
                * @return Returns the attribute index.
                *
                * @see #setNonNormalizedValue
                * @see #setSpecified
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>addAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLength</name>
                                &lt;
                                <name>SIZE_LIMIT</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>index</name>
                                        =
                                        <name><name>name</name>.
                                            <name>uri</name>
                                        </name>
                                        != <name>null</name> &amp;&amp; !
                                        <call>
                                            <name><name>name</name>.<name>uri</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>""</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ?
                                        <call>
                                            <name>getIndexFast</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>name</name>.
                                                            <name>uri</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>name</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        :
                                        <call>
                                            <name>getIndexFast</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>name</name>.
                                                            <name>rawname</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>index</name>
                                            == -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>index</name>
                                                    =
                                                    <name>fLength</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr><name>fLength</name>++ ==
                                                        <name><name>fAttributes</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Attribute</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>attributes</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Attribute</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name><name>fAttributes</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                    + 4
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.
                                                                        <name>arraycopy</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fAttributes</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attributes</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fAttributes</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name><name>fAttributes</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>attributes</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>attributes</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        = new
                                                                        <call>
                                                                            <name>Attribute</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fAttributes</name>
                                                                =
                                                                <name>attributes</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>name</name>.
                                            <name>uri</name>
                                        </name>
                                        == <name>null</name> ||
                                        <call>
                                            <name><name>name</name>.<name>uri</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == 0 ||
                                        (<name>index</name> =
                                        <call>
                                            <name>getIndexFast</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>name</name>.
                                                            <name>uri</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>name</name>.
                                                            <name>localpart</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ) == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <comment type="javadoc">/**
                                            * If attributes were removed from the list after the table
                                            * becomes in use this isn't reflected in the table view. It's
                                            * assumed that once a user starts removing attributes they're
                                            * not likely to add more. We only make the view consistent if
                                            * the user of this class adds attributes, removes them, and
                                            * then adds more.
                                            */
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>!<name>fIsTableViewConsistent</name> || <name>fLength</name> ==
                                                    <name>SIZE_LIMIT</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>prepareAndPopulateTableView</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fIsTableViewConsistent</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>bucket</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>getTableViewBucket</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>name</name>.
                                                                            <name>rawname</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <comment type="line">// The chain is stale.</comment>
                                        <comment type="line">// This must be a unique attribute.</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fAttributeTableViewChainState</name>
                                                        <index>[
                                                            <expr>
                                                                <name>bucket</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    !=
                                                    <name>fLargeCount</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>index</name>
                                                            =
                                                            <name>fLength</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr><name>fLength</name>++ ==
                                                                <name><name>fAttributes</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Attribute</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>attributes</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Attribute</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                fAttributes</name>.
                                                                                                <name>length</name>
                                                                                            </name>
                                                                                            &lt;&lt; 1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fAttributes</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>attributes</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>fAttributes</name>.
                                                                                            <name>length</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <for>for (
                                                                    <init>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>i</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name><name>fAttributes</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>i</name>
                                                                            &lt;
                                                                            <name><name>attributes</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr><name>i</name>++
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>attributes</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                = new
                                                                                <call>
                                                                                    <name>Attribute</name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>fAttributes</name>
                                                                        =
                                                                        <name>attributes</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>

                                                    <comment type="line">// Update table view.</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableViewChainState</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>fLargeCount</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributes</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>index</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .<name>next</name> =
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableView</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fAttributes</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>index</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <comment type="line">// This chain is active.</comment>
                                            <comment type="line">// We need to check if any of the attributes has the
                                                same rawname.
                                            </comment>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// Search the table.</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Attribute</name>
                                                            </type>
                                                            <name>found</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>
                                                                        <name>fAttributeTableView</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>bucket</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>found</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>found</name>.<name>name</name>.
                                                                            <name>rawname</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>name</name>.
                                                                            <name>rawname</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>found</name>
                                                                    =
                                                                    <name><name>found</name>.
                                                                        <name>next</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    <comment type="line">// This attribute is unique.</comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>found</name>
                                                                ==
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>index</name>
                                                                        =
                                                                        <name>fLength</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr><name>fLength</name>++ ==
                                                                            <name><name>fAttributes</name>.
                                                                                <name>length</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>Attribute</name>
                                                                                        <index>[]</index>
                                                                                    </type>
                                                                                    <name>attributes</name> =
                                                                                    <init>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Attribute</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fAttributes</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                length
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        &lt;&lt; 1
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>System</name>.
                                                                                            <name>arraycopy</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>fAttributes
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>0</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>attributes
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>0</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        fAttributes</name>
                                                                                                        .
                                                                                                        <name>length
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <for>for (
                                                                                <init>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <name>int</name>
                                                                                        </type>
                                                                                        <name>i</name> =
                                                                                        <init>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    fAttributes</name>.
                                                                                                    <name>length</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </init>
                                                                                    </decl>
                                                                                    ;
                                                                                </init>
                                                                                <condition>
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                        &lt;
                                                                                        <name><name>attributes</name>.
                                                                                            <name>length</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </condition>
                                                                                <incr>
                                                                                    <expr><name>i</name>++
                                                                                    </expr>
                                                                                </incr>
                                                                                )
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>attributes</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            = new
                                                                                            <call>
                                                                                                <name>Attribute</name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </for>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>fAttributes</name>
                                                                                    =
                                                                                    <name>attributes</name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>

                                                                <comment type="line">// Update table view</comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fAttributes</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        .<name>next</name> =
                                                                        <name>
                                                                            <name>fAttributeTableView</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>bucket</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fAttributeTableView</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>bucket</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>
                                                                            <name>fAttributes</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <comment type="line">// Duplicate. We still need to find the
                                                            index.
                                                        </comment>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>index</name>
                                                                        =
                                                                        <call>
                                                                            <name>getIndexFast</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>name</name>.
                                                                                            <name>rawname</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// set values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attribute</name>
                            </type>
                            <name>attribute</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attribute</name>.<name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>type</name>
                            </name>
                            =
                            <name>type</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>value</name>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>nonNormalizedValue</name>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>specified</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// clear augmentations</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attribute</name>.<name>augs</name>.
                                    <name>removeAllItems</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>index</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// addAttribute(QName,String,XMLString)</comment>

            <comment type="javadoc">/**
                * Removes all of the attributes. This method will also remove all
                * entities associated to the attributes.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAllAttributes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fLength</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// removeAllAttributes()</comment>

            <comment type="javadoc">/**
                * Removes the attribute at the specified index.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This operation changes the indexes of all
                * attributes following the attribute at the specified index.
                *
                * @param attrIndex The attribute index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAttributeAt</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fIsTableViewConsistent</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>attrIndex</name>
                                &lt; <name>fLength</name> - 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Attribute</name>
                                        </type>
                                        <name>removedAttr</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fAttributes</name>
                                                    <index>[
                                                        <expr>
                                                            <name>attrIndex</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attrIndex</name>
                                                        + 1
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fAttributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attrIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fLength</name>
                                                        - <name>attrIndex</name> - 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// Make the discarded Attribute object available for re-use
                                </comment>
                                <comment type="line">// by tucking it after the Attributes that are still in use
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttributes</name>
                                            <index>[
                                                <expr><name>fLength</name>-1
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name>removedAttr</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr><name>fLength</name>--
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// removeAttributeAt(int)</comment>

            <comment type="javadoc">/**
                * Sets the name of the attribute at the specified index.
                *
                * @param attrIndex The attribute index.
                * @param attrName The new attribute name.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>attrName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <call>
                                <name><name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attrName</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setName(int,QName)</comment>

            <comment type="javadoc">/**
                * Sets the fields in the given QName structure with the values
                * of the attribute name at the specified index.
                *
                * @param attrIndex The attribute index.
                * @param attrName The attribute name structure to fill in.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>getName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>attrName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attrName</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>attrIndex</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// getName(int,QName)</comment>

            <comment type="javadoc">/**
                * Sets the type of the attribute at the specified index.
                *
                * @param attrIndex The attribute index.
                * @param attrType The attribute type. The type name is determined by
                * the type specified for this attribute in the DTD.
                * For example: "CDATA", "ID", "NMTOKEN", etc. However,
                * attributes of type enumeration will have the type
                * value specified as the pipe ('|') separated list of
                * the enumeration values prefixed by an open
                * parenthesis and suffixed by a close parenthesis.
                * For example: "(true|false)".
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attrType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>type</name> =
                            <name>attrType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setType(int,String)</comment>

            <comment type="javadoc">/**
                * Sets the value of the attribute at the specified index. This
                * method will overwrite the non-normalized value of the attribute.
                *
                * @param attrIndex The attribute index.
                * @param attrValue The new attribute value.
                *
                * @see #setNonNormalizedValue
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attrValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attribute</name>
                            </type>
                            <name>attribute</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>attrIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>value</name>
                            </name>
                            =
                            <name>attrValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>nonNormalizedValue</name>
                            </name>
                            =
                            <name>attrValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setValue(int,String)</comment>

            <comment type="javadoc">/**
                * Sets the non-normalized value of the attribute at the specified
                * index.
                *
                * @param attrIndex The attribute index.
                * @param attrValue The new non-normalized attribute value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNonNormalizedValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attrValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>attrValue</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>attrValue</name>
                                        =
                                        <name>
                                            <name>fAttributes</name>
                                            <index>[
                                                <expr>
                                                    <name>attrIndex</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>nonNormalizedValue</name> =
                            <name>attrValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setNonNormalizedValue(int,String)</comment>

            <comment type="javadoc">/**
                * Returns the non-normalized value of the attribute at the specified
                * index. If no non-normalized value is set, this method will return
                * the same value as the &lt;code&gt;getValue(int)&lt;/code&gt; method.
                *
                * @param attrIndex The attribute index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNonNormalizedValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>attrIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name>nonNormalizedValue</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getNonNormalizedValue(int):String</comment>

            <comment type="javadoc">/**
                * Sets whether an attribute is specified in the instance document
                * or not.
                *
                * @param attrIndex The attribute index.
                * @param specified True if the attribute is specified in the instance
                * document.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSpecified</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>specified</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>specified</name> =
                            <name>specified</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setSpecified(int,boolean)</comment>

            <comment type="javadoc">/**
                * Returns true if the attribute is specified in the instance document.
                *
                * @param attrIndex The attribute index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSpecified</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name>specified</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isSpecified(int):boolean</comment>

            <comment type="line">//</comment>
            <comment type="line">// AttributeList and Attributes methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Return the number of attributes in the list.
                *
                * &lt;p&gt;Once you know the number of attributes, you can iterate
                * through the list.&lt;/p&gt;
                *
                * @return The number of attributes in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fLength</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLength():int</comment>

            <comment type="javadoc">/**
                * Look up an attribute's type by index.
                *
                * &lt;p&gt;The attribute type is one of the strings "CDATA", "ID",
                * "IDREF", "IDREFS", "NMTOKEN", "NMTOKENS", "ENTITY", "ENTITIES",
                * or "NOTATION" (always in upper case).&lt;/p&gt;
                *
                * &lt;p&gt;If the parser has not read a declaration for the attribute,
                * or if the parser does not report attribute types, then it must
                * return the value "CDATA" as stated in the XML 1.0 Recommentation
                * (clause 3.3.3, "Attribute-Value Normalization").&lt;/p&gt;
                *
                * &lt;p&gt;For an enumerated attribute that is not a notation, the
                * parser will report the type as "NMTOKEN".&lt;/p&gt;
                *
                * @param index The attribute index (zero-based).
                * @return The attribute's type as a string, or null if the
                * index is out of range.
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>getReportableType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>type</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getType(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's type by XML 1.0 qualified name.
                *
                * &lt;p&gt;See {@link #getType(int) getType(int)} for a description
                * of the possible types.&lt;/p&gt;
                *
                * @param qname The XML 1.0 qualified name.
                * @return The attribute type as a string, or null if the
                * attribute is not in the list or if qualified names
                * are not available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qname</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <call>
                                <name>getReportableType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>type</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getType(String):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's value by index.
                *
                * &lt;p&gt;If the attribute value is a list of tokens (IDREFS,
                * ENTITIES, or NMTOKENS), the tokens will be concatenated
                * into a single string with each token separated by a
                * single space.&lt;/p&gt;
                *
                * @param index The attribute index (zero-based).
                * @return The attribute's value as a string, or null if the
                * index is out of range.
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getValue(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's value by XML 1.0 qualified name.
                *
                * &lt;p&gt;See {@link #getValue(int) getValue(int)} for a description
                * of the possible values.&lt;/p&gt;
                *
                * @param qname The XML 1.0 qualified name.
                * @return The attribute value as a string, or null if the
                * attribute is not in the list or if qualified names
                * are not available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qname</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>value</name> :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getValue(String):String</comment>

            <comment type="line">//</comment>
            <comment type="line">// AttributeList methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Return the name of an attribute in this list (by position).
                *
                * &lt;p&gt;The names must be unique: the SAX parser shall not include the
                * same attribute twice. Attributes without values (those declared
                * #IMPLIED without a value specified in the start tag) will be
                * omitted from the list.&lt;/p&gt;
                *
                * &lt;p&gt;If the attribute name has a namespace prefix, the prefix
                * will still be attached.&lt;/p&gt;
                *
                * @param index The index of the attribute in the list (starting at 0).
                * @return The name of the indexed attribute, or null
                * if the index is out of range.
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name><name>name</name>.
                                <name>rawname</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getName(int):String</comment>

            <comment type="line">//</comment>
            <comment type="line">// Attributes methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Look up the index of an attribute by XML 1.0 qualified name.
                *
                * @param qName The qualified (prefixed) name.
                * @return The index of the attribute, or -1 if it does not
                * appear in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fLength</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Attribute</name>
                                    </type>
                                    <name>attribute</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>rawname</name>
                                        </name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>attribute</name>.<name>name</name>.<name>rawname</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>qName</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIndex(String):int</comment>

            <comment type="javadoc">/**
                * Look up the index of an attribute by Namespace name.
                *
                * @param uri The Namespace URI, or null if
                * the name has no Namespace URI.
                * @param localPart The attribute's local name.
                * @return The index of the attribute, or -1 if it does not
                * appear in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localPart</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fLength</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Attribute</name>
                                    </type>
                                    <name>attribute</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>localpart</name>
                                        </name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>attribute</name>.<name>name</name>.<name>localpart</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>localPart</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        ((<name>uri</name>==
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>uri</name>
                                        </name>
                                        ) ||
                                        (<name>uri</name>!=<name>null</name> &amp;&amp;
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>uri</name>
                                        </name>
                                        !=<name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>attribute</name>.<name>name</name>.<name>uri</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>uri</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ))
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIndex(String,String):int</comment>

            <comment type="javadoc">/**
                * Look up an attribute's local name by index.
                *
                * @param index The attribute index (zero-based).
                * @return The local name, or the empty string if Namespace
                * processing is not being performed, or null
                * if the index is out of range.
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLocalName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fNamespaces</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>""</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name><name>name</name>.
                                <name>localpart</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLocalName(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's XML 1.0 qualified name by index.
                *
                * @param index The attribute index (zero-based).
                * @return The XML 1.0 qualified name, or the empty string
                * if none is available, or null if the index
                * is out of range.
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getQName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rawname</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name><name>name</name>.
                                        <name>rawname</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>rawname</name>
                            != <name>null</name> ? <name>rawname</name> : ""
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getQName(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's type by Namespace name.
                *
                * &lt;p&gt;See {@link #getType(int) getType(int)} for a description
                * of the possible types.&lt;/p&gt;
                *
                * @param uri The Namespace URI, or null if the
                * name has no Namespace URI.
                * @param localName The local name of the attribute.
                * @return The attribute type as a string, or null if the
                * attribute is not in the list or if Namespace
                * processing is not being performed.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fNamespaces</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <call>
                                <name>getReportableType</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>index</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>type</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getType(String,String):String</comment>

            <comment type="javadoc">/**
                * Returns the prefix of the attribute at the specified index.
                *
                * @param index The index of the attribute.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPrefix</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name><name>name</name>.
                                        <name>prefix</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// REVISIT: The empty string is not entered in the symbol table!</comment>
                    <return>return
                        <expr>
                            <name>prefix</name>
                            != <name>null</name> ? <name>prefix</name> : ""
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPrefix(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's Namespace URI by index.
                *
                * @param index The attribute index (zero-based).
                * @return The Namespace URI
                * @see #getLength
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name><name>name</name>.
                                        <name>uri</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>uri</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getURI(int):String</comment>

            <comment type="javadoc">/**
                * Look up an attribute's value by Namespace name.
                *
                * &lt;p&gt;See {@link #getValue(int) getValue(int)} for a description
                * of the possible values.&lt;/p&gt;
                *
                * @param uri The Namespace URI, or null if the
                * @param localName The local name of the attribute.
                * @return The attribute value as a string, or null if the
                * attribute is not in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <call>
                                <name>getValue</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getValue(String,String):String</comment>


            <comment type="javadoc">/**
                * Look up an augmentations by Namespace name.
                *
                * @param uri The Namespace URI, or null if the
                * @param localName The local name of the attribute.
                * @return Augmentations
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Augmentations</name>
                </type>
                <name>getAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>augs</name> :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Look up an augmentation by XML 1.0 qualified name.
                * &lt;p&gt;
                *
                * @param qName The XML 1.0 qualified name.
                *
                * @return Augmentations
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Augmentations</name>
                </type>
                <name>getAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>augs</name> :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Look up an augmentations by attributes index.
                *
                * @param attributeIndex The attribute index.
                * @return Augmentations
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Augmentations</name>
                </type>
                <name>getAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attributeIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>attributeIndex</name>
                                &lt; 0 || <name>attributeIndex</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attributeIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name>augs</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the augmentations of the attribute at the specified index.
                *
                * @param attrIndex The attribute index.
                * @param augs The augmentations.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAugmentations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>augs</name> =
                            <name>augs</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the uri of the attribute at the specified index.
                *
                * @param attrIndex The attribute index.
                * @param uri Namespace uri
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name><name>name</name>.
                                <name>uri</name>
                            </name>
                            =
                            <name>uri</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// getURI(int,QName)</comment>

            <comment type="line">// Implementation methods</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSchemaId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>schemaId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>attrIndex</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>schemaId</name> =
                            <name>schemaId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getSchemaId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <name>schemaId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getSchemaId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>qname</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>schemaId</name> : false
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getType(String):String</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getSchemaId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fNamespaces</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getIndex</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>localName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>index</name>
                            != -1 ?
                            <name>
                                <name>fAttributes</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .<name>schemaId</name> : false
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getType(String,String):String</comment>

            <comment type="javadoc">/**
                * Look up the index of an attribute by XML 1.0 qualified name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt;
                * This method uses reference comparison, and thus should
                * only be used internally. We cannot use this method in any
                * code exposed to users as they may not pass in unique strings.
                *
                * @param qName The qualified (prefixed) name.
                * @return The index of the attribute, or -1 if it does not
                * appear in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getIndexFast</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fLength</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Attribute</name>
                                    </type>
                                    <name>attribute</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>rawname</name>
                                        </name>
                                        ==
                                        <name>qName</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIndexFast(String):int</comment>

            <comment type="javadoc">/**
                * Adds an attribute. The attribute's non-normalized value of the
                * attribute will have the same value as the attribute value until
                * set using the &lt;code&gt;setNonNormalizedValue&lt;/code&gt; method. Also,
                * the added attribute will be marked as specified in the XML instance
                * document unless set otherwise using the &lt;code&gt;setSpecified&lt;/code&gt;
                * method.
                * &lt;p&gt;
                * This method differs from &lt;code&gt;addAttribute&lt;/code&gt; in that it
                * does not check if an attribute of the same name already exists
                * in the list before adding it. In order to improve performance
                * of namespace processing, this method allows uniqueness checks
                * to be deferred until all the namespace information is available
                * after the entire attribute specification has been read.
                * &lt;p&gt;
                * &lt;strong&gt;Caution:&lt;/strong&gt; If this method is called it should
                * not be mixed with calls to &lt;code&gt;addAttribute&lt;/code&gt; unless
                * it has been determined that all the attribute names are unique.
                *
                * @param name the attribute name
                * @param type the attribute type
                * @param value the attribute value
                *
                * @see #setNonNormalizedValue
                * @see #setSpecified
                * @see #checkDuplicatesNS
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addAttributeNS</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <name>fLength</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr><name>fLength</name>++ ==
                                <name><name>fAttributes</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Attribute</name>
                                            <index>[]</index>
                                        </type>
                                        <name>attributes</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fLength</name>
                                            &lt;
                                            <name>SIZE_LIMIT</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>attributes</name>
                                                    = new
                                                    <name>
                                                        <name>Attribute</name>
                                                        <index>[
                                                            <expr>
                                                                <name><name>fAttributes</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                + 4
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>attributes</name>
                                                    = new
                                                    <name>
                                                        <name>Attribute</name>
                                                        <index>[
                                                            <expr>
                                                                <name><name>fAttributes</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                &lt;&lt; 1
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributes</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name><name>fAttributes</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>attributes</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>attributes</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name>Attribute</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributes</name>
                                        =
                                        <name>attributes</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// set values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attribute</name>
                            </type>
                            <name>attribute</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>index</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attribute</name>.<name>name</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>type</name>
                            </name>
                            =
                            <name>type</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>value</name>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>nonNormalizedValue</name>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>attribute</name>.
                                <name>specified</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// clear augmentations</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attribute</name>.<name>augs</name>.
                                    <name>removeAllItems</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks for duplicate expanded names (local part and namespace name
                * pairs) in the attribute specification. If a duplicate is found its
                * name is returned.
                * &lt;p&gt;
                * This should be called once all the in-scope namespaces for the element
                * enclosing these attributes is known, and after all the attributes
                * have gone through namespace binding.
                *
                * @return the name of a duplicate attribute found in the search,
                * otherwise null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>checkDuplicatesNS</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// If the list is small check for duplicates using pairwise comparison.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLength</name>
                                &lt;=
                                <name>SIZE_LIMIT</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt; <name>fLength</name> - 1
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Attribute</name>
                                                </type>
                                                <name>att1</name> =
                                                <init>
                                                    <expr>
                                                        <name>
                                                            <name>fAttributes</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>j</name> =
                                                    <init>
                                                        <expr>
                                                            <name>i</name>
                                                            + 1
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>j</name>
                                                    &lt;
                                                    <name>fLength</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr>++
                                                    <name>j</name>
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>Attribute</name>
                                                        </type>
                                                        <name>att2</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fAttributes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>j</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>att1</name>.<name>name</name>.
                                                                <name>localpart</name>
                                                            </name>
                                                            ==
                                                            <name><name>att2</name>.<name>name</name>.
                                                                <name>localpart</name>
                                                            </name>
                                                            &amp;&amp;
                                                            <name><name>att1</name>.<name>name</name>.
                                                                <name>uri</name>
                                                            </name>
                                                            ==
                                                            <name><name>att2</name>.<name>name</name>.
                                                                <name>uri</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name><name>att2</name>.
                                                                        <name>name</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <comment type="line">// If the list is large check duplicates using a hash table.</comment>
                        <else>else
                            <block>{
                                <comment type="line">// We don't want this table view to be read if someone calls
                                </comment>
                                <comment type="line">// addAttribute so we invalidate it up front.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fIsTableViewConsistent</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>prepareTableView</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Attribute</name>
                                        </type>
                                        <name>attr</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>bucket</name>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>fLength</name>
                                                    - 1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &gt;= 0
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>--
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>attr</name>
                                                =
                                                <name>
                                                    <name>fAttributes</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>bucket</name>
                                                =
                                                <call>
                                                    <name>getTableViewBucket</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>attr</name>.<name>name</name>.
                                                                    <name>localpart</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>attr</name>.<name>name</name>.
                                                                    <name>uri</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// The chain is stale.</comment>
                                        <comment type="line">// This must be a unique attribute.</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fAttributeTableViewChainState</name>
                                                        <index>[
                                                            <expr>
                                                                <name>bucket</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    !=
                                                    <name>fLargeCount</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableViewChainState</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>fLargeCount</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>attr</name>.
                                                                <name>next</name>
                                                            </name>
                                                            =
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableView</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>attr</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <comment type="line">// This chain is active.</comment>
                                            <comment type="line">// We need to check if any of the attributes has the
                                                same name.
                                            </comment>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// Search the table.</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Attribute</name>
                                                            </type>
                                                            <name>found</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>
                                                                        <name>fAttributeTableView</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>bucket</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>found</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>found</name>.<name>name</name>.
                                                                            <name>localpart</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>attr</name>.<name>name</name>.
                                                                            <name>localpart</name>
                                                                        </name>
                                                                        &amp;&amp;
                                                                        <name><name>found</name>.<name>name</name>.
                                                                            <name>uri</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>attr</name>.<name>name</name>.
                                                                            <name>uri</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <name><name>attr</name>.
                                                                                    <name>name</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>found</name>
                                                                    =
                                                                    <name><name>found</name>.
                                                                        <name>next</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>

                                                    <comment type="line">// Update table view</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>attr</name>.
                                                                <name>next</name>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fAttributeTableView</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableView</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>bucket</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>attr</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Look up the index of an attribute by Namespace name.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt;
                * This method uses reference comparison, and thus should
                * only be used internally. We cannot use this method in any
                * code exposed to users as they may not pass in unique strings.
                *
                * @param uri The Namespace URI, or null if
                * the name has no Namespace URI.
                * @param localPart The attribute's local name.
                * @return The index of the attribute, or -1 if it does not
                * appear in the list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getIndexFast</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localPart</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fLength</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Attribute</name>
                                    </type>
                                    <name>attribute</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fAttributes</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>localpart</name>
                                        </name>
                                        == <name>localPart</name> &amp;&amp;
                                        <name><name>attribute</name>.<name>name</name>.
                                            <name>uri</name>
                                        </name>
                                        ==
                                        <name>uri</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getIndexFast(String,String):int</comment>

            <comment type="javadoc">/**
                * Returns the value passed in or NMTOKEN if it's an enumerated type.
                *
                * @param type attribute type
                * @return the value passed in or NMTOKEN if it's an enumerated type.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>getReportableType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>0</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == '('
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>"NMTOKEN"</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>type</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the position in the table view
                * where the given attribute name would be hashed.
                *
                * @param qname the attribute name
                * @return the position in the table view where the given attribute
                * would be hashed
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getTableViewBucket</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>qname</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            &amp; 0x7FFFFFFF) %
                            <name>fTableViewBuckets</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the position in the table view
                * where the given attribute name would be hashed.
                *
                * @param localpart the local part of the attribute
                * @param uri the namespace name of the attribute
                * @return the position in the table view where the given attribute
                * would be hashed
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getTableViewBucket</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localpart</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>uri</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>(
                                        <call>
                                            <name><name>localpart</name>.
                                                <name>hashCode</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp; 0x7FFFFFFF) %
                                        <name>fTableViewBuckets</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>((
                                        <call>
                                            <name><name>localpart</name>.
                                                <name>hashCode</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>uri</name>.
                                                <name>hashCode</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        )
                                        &amp; 0x7FFFFFFF) %
                                        <name>fTableViewBuckets</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Purges all elements from the table view.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>cleanTableView</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>++<name>fLargeCount</name> &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Overflow. We actually need to visit the chain state array.
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fAttributeTableViewChainState</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <name>fTableViewBuckets</name>
                                                                - 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &gt;= 0
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr>--
                                                        <name>i</name>
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fAttributeTableViewChainState</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fLargeCount</name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Prepares the table view of the attributes list for use.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>prepareTableView</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fAttributeTableView</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeTableView</name>
                                        = new
                                        <name>
                                            <name>Attribute</name>
                                            <index>[
                                                <expr>
                                                    <name>fTableViewBuckets</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeTableViewChainState</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[
                                                <expr>
                                                    <name>fTableViewBuckets</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>cleanTableView</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Prepares the table view of the attributes list for use,
                * and populates it with the attributes which have been
                * previously read.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>prepareAndPopulateTableView</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>prepareTableView</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// Need to populate the hash table with the attributes we've scanned so far.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attribute</name>
                            </type>
                            <name>attr</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bucket</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fLength</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>attr</name>
                                    =
                                    <name>
                                        <name>fAttributes</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>bucket</name>
                                    =
                                    <call>
                                        <name>getTableViewBucket</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>attr</name>.<name>name</name>.
                                                        <name>rawname</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fAttributeTableViewChainState</name>
                                            <index>[
                                                <expr>
                                                    <name>bucket</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>fLargeCount</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fAttributeTableViewChainState</name>
                                                    <index>[
                                                        <expr>
                                                            <name>bucket</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>fLargeCount</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>attr</name>.
                                                    <name>next</name>
                                                </name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fAttributeTableView</name>
                                                    <index>[
                                                        <expr>
                                                            <name>bucket</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>attr</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// Update table view</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>attr</name>.
                                                    <name>next</name>
                                                </name>
                                                =
                                                <name>
                                                    <name>fAttributeTableView</name>
                                                    <index>[
                                                        <expr>
                                                            <name>bucket</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fAttributeTableView</name>
                                                    <index>[
                                                        <expr>
                                                            <name>bucket</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>attr</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Attribute information.
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>static</specifier>
                class <name>Attribute</name>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="line">// basic info</comment>

                    <comment type="javadoc">/** Name. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>QName</name>
                            </type>
                            <name>name</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>QName</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Value. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Non-normalized value. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>nonNormalizedValue</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Specified. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>specified</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Schema ID type. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>schemaId</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Augmentations information for this attribute.
                        * XMLAttributes has no knowledge if any augmentations
                        * were attached to Augmentations.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AugmentationsImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Additional data for attribute table view</comment>

                    <comment type="javadoc">/** Pointer to the next attribute in the chain. **/</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Attribute</name>
                            </type>
                            <name>next</name>
                        </decl>
                        ;
                    </decl_stmt>

                    }
                </block>
            </class>
            <comment type="line">// class Attribute</comment>

            }
        </block>
    </class>
    <comment type="line">// class XMLAttributesImpl</comment>
</unit>
