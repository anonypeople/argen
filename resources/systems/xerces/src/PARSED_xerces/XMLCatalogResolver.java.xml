<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\util\XMLCatalogResolver.java">
    <comment type="block">/*
        * Copyright 2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>InputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>ext</name>.
            <name>EntityResolver2</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>LSInput</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.<name>ls</name>.
            <name>LSResourceResolver</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>parsers</name>.
            <name>SAXParserFactory</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>dom</name>.
            <name>DOMInputImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>jaxp</name>.
            <name>SAXParserFactoryImpl</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLEntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.<name>resolver</name>.
            <name>Catalog</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.<name>resolver</name>.
            <name>CatalogManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.<name>resolver</name>.<name>readers</name>.
            <name>OASISXMLCatalogReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xml</name>.<name>resolver</name>.<name>readers</name>.
            <name>SAXCatalogReader</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;The catalog resolver handles the resolution of external
        * identifiers and URI references through XML catalogs. This
        * component supports XML catalogs defined by the
        * &lt;a href="http://www.oasis-open.org/committees/entity/spec.html"&gt;
        * OASIS XML Catalogs Specification&lt;/a&gt;. It encapsulates the
        * &lt;a href="http://xml.apache.org/commons/"&gt;XML Commons&lt;/a&gt; resolver.
        * An instance of this class may be registered on the parser
        * as a SAX entity resolver, as a DOM LSResourceResolver or
        * as an XNI entity resolver by setting the property
        * (http://apache.org/xml/properties/internal/entity-resolver).&lt;/p&gt;
        *
        * &lt;p&gt;It is intended that this class may be used standalone to perform
        * catalog resolution outside of a parsing context. It may be shared
        * between several parsers and the application.&lt;/p&gt;
        *
        * @author Michael Glavassevich, IBM
        *
        * @version $Id: XMLCatalogResolver.java,v 1.8 2005/05/02 21:44:37 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XMLCatalogResolver</name>
        <super>
            <implements>implements <name>XMLEntityResolver</name>, <name>EntityResolver2</name>,
                <name>LSResourceResolver</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** Internal catalog manager for Apache catalogs. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CatalogManager</name>
                    </type>
                    <name>fResolverCatalogManager</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Internal catalog structure. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Catalog</name>
                    </type>
                    <name>fCatalog</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** An array of catalog URIs. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>fCatalogsList</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Indicates whether the list of catalogs has
                * changed since it was processed.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fCatalogsChanged</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Application specified prefer public setting. **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fPreferPublic</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Indicates whether the application desires that
                * the parser or some other component performing catalog
                * resolution should use the literal system identifier
                * instead of the expanded system identifier.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fUseLiteralSystemId</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a catalog resolver with a default configuration.&lt;/p&gt;
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLCatalogResolver</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a catalog resolver with the given
                * list of entry files.&lt;/p&gt;
                *
                * @param catalogs an ordered array list of absolute URIs
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLCatalogResolver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>catalogs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>catalogs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a catalog resolver with the given
                * list of entry files and the preference for whether
                * system or public matches are preferred.&lt;/p&gt;
                *
                * @param catalogs an ordered array list of absolute URIs
                * @param preferPublic the prefer public setting
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLCatalogResolver</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>catalogs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preferPublic</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>init</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>catalogs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>preferPublic</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the initial list of catalog entry files.&lt;/p&gt;
                *
                * @return the initial list of catalog entry files
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getCatalogList</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fCatalogsList</name> != <name>null</name>)
                            ? (
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )
                            <call>
                                <name><name>fCatalogsList</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Sets the initial list of catalog entry files.
                * If there were any catalog mappings cached from
                * the previous list they will be replaced by catalog
                * mappings from the new list the next time the catalog
                * is queried.&lt;/p&gt;
                *
                * @param catalogs an ordered array list of absolute URIs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>void</name>
                </type>
                <name>setCatalogList</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>catalogs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCatalogsChanged</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCatalogsList</name>
                            = (<name>catalogs</name> != <name>null</name>)
                            ? (
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )
                            <call>
                                <name><name>catalogs</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Forces the cache of catalog mappings to be cleared.&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>void</name>
                </type>
                <name>clear</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCatalog</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the preference for whether system or public
                * matches are preferred. This is used in the absence
                * of any occurence of the &lt;code&gt;prefer&lt;/code&gt; attribute
                * on the &lt;code&gt;catalog&lt;/code&gt; entry of a catalog. If this
                * property has not yet been explicitly set its value is
                * &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
                *
                * @return the prefer public setting
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>getPreferPublic</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fPreferPublic</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Sets the preference for whether system or public
                * matches are preferred. This is used in the absence
                * of any occurence of the &lt;code&gt;prefer&lt;/code&gt; attribute
                * on the &lt;code&gt;catalog&lt;/code&gt; entry of a catalog.&lt;/p&gt;
                *
                * @param preferPublic the prefer public setting
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>setPreferPublic</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preferPublic</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fPreferPublic</name>
                            =
                            <name>preferPublic</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setPreferPublic</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>preferPublic</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the preference for whether the literal system
                * identifier should be used when resolving system
                * identifiers when both it and the expanded system
                * identifier are available. If this property has not yet
                * been explicitly set its value is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
                *
                * @return the preference for using literal system identifers
                * for catalog resolution
                *
                * @see #setUseLiteralSystemId
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>getUseLiteralSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fUseLiteralSystemId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Sets the preference for whether the literal system
                * identifier should be used when resolving system
                * identifiers when both it and the expanded system
                * identifier are available.&lt;/p&gt;
                *
                * &lt;p&gt;The literal system identifier is the URI as it was
                * provided before absolutization. It may be embedded within
                * an entity. It may be provided externally or it may be the
                * result of redirection. For example, redirection may
                * have come from the protocol level through HTTP or from
                * an application's entity resolver.&lt;/p&gt;
                *
                * &lt;p&gt;The expanded system identifier is an absolute URI
                * which is the result of resolving the literal system
                * identifier against a base URI.&lt;/p&gt;
                *
                * @param useLiteralSystemId the preference for using
                * literal system identifers for catalog resolution
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>setUseLiteralSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>useLiteralSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fUseLiteralSystemId</name>
                            =
                            <name>useLiteralSystemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Resolves an external entity. If the entity cannot be
                * resolved, this method should return &lt;code&gt;null&lt;/code&gt;. This
                * method returns an input source if an entry was found in the
                * catalog for the given external identifier. It should be
                * overrided if other behaviour is required.&lt;/p&gt;
                *
                * @param publicId the public identifier, or &lt;code&gt;null&lt;/code&gt; if none was supplied
                * @param systemId the system identifier
                *
                * @throws SAXException any SAX exception, possibly wrapping another exception
                * @throws IOException thrown if some i/o error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>InputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resolvedId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>publicId</name>
                                != <name>null</name> &amp;&amp; <name>systemId</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>resolvedId</name>
                                        =
                                        <call>
                                            <name>resolvePublic</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>systemId</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>resolvedId</name>
                                                =
                                                <call>
                                                    <name>resolveSystem</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>resolvedId</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>InputSource</name>
                                        </type>
                                        <name>source</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>InputSource</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resolvedId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>source</name>.
                                                <name>setPublicId</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name>source</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Resolves an external entity. If the entity cannot be
                * resolved, this method should return &lt;code&gt;null&lt;/code&gt;. This
                * method returns an input source if an entry was found in the
                * catalog for the given external identifier. It should be
                * overrided if other behaviour is required.&lt;/p&gt;
                *
                * @param name the identifier of the external entity
                * @param publicId the public identifier, or &lt;code&gt;null&lt;/code&gt; if none was supplied
                * @param baseURI the URI with respect to which relative systemIDs are interpreted.
                * @param systemId the system identifier
                *
                * @throws SAXException any SAX exception, possibly wrapping another exception
                * @throws IOException thrown if some i/o error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>InputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resolvedId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>getUseLiteralSystemId</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; <name>baseURI</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Attempt to resolve the system identifier against the base URI.
                                </comment>
                                <try>try
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>URI</name>
                                                </type>
                                                <name>uri</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>URI</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>URI</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>baseURI</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>systemId</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>systemId</name>
                                                =
                                                <call>
                                                    <name><name>uri</name>.
                                                        <name>toString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <comment type="line">// Ignore the exception. Fallback to the literal system
                                        identifier.
                                    </comment>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name><name>URI</name>.
                                                        <name>MalformedURIException</name>
                                                    </name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{}</block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>publicId</name>
                                != <name>null</name> &amp;&amp; <name>systemId</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>resolvedId</name>
                                        =
                                        <call>
                                            <name>resolvePublic</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>systemId</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>resolvedId</name>
                                                =
                                                <call>
                                                    <name>resolveSystem</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>systemId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>resolvedId</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>InputSource</name>
                                        </type>
                                        <name>source</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>InputSource</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>resolvedId</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>source</name>.
                                                <name>setPublicId</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name>source</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Locates an external subset for documents which do not explicitly
                * provide one. This method always returns &lt;code&gt;null&lt;/code&gt;. It
                * should be overrided if other behaviour is required.&lt;/p&gt;
                *
                * @param name the identifier of the document root element
                * @param baseURI the document's base URI
                *
                * @throws SAXException any SAX exception, possibly wrapping another exception
                * @throws IOException thrown if some i/o error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>InputSource</name>
                </type>
                <name>getExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseURI</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Resolves a resource using the catalog. This method interprets that
                * the namespace URI corresponds to uri entries in the catalog.
                * Where both a namespace and an external identifier exist, the namespace
                * takes precedence.&lt;/p&gt;
                *
                * @param type the type of the resource being resolved
                * @param namespaceURI the namespace of the resource being resolved,
                * or &lt;code&gt;null&lt;/code&gt; if none was supplied
                * @param publicId the public identifier of the resource being resolved,
                * or &lt;code&gt;null&lt;/code&gt; if none was supplied
                * @param systemId the system identifier of the resource being resolved,
                * or &lt;code&gt;null&lt;/code&gt; if none was supplied
                * @param baseURI the absolute base URI of the resource being parsed,
                * or &lt;code&gt;null&lt;/code&gt; if there is no base URI
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LSInput</name>
                </type>
                <name>resolveResource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespaceURI</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseURI</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resolvedId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <try>try
                        <block>{
                            <comment type="line">// The namespace is useful for resolving namespace aware</comment>
                            <comment type="line">// grammars such as XML schema. Let it take precedence over</comment>
                            <comment type="line">// the external identifier if one exists.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>namespaceURI</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>resolvedId</name>
                                                =
                                                <call>
                                                    <name>resolveURI</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>namespaceURI</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>getUseLiteralSystemId</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp; <name>baseURI</name> !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Attempt to resolve the system identifier against the
                                            base URI.
                                        </comment>
                                        <try>try
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>URI</name>
                                                        </type>
                                                        <name>uri</name> =
                                                        <init>
                                                            <expr>new
                                                                <call>
                                                                    <name>URI</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>URI</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>baseURI</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>systemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>systemId</name>
                                                        =
                                                        <call>
                                                            <name><name>uri</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                            <comment type="line">// Ignore the exception. Fallback to the literal system
                                                identifier.
                                            </comment>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name><name>URI</name>.
                                                                <name>MalformedURIException</name>
                                                            </name>
                                                        </type>
                                                        <name>ex</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{}</block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// Resolve against an external identifier if one exists. This</comment>
                            <comment type="line">// is useful for resolving DTD external subsets and other</comment>
                            <comment type="line">// external entities. For XML schemas if there was no namespace
                            </comment>
                            <comment type="line">// mapping we might be able to resolve a system identifier</comment>
                            <comment type="line">// specified as a location hint.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>resolvedId</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>publicId</name>
                                                    != <name>null</name> &amp;&amp; <name>systemId</name> !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>resolvedId</name>
                                                            =
                                                            <call>
                                                                <name>resolvePublic</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>publicId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>systemId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>systemId</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>resolvedId</name>
                                                                    =
                                                                    <call>
                                                                        <name>resolveSystem</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>systemId</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <comment type="line">// Ignore IOException. It cannot be thrown from this method.</comment>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>ex</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>
                                <name>resolvedId</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>DOMInputImpl</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>resolvedId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>baseURI</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * &lt;p&gt;Resolves an external entity. If the entity cannot be
                * resolved, this method should return &lt;code&gt;null&lt;/code&gt;. This
                * method only calls &lt;code&gt;resolveIdentifier&lt;/code&gt; and returns
                * an input source if an entry was found in the catalog. It
                * should be overrided if other behaviour is required.&lt;/p&gt;
                *
                * @param resourceIdentifier location of the XML resource to resolve
                *
                * @throws XNIException thrown on general error
                * @throws IOException thrown if some i/o error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLInputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resolvedId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>resolveIdentifier</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>resourceIdentifier</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resolvedId</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>XMLInputSource</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>resourceIdentifier</name>.
                                                                <name>getPublicId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>resolvedId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>resourceIdentifier</name>.
                                                                <name>getBaseSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Resolves an identifier using the catalog. This method interprets that
                * the namespace of the identifier corresponds to uri entries in the catalog.
                * Where both a namespace and an external identifier exist, the namespace
                * takes precedence.&lt;/p&gt;
                *
                * @param resourceIdentifier the identifier to resolve
                *
                * @throws XNIException thrown on general error
                * @throws IOException thrown if some i/o error occurs
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>resolveIdentifier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>resolvedId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// The namespace is useful for resolving namespace aware</comment>
                    <comment type="line">// grammars such as XML schema. Let it take precedence over</comment>
                    <comment type="line">// the external identifier if one exists.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getNamespace</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespace</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>resolvedId</name>
                                        =
                                        <call>
                                            <name>resolveURI</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>namespace</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Resolve against an external identifier if one exists. This</comment>
                    <comment type="line">// is useful for resolving DTD external subsets and other</comment>
                    <comment type="line">// external entities. For XML schemas if there was no namespace</comment>
                    <comment type="line">// mapping we might be able to resolve a system identifier</comment>
                    <comment type="line">// specified as a location hint.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>resolvedId</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>publicId</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>resourceIdentifier</name>.
                                                        <name>getPublicId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>systemId</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getUseLiteralSystemId</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                ?
                                                <call>
                                                    <name><name>resourceIdentifier</name>.
                                                        <name>getLiteralSystemId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <call>
                                                    <name><name>resourceIdentifier</name>.
                                                        <name>getExpandedSystemId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>publicId</name>
                                            != <name>null</name> &amp;&amp; <name>systemId</name> !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>resolvedId</name>
                                                    =
                                                    <call>
                                                        <name>resolvePublic</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>publicId</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>systemId</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>systemId</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>resolvedId</name>
                                                            =
                                                            <call>
                                                                <name>resolveSystem</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>systemId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>resolvedId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the URI mapping in the catalog for the given
                * external identifier or &lt;code&gt;null&lt;/code&gt; if no mapping
                * exists. If the system identifier is an URN in the
                * &lt;code&gt;publicid&lt;/code&gt; namespace it is converted into
                * a public identifier by URN "unwrapping" as specified
                * in the XML Catalogs specification.&lt;/p&gt;
                *
                * @param systemId the system identifier to locate in the catalog
                *
                * @return the mapped URI or &lt;code&gt;null&lt;/code&gt; if no mapping
                * was found in the catalog
                *
                * @throws IOException if an i/o error occurred while reading
                * the catalog
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>String</name>
                </type>
                <name>resolveSystem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fCatalogsChanged</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>parseCatalogs</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCatalogsChanged</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>fCatalog</name> != <name>null</name>)
                            ?
                            <call>
                                <name><name>fCatalog</name>.
                                    <name>resolveSystem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>systemId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the URI mapping in the catalog for the given
                * external identifier or &lt;code&gt;null&lt;/code&gt; if no mapping
                * exists. Public identifiers are normalized before
                * comparison.&lt;/p&gt;
                *
                * @param publicId the public identifier to locate in the catalog
                * @param systemId the system identifier to locate in the catalog
                *
                * @return the mapped URI or &lt;code&gt;null&lt;/code&gt; if no mapping
                * was found in the catalog
                *
                * @throws IOException if an i/o error occurred while reading
                * the catalog
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>String</name>
                </type>
                <name>resolvePublic</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fCatalogsChanged</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>parseCatalogs</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCatalogsChanged</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>fCatalog</name> != <name>null</name>)
                            ?
                            <call>
                                <name><name>fCatalog</name>.
                                    <name>resolvePublic</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>publicId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>systemId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns the URI mapping in the catalog for the given URI
                * reference or &lt;code&gt;null&lt;/code&gt; if no mapping exists.
                * URI comparison is case sensitive. If the URI reference
                * is an URN in the &lt;code&gt;publicid&lt;/code&gt; namespace
                * it is converted into a public identifier by URN "unwrapping"
                * as specified in the XML Catalogs specification and then
                * resolution is performed following the semantics of
                * external identifier resolution.&lt;/p&gt;
                *
                * @param uri the URI to locate in the catalog
                *
                * @return the mapped URI or &lt;code&gt;null&lt;/code&gt; if no mapping
                * was found in the catalog
                *
                * @throws IOException if an i/o error occurred while reading
                * the catalog
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <specifier>synchronized</specifier>
                    <name>String</name>
                </type>
                <name>resolveURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fCatalogsChanged</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>parseCatalogs</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCatalogsChanged</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>fCatalog</name> != <name>null</name>)
                            ?
                            <call>
                                <name><name>fCatalog</name>.
                                    <name>resolveURI</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>uri</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initialization. Create a CatalogManager and set all
                * the properties upfront. This prevents JVM wide system properties
                * or a property file somewhere in the environment from affecting
                * the behaviour of this catalog resolver.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>init</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>catalogs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>preferPublic</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCatalogsList</name>
                            = (<name>catalogs</name> != <name>null</name>) ? (
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )
                            <call>
                                <name><name>catalogs</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fPreferPublic</name>
                            =
                            <name>preferPublic</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fResolverCatalogManager</name>
                            = new
                            <call>
                                <name>CatalogManager</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setAllowOasisXMLCatalogPI</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setCatalogClassName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"org.apache.xml.resolver.Catalog"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setCatalogFiles</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setIgnoreMissingProperties</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setPreferPublic</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fPreferPublic</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setRelativeCatalogs</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setUseStaticCatalog</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResolverCatalogManager</name>.
                                    <name>setVerbosity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Instruct the &lt;code&gt;Catalog&lt;/code&gt; to parse each of the
                * catalogs in the list. Only the first catalog will actually be
                * parsed immediately. The others will be queued and read if
                * they are needed later.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>parseCatalogs</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCatalogsList</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCatalog</name>
                                        = new
                                        <call>
                                            <name>Catalog</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fResolverCatalogManager</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>attachReaderToCatalog</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCatalog</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fCatalogsList</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>catalog</name> =
                                                <init>
                                                    <expr>
                                                        <name>
                                                            <name>fCatalogsList</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>catalog</name>
                                                    != <name>null</name> &amp;&amp;
                                                    <call>
                                                        <name><name>catalog</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fCatalog</name>.
                                                                    <name>parseCatalog</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>catalog</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCatalog</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Attaches the reader to the catalog.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>attachReaderToCatalog</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Catalog</name>
                            </type>
                            <name>catalog</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SAXParserFactory</name>
                            </type>
                            <name>spf</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SAXParserFactoryImpl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>spf</name>.
                                    <name>setNamespaceAware</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>spf</name>.
                                    <name>setValidating</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SAXCatalogReader</name>
                            </type>
                            <name>saxReader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SAXCatalogReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>spf</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>saxReader</name>.
                                    <name>setCatalogParser</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>OASISXMLCatalogReader</name>.
                                                <name>namespaceName</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"catalog"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"org.apache.xml.resolver.readers.OASISXMLCatalogReader"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>catalog</name>.
                                    <name>addReader</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"application/xml"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>saxReader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
