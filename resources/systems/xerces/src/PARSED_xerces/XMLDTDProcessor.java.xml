<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dtd\XMLDTDProcessor.java">
    <comment type="block">/*
        * Copyright 1999-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>StringTokenizer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDTDContentModelHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDTDHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>Grammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarPool</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDContentModelFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDContentModelSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDTDSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The DTD processor. The processor implements a DTD
        * filter: receiving DTD events from the DTD scanner; validating
        * the content and structure; building a grammar, if applicable;
        * and notifying the DTDHandler of the information resulting from the
        * process.
        * &lt;p&gt;
        * This component requires the following features and properties from the
        * component manager that uses it:
        * &lt;ul&gt;
        * &lt;li&gt;http://xml.org/sax/features/namespaces&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/symbol-table&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/grammar-pool&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/datatype-validator-factory&lt;/li&gt;
        * &lt;/ul&gt;
        *
        * @xerces.internal
        *
        * @author Neil Graham, IBM
        *
        * @version $Id: XMLDTDProcessor.java,v 1.15 2005/03/07 23:28:41 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XMLDTDProcessor</name>
        <super>
            <implements>implements <name>XMLComponent</name>, <name>XMLDTDFilter</name>,
                <name>XMLDTDContentModelFilter</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Top level scope (-1). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>TOP_LEVEL_SCOPE</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// feature identifiers</comment>

            <comment type="javadoc">/** Feature identifier: validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: notify character references. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NOTIFY_CHAR_REFS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NOTIFY_CHAR_REFS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: warn on duplicate attdef */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_DUPLICATE_ATTDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_DUPLICATE_ATTDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>PARSER_SETTINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>PARSER_SETTINGS</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: grammar pool. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>GRAMMAR_POOL</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>XMLGRAMMAR_POOL_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: validator . */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DTD_VALIDATOR</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DTD_VALIDATOR_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// recognized features and properties</comment>

            <comment type="javadoc">/** Recognized features. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_FEATURES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>VALIDATION</name>
                                </expr>
                                ,
                                <expr>
                                    <name>WARN_ON_DUPLICATE_ATTDEF</name>
                                </expr>
                                ,
                                <expr>
                                    <name>NOTIFY_CHAR_REFS</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Boolean</name>
                        <index>[]</index>
                    </type>
                    <name>FEATURE_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>FALSE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized properties. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_PROPERTIES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>SYMBOL_TABLE</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ERROR_REPORTER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>GRAMMAR_POOL</name>
                                </expr>
                                ,
                                <expr>
                                    <name>DTD_VALIDATOR</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>PROPERTY_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// debugging</comment>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// features</comment>

            <comment type="javadoc">/** Validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Validation against only DTD */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fDTDValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** warn on duplicate attribute definition, this feature works only when validation
                is true */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fWarnDuplicateAttdef</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Grammar bucket. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDGrammarBucket</name>
                    </type>
                    <name>fGrammarBucket</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the validator to which we look for our grammar bucket (the</comment>
            <comment type="line">// validator needs to hold the bucket so that it can initialize</comment>
            <comment type="line">// the grammar with details like whether it's for a standalone document...</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDValidator</name>
                    </type>
                    <name>fValidator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the grammar pool we'll try to add the grammar to:</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLGrammarPool</name>
                    </type>
                    <name>fGrammarPool</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// what's our Locale?</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Locale</name>
                    </type>
                    <name>fLocale</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// handlers</comment>

            <comment type="javadoc">/** DTD handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDHandler</name>
                    </type>
                    <name>fDTDHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD source. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDSource</name>
                    </type>
                    <name>fDTDSource</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD content model handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDContentModelHandler</name>
                    </type>
                    <name>fDTDContentModelHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD content model source. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDTDContentModelSource</name>
                    </type>
                    <name>fDTDContentModelSource</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// grammars</comment>

            <comment type="javadoc">/** DTD Grammar. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDGrammar</name>
                    </type>
                    <name>fDTDGrammar</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// state</comment>

            <comment type="javadoc">/** Perform validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fPerformValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** True if in an ignore conditional section of the DTD. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fInDTDIgnore</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// information regarding the current element</comment>

            <comment type="line">// validation states</comment>

            <comment type="javadoc">/** Mixed. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fMixed</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temporary variables</comment>

            <comment type="javadoc">/** Temporary entity declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLEntityDecl</name>
                    </type>
                    <name>fEntityDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLEntityDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Notation declaration hash. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fNDataDeclNotations</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** DTD element declaration name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fDTDElementDeclName</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Mixed element type "hash". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fMixedElementTypes</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element declarations in DTD. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fDTDElementDecls</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// to check for duplicate ID or ANNOTATION attribute declare in</comment>
            <comment type="line">// ATTLIST, and misc VCs</comment>

            <comment type="javadoc">/** ID attribute names. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fTableOfIDAttributeNames</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** NOTATION attribute names. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fTableOfNOTATIONAttributeNames</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** NOTATION enumeration values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fNotationEnumVals</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLDTDProcessor</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// initialize data</comment>

                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLComponent methods</comment>
            <comment type="line">//</comment>

            <comment type="block">/*
                * Resets the component. The component can query the component manager
                * about any features and properties that affect the operation of the
                * component.
                *
                * @param componentManager The component manager.
                *
                * @throws SAXException Thrown by component on finitialization error.
                * For example, if a feature or property is
                * required for the operation of the component, the
                * component manager may throw a
                * SAXNotRecognizedException or a
                * SAXNotSupportedException.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>parser_settings</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>parser_settings</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>PARSER_SETTINGS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>parser_settings</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>parser_settings</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// parser settings have not been changed</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// sax features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidation</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>VALIDATION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidation</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fDTDValidation</name>
                                    =
                                    !(
                                    <call>
                                        <name>
                                            <name>componentManager</name>
                                            .
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Constants</name>.
                                                        <name>XERCES_FEATURE_PREFIX</name>
                                                    </name>
                                                    +
                                                    <name><name>Constants</name>.
                                                        <name>SCHEMA_VALIDATION_FEATURE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    )
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// must be in a schema-less configuration!</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fDTDValidation</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Xerces features</comment>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fWarnDuplicateAttdef</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>WARN_ON_DUPLICATE_ATTDEF</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fWarnDuplicateAttdef</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// get needed components</comment>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            =
                            (<name>XMLErrorReporter</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_PROPERTY_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>ERROR_REPORTER_PROPERTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            (<name>SymbolTable</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_PROPERTY_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>SYMBOL_TABLE_PROPERTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fGrammarPool</name>
                                    = (<name>XMLGrammarPool</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>GRAMMAR_POOL</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fGrammarPool</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidator</name>
                                    = (<name>XMLDTDValidator</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DTD_VALIDATOR</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidator</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>ClassCastException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidator</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <comment type="line">// we get our grammarBucket from the validator...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidator</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fGrammarBucket</name>
                                        =
                                        <call>
                                            <name><name>fValidator</name>.
                                                <name>getGrammarBucket</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fGrammarBucket</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// clear grammars</comment>
                    <expr_stmt>
                        <expr>
                            <name>fDTDGrammar</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// initialize state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fInDTDIgnore</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNDataDeclNotations</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// datatype validators</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fNotationEnumVals</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fNotationEnumVals</name>
                                                    = new
                                                    <call>
                                                        <name>Hashtable</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fNotationEnumVals</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>fTableOfIDAttributeNames</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fTableOfNOTATIONAttributeNames</name>
                                        = new
                                        <call>
                                            <name>Hashtable</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="javadoc">/**
                * Returns a list of feature identifiers that are recognized by
                * this component. This method may return null if no features
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedFeatures</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedFeatures():String[]</comment>

            <comment type="javadoc">/**
                * Sets the state of a feature. This method is called by the component
                * manager any time after reset when a feature changes state.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore features
                * that do not affect the operation of the component.
                *
                * @param featureId The feature identifier.
                * @param state The state of the feature.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>
            <comment type="line">// setFeature(String,boolean)</comment>

            <comment type="javadoc">/**
                * Returns a list of property identifiers that are recognized by
                * this component. This method may return null if no properties
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedProperties</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedProperties():String[]</comment>

            <comment type="javadoc">/**
                * Sets the value of a property. This method is called by the component
                * manager any time after reset when a property changes value.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore properties
                * that do not affect the operation of the component.
                *
                * @param propertyId The property identifier.
                * @param value The value of the property.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="javadoc">/**
                * Returns the default state for a feature, or null if this
                * component does not want to report a default value for this
                * feature.
                *
                * @param featureId The feature identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getFeatureDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_FEATURES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>FEATURE_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFeatureDefault(String):Boolean</comment>

            <comment type="javadoc">/**
                * Returns the default state for a property, or null if this
                * component does not want to report a default value for this
                * property.
                *
                * @param propertyId The property identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getPropertyDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_PROPERTIES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>propertyId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>PROPERTY_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPropertyDefault(String):Object</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDSource methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Sets the DTD handler.
                *
                * @param dtdHandler The DTD handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDHandler</name>
                            </type>
                            <name>dtdHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDHandler</name>
                            =
                            <name>dtdHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDHandler(XMLDTDHandler)</comment>

            <comment type="javadoc">/**
                * Returns the DTD handler.
                *
                * @return The DTD handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDHandler</name>
                </type>
                <name>getDTDHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDHandler(): XMLDTDHandler</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDContentModelSource methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Sets the DTD content model handler.
                *
                * @param dtdContentModelHandler The DTD content model handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDContentModelHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDContentModelHandler</name>
                            </type>
                            <name>dtdContentModelHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDContentModelHandler</name>
                            =
                            <name>dtdContentModelHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDContentModelHandler(XMLDTDContentModelHandler)</comment>

            <comment type="javadoc">/**
                * Gets the DTD content model handler.
                *
                * @return dtdContentModelHandler The DTD content model handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDContentModelHandler</name>
                </type>
                <name>getDTDContentModelHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDContentModelHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDContentModelHandler(): XMLDTDContentModelHandler</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDContentModelHandler and XMLDTDHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startExternalSubset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>identifier</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startExternalSubset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The end of the DTD external subset.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endExternalSubset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endExternalSubset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check standalone entity reference.
                * Made static to make common between the validator and loader.
                *
                * @param name
                *@param grammar grammar to which entity belongs
                * @param tempEntityDecl empty entity declaration to put results in
                * @param errorReporter error reporter to send errors to
                *
                * @throws XNIException Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkStandaloneEntityRef</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DTDGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityDecl</name>
                            </type>
                            <name>tempEntityDecl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>errorReporter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// check VC: Standalone Document Declartion, entities references appear in the
                        document.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>grammar</name>.
                                            <name>getEntityDeclIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entIndex</name>
                                &gt; -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>grammar</name>.
                                                <name>getEntityDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>entIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>tempEntityDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>tempEntityDecl</name>.
                                                <name>inExternal</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>errorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    "MSG_REFERENCE_TO_EXTERNALLY_DECLARED_ENTITY_WHEN_STANDALONE"
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A comment.
                *
                * @param text The text in the comment.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>comment</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>comment</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// comment(XMLString)</comment>


            <comment type="javadoc">/**
                * A processing instruction. Processing instructions consist of a
                * target name and, optionally, text data. The data is only meaningful
                * to the application.
                * &lt;p&gt;
                * Typically, a processing instruction's data will contain a series
                * of pseudo-attributes. These pseudo-attributes follow the form of
                * element attributes but are &lt;strong&gt;not&lt;/strong&gt; parsed or presented
                * to the application as anything other than text. The application is
                * responsible for parsing the data.
                *
                * @param target The target.
                * @param data The data or null if none specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>processingInstruction</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>target</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>data</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>processingInstruction</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>target</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>data</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// processingInstruction(String,XMLString)</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the DTD.
                *
                * @param locator The document locator, or null if the document
                * location cannot be reported during the parsing of
                * the document DTD. However, it is &lt;em&gt;strongly&lt;/em&gt;
                * recommended that a locator be supplied that can
                * at least report the base system identifier of the
                * DTD.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">// initialize state</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNDataDeclNotations</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fDTDElementDecls</name>.
                                    <name>removeAllElements</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// the grammar bucket's DTDGrammar will now be the</comment>
                    <comment type="line">// one we want, whether we're constructing it or not.</comment>
                    <comment type="line">// if we're not constructing it, then we should not have a reference</comment>
                    <comment type="line">// to it!</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fGrammarBucket</name>.
                                        <name>getActiveGrammar</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>isImmutable</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fDTDGrammar</name>
                                        =
                                        <call>
                                            <name><name>fGrammarBucket</name>.
                                                <name>getActiveGrammar</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startDTD</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>locator</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>locator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startDTD(XMLLocator)</comment>

            <comment type="javadoc">/**
                * Characters within an IGNORE conditional section.
                *
                * @param text The ignored text.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignoredCharacters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// ignored characters in DTD</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>ignoredCharacters</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>text</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>ignoredCharacters</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Notifies of the presence of a TextDecl line in an entity. If present,
                * this method will be called immediately following the startParameterEntity call.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is only called for external
                * parameter entities referenced in the DTD.
                *
                * @param version The XML version, or null if not specified.
                * @param encoding The IANA encoding name of the entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>textDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>textDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>version</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>textDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>version</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method notifies of the start of a parameter entity. The parameter
                * entity name start with a '%' character.
                *
                * @param name The name of the parameter entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal parameter entities).
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                                &amp;&amp; <name>fDTDGrammar</name> != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>fGrammarBucket</name>.
                                        <name>getStandalone</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkStandaloneEntityRef</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fDTDGrammar</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fEntityDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startParameterEntity</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>identifier</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startParameterEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method notifies the end of a parameter entity. Parameter entity
                * names begin with a '%' character.
                *
                * @param name The name of the parameter entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endParameterEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endParameterEntity</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endParameterEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * An element declaration.
                *
                * @param name The name of the element.
                * @param contentModel The element content model.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>elementDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>contentModel</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">//check VC: Unique Element Declaration</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fDTDElementDecls</name>.
                                                    <name>contains</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>name</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_ELEMENT_ALREADY_DECLARED"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDElementDecls</name>.
                                                            <name>addElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>elementDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>contentModel</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>elementDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>contentModel</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// elementDecl(String,String)</comment>

            <comment type="javadoc">/**
                * The start of an attribute list.
                *
                * @param elementName The name of the element that this attribute
                * list is associated with.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startAttlist</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startAttlist</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startAttlist(String)</comment>

            <comment type="javadoc">/**
                * An attribute declaration.
                *
                * @param elementName The name of the element that this attribute
                * is associated with.
                * @param attributeName The name of the attribute.
                * @param type The attribute type. This value will be one of
                * the following: "CDATA", "ENTITY", "ENTITIES",
                * "ENUMERATION", "ID", "IDREF", "IDREFS",
                * "NMTOKEN", "NMTOKENS", or "NOTATION".
                * @param enumeration If the type has the value "ENUMERATION" or
                * "NOTATION", this array holds the allowed attribute
                * values; otherwise, this array is null.
                * @param defaultType The attribute default type. This value will be
                * one of the following: "#FIXED", "#IMPLIED",
                * "#REQUIRED", or null.
                * @param defaultValue The attribute default value, or null if no
                * default value is specified.
                * @param nonNormalizedDefaultValue The attribute default value with no normalization
                * performed, or null if no default value is specified.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>attributeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attributeName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>enumeration</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>defaultType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>defaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedDefaultValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                !=
                                <name><name>XMLSymbols</name>.
                                    <name>fCDATASymbol</name>
                                </name>
                                &amp;&amp; <name>defaultValue</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>normalizeDefaultAttrValue</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>defaultValue</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>duplicateAttributeDef</name> =
                                        <init>
                                            <expr>false</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">//Get Grammar index to grammar array</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DTDGrammar</name>
                                        </type>
                                        <name>grammar</name> =
                                        <init>
                                            <expr>(<name>fDTDGrammar</name> != <name>null</name>? <name>
                                                fDTDGrammar</name>:
                                                <call>
                                                    <name><name>fGrammarBucket</name>.
                                                        <name>getActiveGrammar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>elementIndex</name>       =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>grammar</name>.
                                                        <name>getElementDeclIndex</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elementName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>grammar</name>.
                                                    <name>getAttributeDeclIndex</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>elementIndex</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>attributeName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//more than one attribute definition is provided for
                                                the same attribute of a given element type.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>duplicateAttributeDef</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">//this feature works only when validation is true.
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fWarnDuplicateAttdef</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>reportError</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLMessageFormatter</name>.
                                                                                    <name>XML_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>"MSG_DUPLICATE_ATTRIBUTE_DEFINITION"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>elementName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>attributeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLErrorReporter</name>.
                                                                                    <name>SEVERITY_WARNING</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>


                                <comment type="line">//</comment>
                                <comment type="line">// a) VC: One ID per Element Type, If duplicate ID attribute
                                </comment>
                                <comment type="line">// b) VC: ID attribute Default. if there is a declareared
                                    attribute
                                </comment>
                                <comment type="line">// default for ID it should be of type #IMPLIED or #REQUIRED
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>type</name>
                                            ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fIDSymbol</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>defaultValue</name>
                                                        != <name>null</name> &amp;&amp;
                                                        <name><name>defaultValue</name>.
                                                            <name>length</name>
                                                        </name>
                                                        != 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>defaultType</name>
                                                                    == <name>null</name> ||
                                                                    !(<name>defaultType</name> ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fIMPLIEDSymbol</name>
                                                                    </name>
                                                                    ||
                                                                    <name>defaultType</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fREQUIREDSymbol</name>
                                                                    </name>
                                                                    )
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"IDDefaultTypeInvalid"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        attributeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <call>
                                                            <name><name>fTableOfIDAttributeNames</name>.
                                                                <name>containsKey</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>elementName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fTableOfIDAttributeNames</name>.
                                                                        <name>put</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>elementName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attributeName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <comment type="line">//we should not report an error, when there
                                                            is duplicate attribute definition for given element type
                                                        </comment>
                                                        <comment type="line">//according to XML 1.0 spec, When more than
                                                            one definition is provided for the same attribute of a given
                                                        </comment>
                                                        <comment type="line">//element type, the first declaration is
                                                            binding and later declaration are *ignored*. So processor
                                                            should
                                                        </comment>
                                                        <comment type="line">//ignore the second declarations, however
                                                            an application would be warned of the duplicate attribute
                                                            defintion
                                                        </comment>
                                                        <comment type="line">// if
                                                            http://apache.org/xml/features/validation/warn-on-duplicate-attdef
                                                            feature is set to true,
                                                        </comment>
                                                        <comment type="line">// one typical case where this could be a
                                                            problem, when any XML file
                                                        </comment>
                                                        <comment type="line">// provide the ID type information through
                                                            internal subset so that it is available to the parser which
                                                            read
                                                        </comment>
                                                        <comment type="line">//only internal subset. Now that attribute
                                                            declaration(ID Type) can again be part of external parsed
                                                            entity
                                                        </comment>
                                                        <comment type="line">//referenced. At that time if parser
                                                            doesn't make this distinction it will throw an error for VC
                                                            One ID per
                                                        </comment>
                                                        <comment type="line">//Element Type, which (second defintion)
                                                            actually should be ignored. Application behavior may differ
                                                            on the
                                                        </comment>
                                                        <comment type="line">//basis of error or warning thrown. - nb.
                                                        </comment>

                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>duplicateAttributeDef</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>String</name>
                                                                            </type>
                                                                            <name>previousIDAttributeName</name> =
                                                                            <init>
                                                                                <expr>(<name>String</name>)
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fTableOfIDAttributeNames</name>
                                                                                            .
                                                                                            <name>get</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>elementName
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <comment type="line">//rule a)</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "MSG_MORE_THAN_ONE_ID_ATTRIBUTE"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>elementName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        previousIDAttributeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        attributeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">//</comment>
                                <comment type="line">// VC: One Notation Per Element Type, should check if there is a
                                </comment>
                                <comment type="line">// duplicate NOTATION attribute</comment>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>type</name>
                                            ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fNOTATIONSymbol</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// VC: Notation Attributes: all notation names in the
                                            </comment>
                                            <comment type="line">// (attribute) declaration must be declared.</comment>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name>=
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr><name>i</name>&lt;
                                                        <name><name>enumeration</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fNotationEnumVals</name>.
                                                                    <name>put</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>enumeration</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attributeName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>fTableOfNOTATIONAttributeNames</name>.
                                                                <name>containsKey</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>elementName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        == false
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fTableOfNOTATIONAttributeNames</name>.
                                                                        <name>put</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>elementName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attributeName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <comment type="line">//we should not report an error, when there
                                                            is duplicate attribute definition for given element type
                                                        </comment>
                                                        <comment type="line">//according to XML 1.0 spec, When more than
                                                            one definition is provided for the same attribute of a given
                                                        </comment>
                                                        <comment type="line">//element type, the first declaration is
                                                            binding and later declaration are *ignored*. So processor
                                                            should
                                                        </comment>
                                                        <comment type="line">//ignore the second declarations, however
                                                            an application would be warned of the duplicate attribute
                                                            defintion
                                                        </comment>
                                                        <comment type="line">// if
                                                            http://apache.org/xml/features/validation/warn-on-duplicate-attdef
                                                            feature is set to true, Application behavior may differ on
                                                            the basis of error or
                                                        </comment>
                                                        <comment type="line">//warning thrown. - nb.</comment>

                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>duplicateAttributeDef</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{

                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>String</name>
                                                                            </type>
                                                                            <name>previousNOTATIONAttributeName</name> =
                                                                            <init>
                                                                                <expr>(<name>String</name>)
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fTableOfNOTATIONAttributeNames</name>
                                                                                            .
                                                                                            <name>get</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>elementName
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "MSG_MORE_THAN_ONE_NOTATION_ATTRIBUTE"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>elementName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        previousNOTATIONAttributeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        attributeName
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// VC: No Duplicate Tokens</comment>
                                <comment type="line">// XML 1.0 SE Errata - E2</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>type</name>
                                            ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fENUMERATIONSymbol</name>
                                            </name>
                                            || <name>type</name> ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fNOTATIONSymbol</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <label><name>outer</name>:
                                            </label>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>enumeration</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr>++
                                                        <name>i</name>
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>j</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>i</name>
                                                                        + 1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>j</name>
                                                                &lt;
                                                                <name><name>enumeration</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr>++
                                                                <name>j</name>
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>
                                                                            <name>enumeration</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        .
                                                                        <call>
                                                                            <name>equals</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>enumeration</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>j</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">// Only report the first
                                                                            uniqueness violation. There could be others,
                                                                        </comment>
                                                                        <comment type="line">// but additional overhead
                                                                            would be incurred tracking unique tokens
                                                                        </comment>
                                                                        <comment type="line">// that have already been
                                                                            encountered. -- mrglavas
                                                                        </comment>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fErrorReporter</name>.
                                                                                        <name>reportError</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    XMLMessageFormatter</name>
                                                                                                    .
                                                                                                    <name>XML_DOMAIN
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>type</name>
                                                                                                ==
                                                                                                <name><name>
                                                                                                    XMLSymbols</name>.
                                                                                                    <name>
                                                                                                        fENUMERATIONSymbol
                                                                                                    </name>
                                                                                                </name>
                                                                                                ?
                                                                                                "MSG_DISTINCT_TOKENS_IN_ENUMERATION"
                                                                                                :
                                                                                                "MSG_DISTINCT_NOTATION_IN_ENUMERATION"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>Object</name>
                                                                                                    <index>[]</index>
                                                                                                </name>
                                                                                                <block>{
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            elementName
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ,
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                enumeration
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        i
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ,
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            attributeName
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    }
                                                                                                </block>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    XMLErrorReporter</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        SEVERITY_ERROR
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <break>break outer;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// VC: Attribute Default Legal</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>ok</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultValue</name>
                                            != <name>null</name> &amp;&amp;
                                            (<name>defaultType</name> == <name>null</name> ||
                                            (<name>defaultType</name> != <name>null</name> &amp;&amp; <name>
                                            defaultType
                                        </name> ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fFIXEDSymbol</name>
                                            </name>
                                            ))
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>value</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>defaultValue</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>type</name>
                                                        ==
                                                        <name><name>XMLSymbols</name>.
                                                            <name>fNMTOKENSSymbol</name>
                                                        </name>
                                                        ||
                                                        <name>type</name>
                                                        ==
                                                        <name><name>XMLSymbols</name>.
                                                            <name>fENTITIESSymbol</name>
                                                        </name>
                                                        ||
                                                        <name>type</name>
                                                        ==
                                                        <name><name>XMLSymbols</name>.
                                                            <name>fIDREFSSymbol</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{

                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>StringTokenizer</name>
                                                                </type>
                                                                <name>tokenizer</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>StringTokenizer</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>" "</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>tokenizer</name>.
                                                                            <name>hasMoreTokens</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <while>while
                                                                        <condition>(<expr>true</expr>)
                                                                        </condition>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>String</name>
                                                                                    </type>
                                                                                    <name>nmtoken</name> =
                                                                                    <init>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    tokenizer</name>.
                                                                                                    <name>nextToken
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>type</name>
                                                                                        ==
                                                                                        <name><name>XMLSymbols</name>.
                                                                                            <name>fNMTOKENSSymbol</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>!
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            isValidNmtoken
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        nmtoken
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <block>{
                                                                                                    <expr_stmt>
                                                                                                        <expr>
                                                                                                            <name>ok
                                                                                                            </name>
                                                                                                            = false
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </expr_stmt>
                                                                                                    <break>break;
                                                                                                    </break>
                                                                                                    }
                                                                                                </block>
                                                                                            </then>
                                                                                        </if>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>type</name>
                                                                                                ==
                                                                                                <name><name>
                                                                                                    XMLSymbols</name>.
                                                                                                    <name>
                                                                                                        fENTITIESSymbol
                                                                                                    </name>
                                                                                                </name>
                                                                                                ||
                                                                                                <name>type</name>
                                                                                                ==
                                                                                                <name><name>
                                                                                                    XMLSymbols</name>.
                                                                                                    <name>
                                                                                                        fIDREFSSymbol
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>!
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    isValidName
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                nmtoken
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <expr_stmt>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        ok
                                                                                                                    </name>
                                                                                                                    =
                                                                                                                    false
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </expr_stmt>
                                                                                                            <break>
                                                                                                                break;
                                                                                                            </break>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                </if>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>!
                                                                                        <call>
                                                                                            <name><name>tokenizer</name>
                                                                                                .
                                                                                                <name>hasMoreTokens
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <break>break;</break>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </while>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>

                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fENTITYSymbol</name>
                                                                    </name>
                                                                    ||
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fIDSymbol</name>
                                                                    </name>
                                                                    ||
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fIDREFSymbol</name>
                                                                    </name>
                                                                    ||
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fNOTATIONSymbol</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{

                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>!
                                                                                <call>
                                                                                    <name>isValidName</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>value</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>ok</name>
                                                                                        = false
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>

                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>type</name>
                                                                            ==
                                                                            <name><name>XMLSymbols</name>.
                                                                                <name>fNMTOKENSymbol</name>
                                                                            </name>
                                                                            ||
                                                                            <name>type</name>
                                                                            ==
                                                                            <name><name>XMLSymbols</name>.
                                                                                <name>fENUMERATIONSymbol</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{

                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>!
                                                                                        <call>
                                                                                            <name>isValidNmtoken</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>value
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>ok</name>
                                                                                                = false
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                            </else>
                                                        </if>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fNOTATIONSymbol</name>
                                                                    </name>
                                                                    ||
                                                                    <name>type</name>
                                                                    ==
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>fENUMERATIONSymbol</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>ok</name>
                                                                            = false
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <for>for (
                                                                        <init>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>i</name>=
                                                                                <init>
                                                                                    <expr>0</expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </init>
                                                                        <condition>
                                                                            <expr><name>i</name>&lt;
                                                                                <name><name>enumeration</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </condition>
                                                                        <incr>
                                                                            <expr><name>i</name>++
                                                                            </expr>
                                                                        </incr>
                                                                        )
                                                                        <block>{
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                defaultValue</name>.
                                                                                                <name>equals</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                enumeration
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        i
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>ok</name>
                                                                                                = true
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </for>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>

                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <name>ok</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>reportError</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLMessageFormatter</name>.
                                                                                    <name>XML_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>"MSG_ATT_DEFAULT_INVALID"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>attributeName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLErrorReporter</name>.
                                                                                    <name>SEVERITY_ERROR</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>attributeDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>attributeName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>enumeration</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>defaultType</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>defaultValue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>nonNormalizedDefaultValue</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>attributeDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributeName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>enumeration</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>defaultType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>defaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>nonNormalizedDefaultValue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// attributeDecl(String,String,String,String[],String,XMLString, XMLString,
                Augmentations)
            </comment>

            <comment type="javadoc">/**
                * The end of an attribute list.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endAttlist</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endAttlist</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endAttlist</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endAttlist()</comment>

            <comment type="javadoc">/**
                * An internal entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start with
                * '%', whereas the name of a general entity is just the
                * entity name.
                * @param text The value of the entity.
                * @param nonNormalizedText The non-normalized value of the entity. This
                * value contains the same sequence of characters that was in
                * the internal entity declaration, without any entity
                * references expanded.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>internalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedText</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DTDGrammar</name>
                            </type>
                            <name>grammar</name> =
                            <init>
                                <expr>(<name>fDTDGrammar</name> != <name>null</name>? <name>fDTDGrammar</name>:
                                    <call>
                                        <name><name>fGrammarBucket</name>.
                                            <name>getActiveGrammar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    )
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>grammar</name>.
                                            <name>getEntityDeclIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//If the same entity is declared more than once, the first declaration
                    </comment>
                    <comment type="line">//encountered is binding, SAX requires only effective(first) declaration
                    </comment>
                    <comment type="line">//to be reported to the application</comment>

                    <comment type="line">//REVISIT: Does it make sense to pass duplicate Entity information across
                    </comment>
                    <comment type="line">//the pipeline -- nb?</comment>

                    <comment type="line">//its a new entity and hasn't been declared.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//store internal entity declaration in grammar</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDGrammar</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDGrammar</name>.
                                                        <name>internalEntityDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>text</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>nonNormalizedText</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>augs</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <comment type="line">// call handlers</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDHandler</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDHandler</name>.
                                                            <name>internalEntityDecl</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>nonNormalizedText</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// internalEntityDecl(String,XMLString,XMLString)</comment>


            <comment type="javadoc">/**
                * An external entity declaration.
                *
                * @param name The name of the entity. Parameter entity names start
                * with '%', whereas the name of a general entity is just
                * the entity name.
                * @param identifier An object containing all location information
                * pertinent to this external entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>externalEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DTDGrammar</name>
                            </type>
                            <name>grammar</name> =
                            <init>
                                <expr>(<name>fDTDGrammar</name> != <name>null</name>? <name>fDTDGrammar</name>:
                                    <call>
                                        <name><name>fGrammarBucket</name>.
                                            <name>getActiveGrammar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    )
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>grammar</name>.
                                            <name>getEntityDeclIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//If the same entity is declared more than once, the first declaration
                    </comment>
                    <comment type="line">//encountered is binding, SAX requires only effective(first) declaration
                    </comment>
                    <comment type="line">//to be reported to the application</comment>

                    <comment type="line">//REVISIT: Does it make sense to pass duplicate entity information across
                    </comment>
                    <comment type="line">//the pipeline -- nb?</comment>

                    <comment type="line">//its a new entity and hasn't been declared.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//store external entity declaration in grammar</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDGrammar</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fDTDGrammar</name>.
                                                        <name>externalEntityDecl</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>identifier</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>augs</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <comment type="line">// call handlers</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDTDHandler</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDTDHandler</name>.
                                                            <name>externalEntityDecl</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>identifier</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// externalEntityDecl(String,XMLResourceIdentifier, Augmentations)</comment>

            <comment type="javadoc">/**
                * An unparsed entity declaration.
                *
                * @param name The name of the entity.
                * @param identifier An object containing all location information
                * pertinent to this entity.
                * @param notation The name of the notation.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>unparsedEntityDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// VC: Notation declared, in the production of NDataDecl</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fNDataDeclNotations</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>notation</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>unparsedEntityDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>identifier</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>notation</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>unparsedEntityDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>notation</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// unparsedEntityDecl(String,XMLResourceIdentifier,String,Augmentations)</comment>

            <comment type="javadoc">/**
                * A notation declaration
                *
                * @param name The name of the notation.
                * @param identifier An object containing all location information
                * pertinent to this notation.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notationDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// VC: Unique Notation Name</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DTDGrammar</name>
                                        </type>
                                        <name>grammar</name> =
                                        <init>
                                            <expr>(<name>fDTDGrammar</name> != <name>null</name> ? <name>fDTDGrammar
                                            </name> :
                                                <call>
                                                    <name><name>fGrammarBucket</name>.
                                                        <name>getActiveGrammar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>grammar</name>.
                                                    <name>getNotationDeclIndex</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>name</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"UniqueNotationName"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>notationDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>identifier</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>notationDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// notationDecl(String,XMLResourceIdentifier, Augmentations)</comment>

            <comment type="javadoc">/**
                * The start of a conditional section.
                *
                * @param type The type of the conditional section. This value will
                * either be CONDITIONAL_INCLUDE or CONDITIONAL_IGNORE.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #CONDITIONAL_INCLUDE
                * @see #CONDITIONAL_IGNORE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// set state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fInDTDIgnore</name>
                            = <name>type</name> ==
                            <name><name>XMLDTDHandler</name>.
                                <name>CONDITIONAL_IGNORE</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startConditional</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>startConditional</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startConditional(short)</comment>

            <comment type="javadoc">/**
                * The end of a conditional section.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endConditional</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// set state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fInDTDIgnore</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endConditional</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endConditional</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endConditional()</comment>

            <comment type="javadoc">/**
                * The end of the DTD.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDTD</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">// save grammar</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>endDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fGrammarPool</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fGrammarPool</name>.
                                                        <name>cacheGrammars</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLGrammarDescription</name>.
                                                                    <name>XML_DTD</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Grammar</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>fDTDGrammar</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// check VC: Notation declared, in the production of NDataDecl</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DTDGrammar</name>
                                        </type>
                                        <name>grammar</name> =
                                        <init>
                                            <expr>(<name>fDTDGrammar</name> != <name>null</name>? <name>
                                                fDTDGrammar</name>:
                                                <call>
                                                    <name><name>fGrammarBucket</name>.
                                                        <name>getActiveGrammar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                )
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// VC : Notation Declared. for external entity declaration
                                    [Production 76].
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Enumeration</name>
                                        </type>
                                        <name>entities</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fNDataDeclNotations</name>.
                                                        <name>keys</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>entities</name>.
                                                    <name>hasMoreElements</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>entity</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>entities</name>.
                                                                <name>nextElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>notation</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>fNDataDeclNotations</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>entity</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>grammar</name>.
                                                            <name>getNotationDeclIndex</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>notation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            "MSG_NOTATION_NOT_DECLARED_FOR_UNPARSED_ENTITYDECL"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>entity</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>notation</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>

                                <comment type="line">// VC: Notation Attributes:</comment>
                                <comment type="line">// all notation names in the (attribute) declaration must be
                                    declared.
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Enumeration</name>
                                        </type>
                                        <name>notationVals</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fNotationEnumVals</name>.
                                                        <name>keys</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>notationVals</name>.
                                                    <name>hasMoreElements</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>notation</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>notationVals</name>.
                                                                <name>nextElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>attributeName</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>fNotationEnumVals</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>notation</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>grammar</name>.
                                                            <name>getNotationDeclIndex</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>notation</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            "MSG_NOTATION_NOT_DECLARED_FOR_NOTATIONTYPE_ATTRIBUTE"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>attributeName</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>notation</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>

                                <comment type="line">// VC: No Notation on Empty Element</comment>
                                <comment type="line">// An attribute of type NOTATION must not be declared on an element
                                    declared EMPTY.
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Enumeration</name>
                                        </type>
                                        <name>elementsWithNotations</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fTableOfNOTATIONAttributeNames</name>.
                                                        <name>keys</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>elementsWithNotations</name>.
                                                    <name>hasMoreElements</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>elementName</name> =
                                                <init>
                                                    <expr>(<name>String</name>)
                                                        <call>
                                                            <name><name>elementsWithNotations</name>.
                                                                <name>nextElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>elementIndex</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>grammar</name>.
                                                                <name>getElementDeclIndex</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>elementName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>grammar</name>.
                                                            <name>getContentSpecType</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elementIndex</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ==
                                                    <name><name>XMLElementDecl</name>.
                                                        <name>TYPE_EMPTY</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>attributeName</name> =
                                                            <init>
                                                                <expr>(<name>String</name>)
                                                                    <call>
                                                                        <name><name>
                                                                            fTableOfNOTATIONAttributeNames</name>.
                                                                            <name>get</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>elementName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"NoNotationOnEmptyElement"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>elementName</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>attributeName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>

                                <expr_stmt>
                                    <expr>
                                        <name>fTableOfIDAttributeNames</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//should be safe to release these references</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fTableOfNOTATIONAttributeNames</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDHandler</name>.
                                                <name>endDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endDTD()</comment>

            <comment type="line">// sets the XMLDTDSource of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDSource(XMLDTDSource)</comment>

            <comment type="line">// returns the XMLDTDSource of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDSource</name>
                </type>
                <name>getDTDSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDSource(): XMLDTDSource</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDTDContentModelHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// sets the XMLContentModelDTDSource of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDTDContentModelSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDTDContentModelSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDTDContentModelSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDTDContentModelSource(XMLDTDContentModelSource)</comment>

            <comment type="line">// returns the XMLDTDSource of this handler</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDTDContentModelSource</name>
                </type>
                <name>getDTDContentModelSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDTDContentModelSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDTDContentModelSource(): XMLDTDContentModelSource</comment>


            <comment type="javadoc">/**
                * The start of a content model. Depending on the type of the content
                * model, specific methods may be called between the call to the
                * startContentModel method and the call to the endContentModel method.
                *
                * @param elementName The name of the element.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fDTDElementDeclName</name>
                                        =
                                        <name>elementName</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fMixedElementTypes</name>.
                                                <name>removeAllElements</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startContentModel</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>startContentModel</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startContentModel(String)</comment>

            <comment type="javadoc">/**
                * A content model of ANY.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #empty
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>any</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>any</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>any</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// any()</comment>

            <comment type="javadoc">/**
                * A content model of EMPTY.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #any
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>empty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>empty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>empty</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// empty()</comment>

            <comment type="javadoc">/**
                * A start of either a mixed or children content model. A mixed
                * content model will immediately be followed by a call to the
                * &lt;code&gt;pcdata()&lt;/code&gt; method. A children content model will
                * contain additional groups and/or elements.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #any
                * @see #empty
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>fMixed</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>startGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>startGroup</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startGroup()</comment>

            <comment type="javadoc">/**
                * The appearance of "#PCDATA" within a group signifying a
                * mixed content model. This method will be the first called
                * following the content model's &lt;code&gt;startGroup()&lt;/code&gt;.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #startGroup
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>pcdata</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fMixed</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>pcdata</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>pcdata</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// pcdata()</comment>

            <comment type="javadoc">/**
                * A referenced element in a mixed or children content model.
                *
                * @param elementName The name of the referenced element.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>element</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check VC: No duplicate Types, in a single mixed-content declaration
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fMixed</name>
                                &amp;&amp;
                                <name>fValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fMixedElementTypes</name>.
                                                    <name>contains</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>elementName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"DuplicateTypeInMixedContent"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>fDTDElementDeclName</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>elementName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fMixedElementTypes</name>.
                                                            <name>addElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elementName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>element</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementName</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>element</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>elementName</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// childrenElement(String)</comment>

            <comment type="javadoc">/**
                * The separator between choices or sequences of a mixed or children
                * content model.
                *
                * @param separator The type of children separator.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #SEPARATOR_CHOICE
                * @see #SEPARATOR_SEQUENCE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>separator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>separator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>separator</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>separator</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>separator</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>separator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// separator(short)</comment>

            <comment type="javadoc">/**
                * The occurrence count for a child in a children content model or
                * for the mixed content model group.
                *
                * @param occurrence The occurrence count for the last element
                * or group.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                *
                * @see #OCCURS_ZERO_OR_ONE
                * @see #OCCURS_ZERO_OR_MORE
                * @see #OCCURS_ONE_OR_MORE
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>occurrence</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>occurrence</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>occurrence</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>occurrence</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>occurrence</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>occurrence</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// occurrence(short)</comment>

            <comment type="javadoc">/**
                * The end of a group for mixed or children content models.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>endGroup</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endGroup()</comment>

            <comment type="javadoc">/**
                * The end of a content model.
                *
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endContentModel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>endContentModel</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDContentModelHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDContentModelHandler</name>.
                                                <name>endContentModel</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endContentModel()</comment>

            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Normalize the attribute value of a non CDATA default attribute
                * collapsing sequences of space characters (x20)
                *
                * @param value The value to normalize
                * @return Whether the value was changed or not.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>normalizeDefaultAttrValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>skipSpace</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// skip leading spaces</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>current</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                    +
                                    <name><name>value</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>value</name>.
                                            <name>ch</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        == ' '
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>skipSpace</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// take the first whitespace as a space and
                                                        skip the others
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>value</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr><name>current</name>++
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = ' '
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>skipSpace</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// just skip it.</comment>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// simply shift non space chars if needed</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>current</name>
                                                    !=
                                                    <name>i</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>value</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>current</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name><name>value</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr><name>current</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>skipSpace</name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>
                    <if>if
                        <condition>(
                            <expr>
                                <name>current</name>
                                !=
                                <name>end</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>skipSpace</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// if we finished on a space trim it</comment>
                                            <expr_stmt>
                                                <expr><name>current</name>--
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// set the new value length</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>length</name>
                                        </name>
                                        = <name>current</name> -
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidNmtoken</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nmtoken</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isValidNmtoken</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>nmtoken</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidNmtoken(String): boolean</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isValidName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidName(String): boolean</comment>
            }
        </block>
    </class>
    <comment type="line">// class XMLDTDProcessor</comment>
</unit>
