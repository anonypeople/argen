<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\dtd\XMLDTDValidator.java">
    <comment type="block">/*
        * Copyright 1999-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>dtd</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>RevalidationHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLEntityManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dtd</name>.<name>
            models</name>.
            <name>ContentModelValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>DTDDVFactory</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>DatatypeValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>validation</name>.
            <name>ValidationManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>validation</name>.
            <name>ValidationState</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLDocumentHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>Grammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarPool</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDocumentFilter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLDocumentSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The DTD validator. The validator implements a document
        * filter: receiving document events from the scanner; validating
        * the content and structure; augmenting the InfoSet, if applicable;
        * and notifying the parser of the information resulting from the
        * validation process.
        * &lt;p&gt; Formerly, this component also handled DTD events and grammar construction.
        * To facilitate the development of a meaningful DTD grammar caching/preparsing
        * framework, this functionality has been moved into the XMLDTDLoader
        * class. Therefore, this class no longer implements the DTDFilter
        * or DTDContentModelFilter interfaces.
        * &lt;p&gt;
        * This component requires the following features and properties from the
        * component manager that uses it:
        * &lt;ul&gt;
        * &lt;li&gt;http://xml.org/sax/features/namespaces&lt;/li&gt;
        * &lt;li&gt;http://xml.org/sax/features/validation&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/validation/dynamic&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/symbol-table&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/grammar-pool&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/datatype-validator-factory&lt;/li&gt;
        * &lt;/ul&gt;
        *
        * @xerces.internal
        *
        * @author Eric Ye, IBM
        * @author Andy Clark, IBM
        * @author Jeffrey Rodriguez IBM
        * @author Neil Graham, IBM
        *
        * @version $Id: XMLDTDValidator.java,v 1.62 2005/05/10 15:36:42 ankitp Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XMLDTDValidator</name>
        <super>
            <implements>implements <name>XMLComponent</name>, <name>XMLDocumentFilter</name>, <name>
                XMLDTDValidatorFilter</name>,
                <name>RevalidationHandler</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Symbol: "&amp;lt;&amp;lt;datatypes&gt;&gt;". */</comment>

            <comment type="javadoc">/** Top level scope (-1). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>TOP_LEVEL_SCOPE</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// feature identifiers</comment>

            <comment type="javadoc">/** Feature identifier: namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NAMESPACES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NAMESPACES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: dynamic validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DYNAMIC_VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DYNAMIC_VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: warn on duplicate attdef */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_DUPLICATE_ATTDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_DUPLICATE_ATTDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>PARSER_SETTINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>PARSER_SETTINGS</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: grammar pool. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>GRAMMAR_POOL</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>XMLGRAMMAR_POOL_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: datatype validator factory. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DATATYPE_VALIDATOR_FACTORY</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>DATATYPE_VALIDATOR_FACTORY_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// property identifier: ValidationManager</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// recognized features and properties</comment>

            <comment type="javadoc">/** Recognized features. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_FEATURES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>NAMESPACES</name>
                                </expr>
                                ,
                                <expr>
                                    <name>VALIDATION</name>
                                </expr>
                                ,
                                <expr>
                                    <name>DYNAMIC_VALIDATION</name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Boolean</name>
                        <index>[]</index>
                    </type>
                    <name>FEATURE_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>FALSE</name>
                                    </name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized properties. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_PROPERTIES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>SYMBOL_TABLE</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ERROR_REPORTER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>GRAMMAR_POOL</name>
                                </expr>
                                ,
                                <expr>
                                    <name>DATATYPE_VALIDATOR_FACTORY</name>
                                </expr>
                                ,
                                <expr>
                                    <name>VALIDATION_MANAGER</name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>PROPERTY_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// debugging</comment>

            <comment type="javadoc">/** Compile to true to debug attributes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ATTRIBUTES</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug element children. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ELEMENT_CHILDREN</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// updated during reset</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ValidationManager</name>
                    </type>
                    <name>fValidationManager</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// validation state</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ValidationState</name>
                    </type>
                    <name>fValidationState</name>   =
                    <init>
                        <expr>new
                            <call>
                                <name>ValidationState</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// features</comment>

            <comment type="javadoc">/** Namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNamespaces</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Validation against only DTD */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fDTDValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Dynamic validation. This state of this feature is only useful when
                * the validation feature is set to &lt;code&gt;true&lt;/code&gt;.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fDynamicValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** warn on duplicate attribute definition, this feature works only when validation
                is true */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fWarnDuplicateAttdef</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// the grammar pool</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLGrammarPool</name>
                    </type>
                    <name>fGrammarPool</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Grammar bucket. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDGrammarBucket</name>
                    </type>
                    <name>fGrammarBucket</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="block">/* location of the document as passed in from startDocument call */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLLocator</name>
                    </type>
                    <name>fDocLocation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Namespace support. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>NamespaceContext</name>
                    </type>
                    <name>fNamespaceContext</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator factory. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDDVFactory</name>
                    </type>
                    <name>fDatatypeValidatorFactory</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// handlers</comment>

            <comment type="javadoc">/** Document handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDocumentHandler</name>
                    </type>
                    <name>fDocumentHandler</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLDocumentSource</name>
                    </type>
                    <name>fDocumentSource</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// grammars</comment>

            <comment type="javadoc">/** DTD Grammar. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DTDGrammar</name>
                    </type>
                    <name>fDTDGrammar</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// state</comment>

            <comment type="javadoc">/** True if seen DOCTYPE declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fSeenDoctypeDecl</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Perform validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fPerformValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Schema type: None, DTD, Schema */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>fSchemaType</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// information regarding the current element</comment>

            <comment type="javadoc">/** Current element name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>QName</name>
                    </type>
                    <name>fCurrentElement</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current element index. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fCurrentElementIndex</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current content spec type. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fCurrentContentSpecType</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The root element name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>QName</name>
                    </type>
                    <name>fRootElement</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fInCDATASection</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// element stack</comment>

            <comment type="javadoc">/** Element index stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fElementIndexStack</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[<expr>8</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Content spec type stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fContentSpecTypeStack</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[<expr>8</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element name stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                        <index>[]</index>
                    </type>
                    <name>fElementQNamePartsStack</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>QName</name>
                                <index>[<expr>8</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// children list and offset stack</comment>

            <comment type="javadoc">/**
                * Element children. This data structure is a growing stack that
                * holds the children of elements from the root to the current
                * element depth. This structure never gets "deeper" than the
                * deepest element. Space is re-used once each element is closed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This is much more efficient use of memory
                * than creating new arrays for each element depth.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The use of this data structure is for
                * validation "on the way out". If the validation model changes to
                * "on the way in", then this data structure is not needed.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                        <index>[]</index>
                    </type>
                    <name>fElementChildren</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>QName</name>
                                <index>[<expr>32</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element children count. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fElementChildrenLength</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Element children offset stack. This stack refers to offsets
                * into the &lt;code&gt;fElementChildren&lt;/code&gt; array.
                * @see #fElementChildren
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fElementChildrenOffsetStack</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>int</name>
                                <index>[<expr>32</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Element depth. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fElementDepth</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// validation states</comment>

            <comment type="javadoc">/** True if seen the root element. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fSeenRootElement</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** True if inside of element content. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fInElementContent</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temporary variables</comment>

            <comment type="javadoc">/** Temporary element declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLElementDecl</name>
                    </type>
                    <name>fTempElementDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLElementDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary atribute declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLAttributeDecl</name>
                    </type>
                    <name>fTempAttDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLAttributeDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary entity declaration. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLEntityDecl</name>
                    </type>
                    <name>fEntityDecl</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLEntityDecl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary qualified name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>QName</name>
                    </type>
                    <name>fTempQName</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Temporary string buffers. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StringBuffer</name>
                    </type>
                    <name>fBuffer</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>StringBuffer</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// symbols: general</comment>

            <comment type="line">// attribute validators</comment>

            <comment type="javadoc">/** Datatype validator: ID. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValID</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: IDREF. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValIDRef</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: IDREFS. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValIDRefs</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: ENTITY. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValENTITY</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: ENTITIES. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValENTITIES</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: NMTOKEN. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValNMTOKEN</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: NMTOKENS. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValNMTOKENS</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Datatype validator: NOTATION. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>DatatypeValidator</name>
                    </type>
                    <name>fValNOTATION</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// to check for duplicate ID or ANNOTATION attribute declare in</comment>
            <comment type="line">// ATTLIST, and misc VCs</comment>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLDTDValidator</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// initialize data</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fElementQNamePartsStack</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fElementQNamePartsStack</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>QName</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>fGrammarBucket</name>
                            = new
                            <call>
                                <name>DTDGrammarBucket</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <function>
                <type>
                    <name>DTDGrammarBucket</name>
                </type>
                <name>getGrammarBucket</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fGrammarBucket</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getGrammarBucket(): DTDGrammarBucket</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLComponent methods</comment>
            <comment type="line">//</comment>

            <comment type="block">/*
                * Resets the component. The component can query the component manager
                * about any features and properties that affect the operation of the
                * component.
                *
                * @param componentManager The component manager.
                *
                * @throws SAXException Thrown by component on finitialization error.
                * For example, if a feature or property is
                * required for the operation of the component, the
                * component manager may throw a
                * SAXNotRecognizedException or a
                * SAXNotSupportedException.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// clear grammars</comment>
                    <expr_stmt>
                        <expr>
                            <name>fDTDGrammar</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSeenDoctypeDecl</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fInCDATASection</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// initialize state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fSeenRootElement</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fInElementContent</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentElementIndex</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentContentSpecType</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fRootElement</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fValidationState</name>.
                                    <name>resetIDTables</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGrammarBucket</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fElementDepth</name>
                            = -1
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fElementChildrenLength</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>parser_settings</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>parser_settings</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>PARSER_SETTINGS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>parser_settings</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>parser_settings</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// parser settings have not been changed</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fValidationManager</name>.
                                                <name>addValidationState</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fValidationState</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// sax features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fNamespaces</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>NAMESPACES</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNamespaces</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidation</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>VALIDATION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidation</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fDTDValidation</name>
                                    = !(
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Constants</name>.
                                                        <name>XERCES_FEATURE_PREFIX</name>
                                                    </name>
                                                    +
                                                    <name><name>Constants</name>.
                                                        <name>SCHEMA_VALIDATION_FEATURE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    )
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// must be in a schema-less configuration!</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fDTDValidation</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// Xerces features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fDynamicValidation</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DYNAMIC_VALIDATION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fDynamicValidation</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fWarnDuplicateAttdef</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>WARN_ON_DUPLICATE_ATTDEF</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fWarnDuplicateAttdef</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fSchemaType</name>
                                    = (<name>String</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Constants</name>.
                                                        <name>JAXP_PROPERTY_PREFIX</name>
                                                    </name>
                                                    +
                                                    <name><name>Constants</name>.
                                                        <name>SCHEMA_LANGUAGE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSchemaType</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <expr_stmt>
                        <expr><name>fValidationManager</name>= (<name>ValidationManager</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>VALIDATION_MANAGER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fValidationManager</name>.
                                    <name>addValidationState</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fValidationState</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fValidationState</name>.
                                    <name>setUsingNamespaces</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fNamespaces</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// get needed components</comment>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            = (<name>XMLErrorReporter</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_PROPERTY_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>ERROR_REPORTER_PROPERTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            = (<name>SymbolTable</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_PROPERTY_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>SYMBOL_TABLE_PROPERTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr><name>fGrammarPool</name>= (<name>XMLGrammarPool</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>GRAMMAR_POOL</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fGrammarPool</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <expr_stmt>
                        <expr>
                            <name>fDatatypeValidatorFactory</name>
                            = (<name>DTDDVFactory</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XERCES_PROPERTY_PREFIX</name>
                                            </name>
                                            +
                                            <name><name>Constants</name>.
                                                <name>DATATYPE_VALIDATOR_FACTORY_PROPERTY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>init</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="javadoc">/**
                * Returns a list of feature identifiers that are recognized by
                * this component. This method may return null if no features
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedFeatures</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedFeatures():String[]</comment>

            <comment type="javadoc">/**
                * Sets the state of a feature. This method is called by the component
                * manager any time after reset when a feature changes state.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore features
                * that do not affect the operation of the component.
                *
                * @param featureId The feature identifier.
                * @param state The state of the feature.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>
            <comment type="line">// setFeature(String,boolean)</comment>

            <comment type="javadoc">/**
                * Returns a list of property identifiers that are recognized by
                * this component. This method may return null if no properties
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedProperties</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedProperties():String[]</comment>

            <comment type="javadoc">/**
                * Sets the value of a property. This method is called by the component
                * manager any time after reset when a property changes value.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore properties
                * that do not affect the operation of the component.
                *
                * @param propertyId The property identifier.
                * @param value The value of the property.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="javadoc">/**
                * Returns the default state for a feature, or null if this
                * component does not want to report a default value for this
                * feature.
                *
                * @param featureId The feature identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getFeatureDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_FEATURES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>FEATURE_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFeatureDefault(String):Boolean</comment>

            <comment type="javadoc">/**
                * Returns the default state for a property, or null if this
                * component does not want to report a default value for this
                * property.
                *
                * @param propertyId The property identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getPropertyDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_PROPERTIES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>propertyId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>PROPERTY_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPropertyDefault(String):Object</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLDocumentSource methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Sets the document handler to receive information about the document. */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDocumentHandler</name>
                            </type>
                            <name>documentHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentHandler</name>
                            =
                            <name>documentHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDocumentHandler(XMLDocumentHandler)</comment>

            <comment type="javadoc">/** Returns the document handler */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDocumentHandler</name>
                </type>
                <name>getDocumentHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDocumentHandler</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDocumentHandler(): XMLDocumentHandler</comment>


            <comment type="line">//</comment>
            <comment type="line">// XMLDocumentHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Sets the document source */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDocumentSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLDocumentSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fDocumentSource</name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setDocumentSource</comment>

            <comment type="javadoc">/** Returns the document source */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLDocumentSource</name>
                </type>
                <name>getDocumentSource</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fDocumentSource</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDocumentSource</comment>

            <comment type="javadoc">/**
                * The start of the document.
                *
                * @param locator The system identifier of the entity if the entity
                * is external, null otherwise.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal entities or a document entity that is
                * parsed from a java.io.Reader).
                * @param namespaceContext
                * The namespace context in effect at the
                * start of this document.
                * This object represents the current context.
                * Implementors of this class are responsible
                * for copying the namespace bindings from the
                * the current context (and its parent contexts)
                * if that information is important.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLLocator</name>
                            </type>
                            <name>locator</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>namespaceContext</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <comment type="line">// get initial grammars</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fGrammarPool</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Grammar</name>
                                            <index>[]</index>
                                        </type>
                                        <name>grammars</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fGrammarPool</name>.
                                                        <name>retrieveInitialGrammarSet</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLGrammarDescription</name>.
                                                                    <name>XML_DTD</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for(
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr><name>i</name>&lt;
                                            <name><name>grammars</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fGrammarBucket</name>.
                                                        <name>putGrammar</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>DTDGrammar</name>)
                                                                <name>
                                                                    <name>grammars</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fDocLocation</name>
                            =
                            <name>locator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaceContext</name>
                            =
                            <name>namespaceContext</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startDocument</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>locator</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>namespaceContext</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startDocument(XMLLocator,String)</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of an XMLDecl line in the document. If
                * present, this method will be called immediately following the
                * startDocument call.
                *
                * @param version The XML version.
                * @param encoding The IANA encoding name of the document, or null if
                * not specified.
                * @param standalone The standalone value, or null if not specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>xmlDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>standalone</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// save standalone state</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGrammarBucket</name>.
                                    <name>setStandalone</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>standalone</name>
                                            != <name>null</name> &amp;&amp;
                                            <call>
                                                <name><name>standalone</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"yes"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>xmlDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>version</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>standalone</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// xmlDecl(String,String,String)</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of the DOCTYPE line in the document.
                *
                * @param rootElement The name of the root element.
                * @param publicId The public identifier if an external DTD or null
                * if the external DTD is specified using SYSTEM.
                * @param systemId The system identifier if an external DTD, null
                * otherwise.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>doctypeDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rootElement</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// save root element state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fSeenDoctypeDecl</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fRootElement</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rootElement</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rootElement</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// find or create grammar:</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>eid</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>eid</name>
                                    =
                                    <call>
                                        <name><name>XMLEntityManager</name>.
                                            <name>expandSystemId</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocLocation</name>.
                                                            <name>getExpandedSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name><name>java</name>.<name>io</name>.
                                            <name>IOException</name>
                                        </name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                }
                            </block>
                        </catch>
                    </try>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLDTDDescription</name>
                            </type>
                            <name>grammarDesc</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XMLDTDDescription</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>publicId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocLocation</name>.
                                                            <name>getExpandedSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>eid</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>rootElement</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fDTDGrammar</name>
                            =
                            <call>
                                <name><name>fGrammarBucket</name>.
                                    <name>getGrammar</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>grammarDesc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// give grammar pool a chance...</comment>
                                <comment type="line">//</comment>
                                <comment type="line">// Do not bother checking the pool if no public or system
                                    identifier was provided.
                                </comment>
                                <comment type="line">// Since so many different DTDs have roots in common, using only a
                                    root name as the
                                </comment>
                                <comment type="line">// key may cause an unexpected grammar to be retrieved from the
                                    grammar pool. This scenario
                                </comment>
                                <comment type="line">// would occur when an ExternalSubsetResolver has been queried and
                                    the
                                </comment>
                                <comment type="line">// XMLInputSource returned contains an input stream but no external
                                    identifier.
                                </comment>
                                <comment type="line">// This can never happen when the instance document specified a
                                    DOCTYPE. -- mrglavas
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fGrammarPool</name>
                                            != <name>null</name> &amp;&amp; (<name>systemId</name> != <name>null</name> || <name>
                                            publicId
                                        </name> != <name>null</name>)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fDTDGrammar</name>
                                                    = (<name>DTDGrammar</name>)
                                                    <call>
                                                        <name><name>fGrammarPool</name>.
                                                            <name>retrieveGrammar</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>grammarDesc</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// we'll have to create it...</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fDTDGrammar</name>
                                        = new
                                        <call>
                                            <name>DTDGrammar</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>grammarDesc</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// we've found a cached one;so let's make sure not to read
                                </comment>
                                <comment type="line">// any external subset!</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fValidationManager</name>.
                                                <name>setCachedDTD</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fGrammarBucket</name>.
                                    <name>setActiveGrammar</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fDTDGrammar</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>doctypeDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>rootElement</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// doctypeDecl(String,String,String, Augmentations)</comment>


            <comment type="javadoc">/**
                * The start of an element.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>handleStartElement</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startElement(QName,XMLAttributes)</comment>

            <comment type="javadoc">/**
                * An empty element.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>emptyElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>removed</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>handleStartElement</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>attributes</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>augs</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>emptyElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>removed</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>handleEndElement</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>


                    }
                </block>
            </function>
            <comment type="line">// emptyElement(QName,XMLAttributes)</comment>

            <comment type="javadoc">/**
                * Character content.
                *
                * @param text The content.
                *
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>callNextCharacters</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// REVISIT: [Q] Is there a more efficient way of doing this?</comment>
                    <comment type="line">// Perhaps if the scanner told us so we don't have to</comment>
                    <comment type="line">// look at the characters again. -Ac</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>allWhiteSpace</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>
                                        <name><name>text</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>text</name>.
                                    <name>offset</name>
                                </name>
                                +
                                <name><name>text</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name>isSpace</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>text</name>.
                                                            <name>ch</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>allWhiteSpace</name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// call the ignoreableWhiteSpace callback</comment>
                    <comment type="line">// never call ignorableWhitespace if we are in cdata section</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fInElementContent</name>
                                &amp;&amp; <name>allWhiteSpace</name> &amp;&amp; !
                                <name>fInCDATASection</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocumentHandler</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocumentHandler</name>.
                                                            <name>ignorableWhitespace</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>callNextCharacters</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// validate</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fInElementContent</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>fGrammarBucket</name>.
                                                                <name>getStandalone</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>fDTDGrammar</name>.
                                                                <name>getElementDeclIsExternal</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fCurrentElementIndex</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>allWhiteSpace</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "MSG_WHITE_SPACE_IN_ELEMENT_CONTENT_WHEN_STANDALONE"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <if>if
                                                <condition>(
                                                    <expr>!
                                                        <name>allWhiteSpace</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>charDataInContent</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="line">// For E15.2</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>augs</name>
                                                        != <name>null</name> &amp;&amp;
                                                        <call>
                                                            <name><name>augs</name>.
                                                                <name>getItem</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Constants</name>.
                                                                            <name>CHAR_REF_PROBABLE_WS</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        ==
                                                        <name><name>Boolean</name>.
                                                            <name>TRUE</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>reportError</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLMessageFormatter</name>.
                                                                                    <name>XML_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>"MSG_CONTENT_INVALID_SPECIFIED"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentElement</name>.
                                                                                            <name>rawname</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fDTDGrammar</name>.
                                                                                                <name>
                                                                                                    getContentSpecAsString
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fElementDepth
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>"character reference"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLErrorReporter</name>.
                                                                                    <name>SEVERITY_ERROR</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fCurrentContentSpecType</name>
                                            ==
                                            <name><name>XMLElementDecl</name>.
                                                <name>TYPE_EMPTY</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>charDataInContent</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>callNextCharacters</name>
                                &amp;&amp; <name>fDocumentHandler</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>characters</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// characters(XMLString)</comment>


            <comment type="javadoc">/**
                * Ignorable whitespace. For this method to be called, the document
                * source must have some way of determining that the text containing
                * only whitespace characters should be considered ignorable. For
                * example, the validator can determine if a length of whitespace
                * characters in the document are ignorable based on the element
                * content model.
                *
                * @param text The ignorable whitespace.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignorableWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>ignorableWhitespace</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// ignorableWhitespace(XMLString)</comment>

            <comment type="javadoc">/**
                * The end of an element.
                *
                * @param element The name of the element.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>handleEndElement</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// endElement(QName)</comment>

            <comment type="javadoc">/**
                * The start of a CDATA section.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                                &amp;&amp;
                                <name>fInElementContent</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>charDataInContent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fInCDATASection</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startCDATA</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startCDATA()</comment>

            <comment type="javadoc">/**
                * The end of a CDATA section.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>fInCDATASection</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endCDATA</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endCDATA()</comment>

            <comment type="javadoc">/**
                * The end of the document.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endDocument</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endDocument</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endDocument()</comment>

            <comment type="javadoc">/**
                * A comment.
                *
                * @param text The text in the comment.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// fixes E15.1</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                                &amp;&amp; <name>fElementDepth</name> &gt;= 0 &amp;&amp; <name>fDTDGrammar</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>getElementDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fTempElementDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fTempElementDecl</name>.
                                                <name>type</name>
                                            </name>
                                            ==
                                            <name><name>XMLElementDecl</name>.
                                                <name>TYPE_EMPTY</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_CONTENT_INVALID_SPECIFIED"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>fCurrentElement</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>"EMPTY"</expr>,
                                                                        <expr>"comment"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>comment</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>text</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// comment(XMLString)</comment>


            <comment type="javadoc">/**
                * A processing instruction. Processing instructions consist of a
                * target name and, optionally, text data. The data is only meaningful
                * to the application.
                * &lt;p&gt;
                * Typically, a processing instruction's data will contain a series
                * of pseudo-attributes. These pseudo-attributes follow the form of
                * element attributes but are &lt;strong&gt;not&lt;/strong&gt; parsed or presented
                * to the application as anything other than text. The application is
                * responsible for parsing the data.
                *
                * @param target The target.
                * @param data The data or null if none specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// fixes E15.1</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                                &amp;&amp; <name>fElementDepth</name> &gt;= 0 &amp;&amp; <name>fDTDGrammar</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>getElementDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fTempElementDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fTempElementDecl</name>.
                                                <name>type</name>
                                            </name>
                                            ==
                                            <name><name>XMLElementDecl</name>.
                                                <name>TYPE_EMPTY</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_CONTENT_INVALID_SPECIFIED"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>fCurrentElement</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>"EMPTY"</expr>,
                                                                        <expr>"processing instruction"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>processingInstruction</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>target</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>data</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// processingInstruction(String,XMLString)</comment>

            <comment type="javadoc">/**
                * This method notifies the start of a general entity.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the general entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal entities or a document entity that is
                * parsed from a java.io.Reader).
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                                &amp;&amp; <name>fElementDepth</name> &gt;= 0 &amp;&amp; <name>fDTDGrammar</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>getElementDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fTempElementDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// fixes E15.1</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fTempElementDecl</name>.
                                                <name>type</name>
                                            </name>
                                            ==
                                            <name><name>XMLElementDecl</name>.
                                                <name>TYPE_EMPTY</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_CONTENT_INVALID_SPECIFIED"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>fCurrentElement</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>"EMPTY"</expr>, <expr>"ENTITY"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fGrammarBucket</name>.
                                                    <name>getStandalone</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLDTDLoader</name>.
                                                            <name>checkStandaloneEntityRef</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>name</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fDTDGrammar</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fEntityDecl</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fErrorReporter</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>startGeneralEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>identifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method notifies the end of a general entity.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is not called for entity references
                * appearing as part of attribute values.
                *
                * @param name The name of the entity.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endGeneralEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endGeneralEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// endEntity(String)</comment>

            <comment type="javadoc">/**
                * Notifies of the presence of a TextDecl line in an entity. If present,
                * this method will be called immediately following the startParameterEntity call.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method is only called for external
                * parameter entities referenced in the DTD.
                *
                * @param version The XML version, or null if not specified.
                * @param encoding The IANA encoding name of the entity.
                * @param augs Additional information that may include infoset
                * augmentations.
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>textDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>textDecl</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>version</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>hasGrammar</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <return>return
                        <expr>(<name>fDTDGrammar</name> != <name>null</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>validate</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Do validation if all of the following are true:</comment>
                    <comment type="line">// 1. The JAXP Schema Language property is not XML Schema</comment>
                    <comment type="line">// REVISIT: since only DTD and Schema are supported at this time,</comment>
                    <comment type="line">// such checking is sufficient. but if more schema types</comment>
                    <comment type="line">// are introduced in the future, we'll need to change it</comment>
                    <comment type="line">// to something like</comment>
                    <comment type="line">// (fSchemaType == null || fSchemaType == NS_XML_DTD)</comment>
                    <comment type="line">// 2. One of the following is true (validation features)</comment>
                    <comment type="line">// 2.1 Dynamic validation is off, and validation is on</comment>
                    <comment type="line">// 2.2 Dynamic validation is on, and DOCTYPE was seen</comment>
                    <comment type="line">// 3 Xerces schema validation feature is off, or DOCTYPE was seen.</comment>
                    <return>return
                        <expr>(<name>fSchemaType</name> !=
                            <name><name>Constants</name>.
                                <name>NS_XMLSCHEMA</name>
                            </name>
                            ) &amp;&amp;
                            (!<name>fDynamicValidation</name> &amp;&amp; <name>fValidation</name> ||
                            <name>fDynamicValidation</name>
                            &amp;&amp; <name>fSeenDoctypeDecl</name>) &amp;&amp;
                            (<name>fDTDValidation</name> || <name>fSeenDoctypeDecl</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//REVISIT:we can convert into functions.. adding default attribute values.. and one
                validating.
            </comment>

            <comment type="javadoc">/** Add default attributes and validate. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addDTDDefaultAttrsAndValidate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>elementName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// is there anything to do?</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementIndex</name>
                                == -1 || <name>fDTDGrammar</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Check after all specified attrs are scanned</comment>
                    <comment type="line">// (1) report error for REQUIRED attrs that are missing (V_TAGc)</comment>
                    <comment type="line">// (2) add default attrs (FIXED and NOT_FIXED)</comment>
                    <comment type="line">//</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attlistIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>getFirstAttributeDeclIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elementIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr>
                                <name>attlistIndex</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <block>{

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>getAttributeDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attlistIndex</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fTempAttDecl</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>DEBUG_ATTRIBUTES</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fTempAttDecl</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>XMLElementDecl</name>
                                                            </type>
                                                            <name>elementDecl</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>XMLElementDecl</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDTDGrammar</name>.
                                                                    <name>getElementDecl</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elementIndex</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elementDecl</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"element: "+(
                                                                            <name><name>elementDecl</name>.<name>
                                                                                name</name>.
                                                                                <name>localpart</name>
                                                                            </name>
                                                                            )
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"attlistIndex " + <name>attlistIndex
                                                                        </name> + "\n"+
                                                                            "attName : '"+(
                                                                            <name><name>fTempAttDecl</name>.<name>
                                                                                name</name>.
                                                                                <name>localpart</name>
                                                                            </name>
                                                                            ) + "'\n"
                                                                            + "attType : "+
                                                                            <name><name>fTempAttDecl</name>.<name>
                                                                                simpleType</name>.
                                                                                <name>type</name>
                                                                            </name>
                                                                            + "\n"
                                                                            + "attDefaultType : "+
                                                                            <name><name>fTempAttDecl</name>.<name>
                                                                                simpleType</name>.
                                                                                <name>defaultType</name>
                                                                            </name>
                                                                            + "\n"
                                                                            + "attDefaultValue : '"+
                                                                            <name><name>fTempAttDecl</name>.<name>
                                                                                simpleType</name>.
                                                                                <name>defaultValue</name>
                                                                            </name>
                                                                            + "'\n"
                                                                            +
                                                                            <call>
                                                                                <name><name>attributes</name>.
                                                                                    <name>getLength</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +"\n"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attPrefix</name> =
                                    <init>
                                        <expr>
                                            <name><name>fTempAttDecl</name>.<name>name</name>.
                                                <name>prefix</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attLocalpart</name> =
                                    <init>
                                        <expr>
                                            <name><name>fTempAttDecl</name>.<name>name</name>.
                                                <name>localpart</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attRawName</name> =
                                    <init>
                                        <expr>
                                            <name><name>fTempAttDecl</name>.<name>name</name>.
                                                <name>rawname</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attType</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getAttributeTypeName</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fTempAttDecl</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>attDefaultType</name> =
                                    <init>
                                        <expr>
                                            <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                                <name>defaultType</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attValue</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>defaultValue</name>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>attValue</name>
                                                =
                                                <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                                    <name>defaultValue</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>specified</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>required</name> =
                                    <init>
                                        <expr>
                                            <name>attDefaultType</name>
                                            ==
                                            <name><name>XMLSimpleType</name>.
                                                <name>DEFAULT_TYPE_REQUIRED</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>cdata</name> =
                                    <init>
                                        <expr>
                                            <name>attType</name>
                                            ==
                                            <name><name>XMLSymbols</name>.
                                                <name>fCDATASymbol</name>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>!<name>cdata</name> || <name>required</name> || <name>attValue</name> !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>attrCount</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>attributes</name>.
                                                                <name>getLength</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name>attrCount</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>attributes</name>.
                                                                    <name>getQName</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ==
                                                            <name>attRawName</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>specified</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>specified</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>required</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>fPerformValidation</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>args</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name><name>elementName</name>.
                                                                                            <name>localpart</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>attRawName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fErrorReporter</name>.
                                                                                <name>reportError</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            XMLMessageFormatter</name>.
                                                                                            <name>XML_DOMAIN</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        "MSG_REQUIRED_ATTRIBUTE_NOT_SPECIFIED"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>args</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            XMLErrorReporter</name>.
                                                                                            <name>SEVERITY_ERROR</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>attValue</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fPerformValidation</name>
                                                                        &amp;&amp;
                                                                        <call>
                                                                            <name><name>fGrammarBucket</name>.
                                                                                <name>getStandalone</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>fDTDGrammar</name>.
                                                                                            <name>
                                                                                                getAttributeDeclIsExternal
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>attlistIndex
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{

                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </type>
                                                                                            <name>args</name> =
                                                                                            <init>
                                                                                                <expr>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                elementName</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    localpart
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ,
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                attRawName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fErrorReporter</name>
                                                                                                    .
                                                                                                    <name>reportError
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                XMLMessageFormatter</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    XML_DOMAIN
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            "MSG_DEFAULTED_ATTRIBUTE_NOT_SPECIFIED"
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>args
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                XMLErrorReporter</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    SEVERITY_ERROR
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>

                                                            <comment type="line">// add namespace information</comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>fNamespaces</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>index</name> =
                                                                                <init>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                attRawName</name>.
                                                                                                <name>indexOf</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>':'</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                    != -1
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>attPrefix</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    attRawName</name>.
                                                                                                    <name>substring
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>0</expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                index
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>attPrefix</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fSymbolTable</name>.
                                                                                                    <name>addSymbol
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                attPrefix
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>attLocalpart</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    attRawName</name>.
                                                                                                    <name>substring
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                index
                                                                                                            </name>
                                                                                                            + 1
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>attLocalpart</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fSymbolTable</name>.
                                                                                                    <name>addSymbol
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                attLocalpart
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>

                                                            <comment type="line">// add attribute</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fTempQName</name>.
                                                                            <name>setValues</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>attPrefix</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>attLocalpart</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>attRawName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>fTempAttDecl</name>
                                                                                        .<name>name</name>.
                                                                                        <name>uri</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>newAttr</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>attributes</name>.
                                                                                    <name>addAttribute</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fTempQName</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attType</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attValue</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="line">// get next att decl in the Grammar for this element</comment>
                            <expr_stmt>
                                <expr>
                                    <name>attlistIndex</name>
                                    =
                                    <call>
                                        <name><name>fDTDGrammar</name>.
                                            <name>getNextAttributeDeclIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attlistIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <comment type="line">// now iterate through the expanded attributes for</comment>
                    <comment type="line">// 1. if every attribute seen is declared in the DTD</comment>
                    <comment type="line">// 2. check if the VC: default_fixed holds</comment>
                    <comment type="line">// 3. validate every attribute.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>attrCount</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getLength</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>attrCount</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrRawName</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>attributes</name>.
                                                    <name>getQName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>declared</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fPerformValidation</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>fGrammarBucket</name>.
                                                            <name>getStandalone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// check VC: Standalone Document Declaration,
                                                        entities
                                                    </comment>
                                                    <comment type="line">// references appear in the document.</comment>
                                                    <comment type="line">// REVISIT: this can be combined to a single
                                                        check in
                                                    </comment>
                                                    <comment type="line">// startEntity if we add one more argument in
                                                    </comment>
                                                    <comment type="line">// startEnity, inAttrValue</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>nonNormalizedValue</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>attributes</name>.
                                                                            <name>getNonNormalizedValue</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>nonNormalizedValue</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>entityName</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>
                                                                                        getExternalEntityRefInAttrValue
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    nonNormalizedValue
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>entityName</name>
                                                                            !=
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fErrorReporter</name>.
                                                                                            <name>reportError</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        XMLMessageFormatter</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            XML_DOMAIN
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "MSG_REFERENCE_TO_EXTERNALLY_DECLARED_ENTITY_WHEN_STANDALONE"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                entityName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        XMLErrorReporter</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            SEVERITY_ERROR
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>attDefIndex</name> =
                                    <init>
                                        <expr>-1</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>position</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fDTDGrammar</name>.
                                                    <name>getFirstAttributeDeclIndex</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>elementIndex</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>position</name>
                                        != -1
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>fDTDGrammar</name>.
                                                    <name>getAttributeDecl</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>position</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>fTempAttDecl</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>fTempAttDecl</name>.<name>name</name>.
                                                    <name>rawname</name>
                                                </name>
                                                ==
                                                <name>attrRawName</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// found the match att decl,</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>attDefIndex</name>
                                                        =
                                                        <name>position</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>declared</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>position</name>
                                            =
                                            <call>
                                                <name><name>fDTDGrammar</name>.
                                                    <name>getNextAttributeDeclIndex</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>position</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>declared</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fPerformValidation</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// REVISIT - cache the elem/attr tuple so that
                                                        we only
                                                    </comment>
                                                    <comment type="line">// give this error once for each unique
                                                        occurrence
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>args</name> =
                                                            <init>
                                                                <expr>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>elementName</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>attrRawName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"MSG_ATTRIBUTE_NOT_DECLARED"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>args</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>
                            <comment type="line">// attribute is declared</comment>

                            <comment type="line">// fTempAttDecl should have the right value set now, so</comment>
                            <comment type="line">// the following is not needed</comment>
                            <comment type="line">// fGrammar.getAttributeDecl(attDefIndex,fTempAttDecl);</comment>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>type</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getAttributeTypeName</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fTempAttDecl</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>setType</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>type</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getAugmentations</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>putItem</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Constants</name>.
                                                        <name>ATTRIBUTE_DECLARED</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>Boolean</name>.
                                                        <name>TRUE</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>changedByNormalization</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>oldValue</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>attributes</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrValue</name> =
                                    <init>
                                        <expr>
                                            <name>oldValue</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>attributes</name>.
                                                <name>isSpecified</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp; <name>type</name> !=
                                        <name><name>XMLSymbols</name>.
                                            <name>fCDATASymbol</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>changedByNormalization</name>
                                                =
                                                <call>
                                                    <name>normalizeAttrValue</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>attributes</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>attrValue</name>
                                                =
                                                <call>
                                                    <name><name>attributes</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fPerformValidation</name>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>fGrammarBucket</name>.
                                                            <name>getStandalone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <name>changedByNormalization</name>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>fDTDGrammar</name>.
                                                            <name>getAttributeDeclIsExternal</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>position</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// check VC: Standalone Document Declaration
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            "MSG_ATTVALUE_CHANGED_DURING_NORMALIZATION_WHEN_STANDALONE"
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>attrRawName</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>oldValue</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>attrValue</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>fPerformValidation</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>defaultType</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>DEFAULT_TYPE_FIXED</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>defaultValue</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                                            <name>defaultValue</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <call>
                                                        <name><name>attrValue</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultValue</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Object</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>args</name> =
                                                            <init>
                                                                <expr>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>elementName</name>.
                                                                                <name>localpart</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>attrRawName</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>attrValue</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>defaultValue</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>reportError</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLMessageFormatter</name>.
                                                                                <name>XML_DOMAIN</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>"MSG_FIXED_ATTVALUE_INVALID"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>args</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>XMLErrorReporter</name>.
                                                                                <name>SEVERITY_ERROR</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_ENTITY</name>
                                        </name>
                                        ||
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_ENUMERATION</name>
                                        </name>
                                        ||
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_ID</name>
                                        </name>
                                        ||
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_IDREF</name>
                                        </name>
                                        ||
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_NMTOKEN</name>
                                        </name>
                                        ||
                                        <name><name>fTempAttDecl</name>.<name>simpleType</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XMLSimpleType</name>.
                                            <name>TYPE_NOTATION</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>validateDTDattribute</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elementName</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>attrValue</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fTempAttDecl</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// for all attributes</comment>

                    }
                </block>
            </function>
            <comment type="line">// addDTDDefaultAttrsAndValidate(int,XMLAttrList)</comment>

            <comment type="javadoc">/** Checks entities in attribute values for standalone VC. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>getExternalEntityRefInAttrValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>nonNormalizedValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>valLength</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>nonNormalizedValue</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>ampIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>nonNormalizedValue</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&amp;'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>ampIndex</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ampIndex</name>
                                        + 1 &lt; <name>valLength</name> &amp;&amp;
                                        <call>
                                            <name><name>nonNormalizedValue</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr><name>ampIndex</name>+1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        != '#'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>semicolonIndex</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>nonNormalizedValue</name>.
                                                                <name>indexOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>';'</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr><name>ampIndex</name>+1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>entityName</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>nonNormalizedValue</name>.
                                                                <name>substring</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr><name>ampIndex</name>+1
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>semicolonIndex</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>entityName</name>
                                                =
                                                <call>
                                                    <name><name>fSymbolTable</name>.
                                                        <name>addSymbol</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>entityName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>entIndex</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fDTDGrammar</name>.
                                                                <name>getEntityDeclIndex</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>entityName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>entIndex</name>
                                                    &gt; -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDTDGrammar</name>.
                                                                    <name>getEntityDecl</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>entIndex</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fEntityDecl</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fEntityDecl</name>.
                                                                    <name>inExternal</name>
                                                                </name>
                                                                ||
                                                                (<name>entityName</name> =
                                                                <call>
                                                                    <name>getExternalEntityRefInAttrValue</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fEntityDecl</name>.
                                                                                    <name>value</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                ) !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <name>entityName</name>
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>ampIndex</name>
                                    =
                                    <call>
                                        <name><name>nonNormalizedValue</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'&amp;'</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr><name>ampIndex</name>+1
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isExternalEntityRefInAttrValue(String):String</comment>

            <comment type="javadoc">/**
                * Validate attributes in DTD fashion.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>validateDTDattribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributeDecl</name>
                            </type>
                            <name>attributeDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <switch>switch
                        <condition>(
                            <expr>
                                <name><name>attributeDecl</name>.<name>simpleType</name>.
                                    <name>type</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ENTITY</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <comment type="line">// NOTE: Save this information because
                                        invalidStandaloneAttDef
                                    </comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>isAlistAttribute</name> =
                                            <init>
                                                <expr>
                                                    <name><name>attributeDecl</name>.<name>simpleType</name>.
                                                        <name>list</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <try>try
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>isAlistAttribute</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValENTITIES</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValENTITY</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>InvalidDatatypeValueException</name>
                                                    </type>
                                                    <name>ex</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fErrorReporter</name>.
                                                                <name>reportError</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLMessageFormatter</name>.
                                                                            <name>XML_DOMAIN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ex</name>.
                                                                                <name>getKey</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ex</name>.
                                                                                <name>getArgs</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLErrorReporter</name>.
                                                                            <name>SEVERITY_ERROR</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_NOTATION</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ENUMERATION</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>found</name> =
                                            <init>
                                                <expr>false</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>String</name>
                                                <index>[]</index>
                                            </type>
                                            <name>enumVals</name> =
                                            <init>
                                                <expr>
                                                    <name><name>attributeDecl</name>.<name>simpleType</name>.
                                                        <name>enumeration</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>enumVals</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>found</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>enumVals</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>attValue</name>
                                                                ==
                                                                <name>
                                                                    <name>enumVals</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                ||
                                                                <call>
                                                                    <name><name>attValue</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>enumVals</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>found</name>
                                                                        = true
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </for>
                                        </else>
                                    </if>

                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>found</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>StringBuffer</name>
                                                        </type>
                                                        <name>enumValueString</name> =
                                                        <init>
                                                            <expr>new
                                                                <call>
                                                                    <name>StringBuffer</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>enumVals</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>enumVals</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>enumValueString</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>enumVals</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                        +" "
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fErrorReporter</name>.
                                                                <name>reportError</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLMessageFormatter</name>.
                                                                            <name>XML_DOMAIN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"MSG_ATTRIBUTE_VALUE_NOT_IN_LIST"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name><name>attributeDecl</name>.<name>
                                                                                    name</name>.
                                                                                    <name>rawname</name>
                                                                                </name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <name>enumValueString</name>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLErrorReporter</name>.
                                                                            <name>SEVERITY_ERROR</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ID</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fValID</name>.
                                                            <name>validate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attValue</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fValidationState</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>InvalidDatatypeValueException</name>
                                                    </type>
                                                    <name>ex</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>fErrorReporter</name>.
                                                                <name>reportError</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLMessageFormatter</name>.
                                                                            <name>XML_DOMAIN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ex</name>.
                                                                                <name>getKey</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ex</name>.
                                                                                <name>getArgs</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLErrorReporter</name>.
                                                                            <name>SEVERITY_ERROR</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_IDREF</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>isAlistAttribute</name> =
                                            <init>
                                                <expr>
                                                    <name><name>attributeDecl</name>.<name>simpleType</name>.
                                                        <name>list</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">//Caveat - Save this information because
                                        invalidStandaloneAttDef
                                    </comment>

                                    <try>try
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>isAlistAttribute</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValIDRefs</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValIDRef</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>InvalidDatatypeValueException</name>
                                                    </type>
                                                    <name>ex</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>isAlistAttribute</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fErrorReporter</name>.
                                                                            <name>reportError</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>
                                                                                        XMLMessageFormatter</name>.
                                                                                        <name>XML_DOMAIN</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"IDREFSInvalid"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>attValue</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XMLErrorReporter</name>.
                                                                                        <name>SEVERITY_ERROR</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fErrorReporter</name>.
                                                                            <name>reportError</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>
                                                                                        XMLMessageFormatter</name>.
                                                                                        <name>XML_DOMAIN</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>ex</name>.
                                                                                            <name>getKey</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>ex</name>.
                                                                                            <name>getArgs</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XMLErrorReporter</name>.
                                                                                        <name>SEVERITY_ERROR</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>

                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_NMTOKEN</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>boolean</name>
                                            </type>
                                            <name>isAlistAttribute</name> =
                                            <init>
                                                <expr>
                                                    <name><name>attributeDecl</name>.<name>simpleType</name>.
                                                        <name>list</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <comment type="line">//Caveat - Save this information because
                                        invalidStandaloneAttDef
                                    </comment>
                                    <comment type="line">//changes fTempAttDef</comment>
                                    <try>try
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>isAlistAttribute</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValNMTOKENS</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fValNMTOKEN</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attValue</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fValidationState</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>InvalidDatatypeValueException</name>
                                                    </type>
                                                    <name>ex</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>isAlistAttribute</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fErrorReporter</name>.
                                                                            <name>reportError</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>
                                                                                        XMLMessageFormatter</name>.
                                                                                        <name>XML_DOMAIN</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"NMTOKENSInvalid"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>attValue</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XMLErrorReporter</name>.
                                                                                        <name>SEVERITY_ERROR</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fErrorReporter</name>.
                                                                            <name>reportError</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>
                                                                                        XMLMessageFormatter</name>.
                                                                                        <name>XML_DOMAIN</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"NMTOKENInvalid"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>attValue</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XMLErrorReporter</name>.
                                                                                        <name>SEVERITY_ERROR</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    <break>break;</break>
                                    }
                                </block>

                            </case>
                            }
                        </block>
                    </switch>
                    <comment type="line">// switch</comment>

                    }
                </block>
            </function>
            <comment type="line">// validateDTDattribute(QName,String,XMLAttributeDecl)</comment>


            <comment type="javadoc">/** Returns true if invalid standalone attribute definition. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>invalidStandaloneAttDef</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>attribute</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: This obviously needs to be fixed! -Ac</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="block">/*
                        if (fStandaloneReader == -1) {
                        return false;
                        }
                        // we are normalizing a default att value... this ok?
                        if (element.rawname == -1) {
                        return false;
                        }
                        return getAttDefIsExternal(element, attribute);
                        */
                    </comment>
                    <return>return
                        <expr>
                            <name>state</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>


            <comment type="javadoc">/**
                * Normalize the attribute value of a non CDATA attributes collapsing
                * sequences of space characters (x20)
                *
                * @param attributes The list of attributes
                * @param index The index of the attribute to normalize
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>normalizeAttrValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// vars</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>leadingSpace</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>spaceStart</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>readingNonSpace</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>eaten</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attrValue</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>attributes</name>.
                                            <name>getValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>attValue</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>char</name>
                                        <index>[
                                            <expr>
                                                <call>
                                                    <name><name>attrValue</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBuffer</name>.
                                    <name>setLength</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attrValue</name>.
                                    <name>getChars</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>attrValue</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attValue</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>attValue</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>attValue</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        == ' '
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <comment type="line">// now the tricky part</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>readingNonSpace</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>spaceStart</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>readingNonSpace</name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>spaceStart</name>
                                                    &amp;&amp; !
                                                    <name>leadingSpace</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>spaceStart</name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fBuffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>attValue</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr><name>count</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>leadingSpace</name>
                                                                || !
                                                                <name>spaceStart</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>eaten</name>
                                                                        ++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="javadoc">/*** BUG #3512 ***
                                                                    int entityCount = attributes.getEntityCount(index);
                                                                    for (int j = 0; j &lt; entityCount; j++) {
                                                                    int offset = attributes.getEntityOffset(index, j);
                                                                    int length = attributes.getEntityLength(index, j);
                                                                    if (offset &lt;= i-eaten+1) {
                                                                    if (offset+length &gt;= i-eaten+1) {
                                                                    if (length &gt; 0)
                                                                    length--;
                                                                    }
                                                                    }
                                                                    else {
                                                                    if (offset &gt; 0)
                                                                    offset--;
                                                                    }
                                                                    attributes.setEntityOffset(index, j, offset);
                                                                    attributes.setEntityLength(index, j, length);
                                                                    }
                                                                    /***/
                                                                </comment>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>

                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>readingNonSpace</name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>spaceStart</name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>leadingSpace</name>
                                                = false
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fBuffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>attValue</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr><name>count</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// check if the last appended character is a space.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &gt; 0 &amp;&amp;
                                <call>
                                    <name><name>fBuffer</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr><name>count</name>-1
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == ' '
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fBuffer</name>.
                                                <name>setLength</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr><name>count</name>-1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="javadoc">/*** BUG #3512 ***
                                    int entityCount = attributes.getEntityCount(index);
                                    for (int j=0; j &lt; entityCount; j++) {
                                    int offset = attributes.getEntityOffset(index, j);
                                    int length = attributes.getEntityLength(index, j);
                                    if (offset &lt; count-1) {
                                    if (offset+length == count) {
                                    length--;
                                    }
                                    }
                                    else {
                                    offset--;
                                    }
                                    attributes.setEntityOffset(index, j, offset);
                                    attributes.setEntityLength(index, j, length);
                                    }
                                    /***/
                                </comment>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>newValue</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fBuffer</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>attributes</name>.
                                    <name>setValue</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>!
                            <call>
                                <name><name>attrValue</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newValue</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Root element specified. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>rootElementSpecified</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>rootElement</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>root1</name> =
                                        <init>
                                            <expr>
                                                <name><name>fRootElement</name>.
                                                    <name>rawname</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>root2</name> =
                                        <init>
                                            <expr>
                                                <name><name>rootElement</name>.
                                                    <name>rawname</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>root1</name>
                                            == <name>null</name> || !
                                            <call>
                                                <name><name>root1</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>root2</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"RootElementTypeMustMatchDoctypedecl"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>root1</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>root2</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// rootElementSpecified(QName)</comment>

            <comment type="javadoc">/**
                * Check that the content of an element is valid.
                * &lt;p&gt;
                * This is the method of primary concern to the validator. This method is called
                * upon the scanner reaching the end tag of an element. At that time, the
                * element's children must be structurally validated, so it calls this method.
                * The index of the element being checked (in the decl pool), is provided as
                * well as an array of element name indexes of the children. The validator must
                * confirm that this element can have these children in this order.
                * &lt;p&gt;
                * This can also be called to do 'what if' testing of content models just to see
                * if they would be valid.
                * &lt;p&gt;
                * Note that the element index is an index into the element decl pool, whereas
                * the children indexes are name indexes, i.e. into the string pool.
                * &lt;p&gt;
                * A value of -1 in the children array indicates a PCDATA node. All other
                * indexes will be positive and represent child elements. The count can be
                * zero, since some elements have the EMPTY content model and that must be
                * confirmed.
                *
                * @param elementIndex The index within the &lt;code&gt;ElementDeclPool&lt;/code&gt; of this
                * element.
                * @param childCount The number of entries in the &lt;code&gt;children&lt;/code&gt; array.
                * @param children The children of this element.
                *
                * @return The value -1 if fully valid, else the 0 based index of the child
                * that first failed. If the value returned is equal to the number
                * of children, then additional content is required to reach a valid
                * ending state.
                *
                * @exception Exception Thrown on error.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>checkContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>QName</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>children</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>childOffset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>childCount</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fDTDGrammar</name>.
                                    <name>getElementDecl</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>elementIndex</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fTempElementDecl</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Get the element name index from the element</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>elementType</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentElement</name>.
                                        <name>rawname</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Get out the content spec for this element</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>contentType</name> =
                            <init>
                                <expr>
                                    <name>fCurrentContentSpecType</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>


                    <comment type="line">//</comment>
                    <comment type="line">// Deal with the possible types of content. We try to optimized here</comment>
                    <comment type="line">// by dealing specially with content models that don't require the</comment>
                    <comment type="line">// full DFA treatment.</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>contentType</name>
                                ==
                                <name><name>XMLElementDecl</name>.
                                    <name>TYPE_EMPTY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//</comment>
                                <comment type="line">// If the child count is greater than zero, then this is</comment>
                                <comment type="line">// an error right off the bat at index 0.</comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>childCount</name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>0</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>contentType</name>
                                        ==
                                        <name><name>XMLElementDecl</name>.
                                            <name>TYPE_ANY</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">//</comment>
                                        <comment type="line">// This one is open game so we don't pass any judgement on
                                            it
                                        </comment>
                                        <comment type="line">// at all. Its assumed to fine since it can hold
                                            anything.
                                        </comment>
                                        <comment type="line">//</comment>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>contentType</name>
                                                ==
                                                <name><name>XMLElementDecl</name>.
                                                    <name>TYPE_MIXED</name>
                                                </name>
                                                ||
                                                <name>contentType</name>
                                                ==
                                                <name><name>XMLElementDecl</name>.
                                                    <name>TYPE_CHILDREN</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// Get the content model for this element, faulting
                                                    it in if needed
                                                </comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>ContentModelValidator</name>
                                                        </type>
                                                        <name>cmElem</name> =
                                                        <init>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>cmElem</name>
                                                        =
                                                        <name><name>fTempElementDecl</name>.
                                                            <name>contentModelValidator</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>result</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>cmElem</name>.
                                                                        <name>validate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>children</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>childOffset</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>childCount</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <return>return
                                                    <expr>
                                                        <name>result</name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>contentType</name>
                                                        == -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">//REVISIT</comment>
                                                        <comment type="javadoc">/****
                                                            reportRecoverableXMLError(XMLMessages.MSG_ELEMENT_NOT_DECLARED,
                                                            XMLMessages.VC_ELEMENT_VALID,
                                                            elementType);
                                                            /****/
                                                        </comment>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>contentType</name>
                                                                ==
                                                                <name><name>XMLElementDecl</name>.
                                                                    <name>TYPE_SIMPLE</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{

                                                                <comment type="line">//REVISIT</comment>
                                                                <comment type="line">// this should never be reached in
                                                                    the case of DTD validation.
                                                                </comment>

                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <comment type="line">//REVISIT</comment>
                                                                <comment type="javadoc">/****
                                                                    fErrorReporter.reportError(fErrorReporter.getLocator(),
                                                                    ImplementationMessages.XERCES_IMPLEMENTATION_DOMAIN,
                                                                    ImplementationMessages.VAL_CST,
                                                                    0,
                                                                    null,
                                                                    XMLErrorReporter.ERRORTYPE_FATAL_ERROR);
                                                                    /****/
                                                                </comment>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// We succeeded</comment>
                    <return>return <expr>-1</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// checkContent(int,int,QName[]):int</comment>

            <comment type="javadoc">/** Returns the content spec type for an element index. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>int</name>
                </type>
                <name>getContentSpecType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>elementIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>contentSpecType</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>elementIndex</name>
                                &gt; -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fDTDGrammar</name>.
                                                    <name>getElementDecl</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>elementIndex</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>fTempElementDecl</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>contentSpecType</name>
                                                    =
                                                    <name><name>fTempElementDecl</name>.
                                                        <name>type</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>contentSpecType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** Character data in content. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>charDataInContent</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ELEMENT_CHILDREN</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"charDataInContent()"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fElementChildren</name>.
                                    <name>length</name>
                                </name>
                                &lt;=
                                <name>fElementChildrenLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>QName</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newarray</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>QName</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fElementChildren</name>.
                                                                <name>length</name>
                                                            </name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementChildren</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newarray</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementChildren</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementChildren</name>
                                        =
                                        <name>newarray</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fElementChildren</name>
                                        <index>[
                                            <expr>
                                                <name>fElementChildrenLength</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>qname</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>fElementChildrenLength</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fElementChildren</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fElementChildren</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name>QName</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>qname</name>
                                        =
                                        <name>
                                            <name>fElementChildren</name>
                                            <index>[
                                                <expr>
                                                    <name>fElementChildrenLength</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>qname</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr><name>fElementChildrenLength</name>++
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// charDataInCount()</comment>

            <comment type="javadoc">/** convert attribute type from ints to strings */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>getAttributeTypeName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributeDecl</name>
                            </type>
                            <name>attrDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <switch>switch
                        <condition>(
                            <expr>
                                <name><name>attrDecl</name>.<name>simpleType</name>.
                                    <name>type</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ENTITY</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <return>return
                                        <expr>
                                            <name><name>attrDecl</name>.<name>simpleType</name>.
                                                <name>list</name>
                                            </name>
                                            ?
                                            <name><name>XMLSymbols</name>.
                                                <name>fENTITIESSymbol</name>
                                            </name>
                                            :
                                            <name><name>XMLSymbols</name>.
                                                <name>fENTITYSymbol</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ENUMERATION</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>StringBuffer</name>
                                            </type>
                                            <name>buffer</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name>StringBuffer</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>'('</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <for>for (
                                        <init>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>i</name>=
                                                <init>
                                                    <expr>0</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </init>
                                        <condition>
                                            <expr><name>i</name>&lt;
                                                <name><name>attrDecl</name>.<name>simpleType</name>.<name>
                                                    enumeration</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr><name>i</name>++
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>i</name>
                                                        &gt; 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>buffer</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"|"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>attrDecl</name>.<name>simpleType</name>.
                                                                        <name>enumeration</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </for>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>')'</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <return>return
                                        <expr>
                                            <call>
                                                <name><name>fSymbolTable</name>.
                                                    <name>addSymbol</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_ID</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <return>return
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>fIDSymbol</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_IDREF</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <return>return
                                        <expr>
                                            <name><name>attrDecl</name>.<name>simpleType</name>.
                                                <name>list</name>
                                            </name>
                                            ?
                                            <name><name>XMLSymbols</name>.
                                                <name>fIDREFSSymbol</name>
                                            </name>
                                            :
                                            <name><name>XMLSymbols</name>.
                                                <name>fIDREFSymbol</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_NMTOKEN</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <return>return
                                        <expr>
                                            <name><name>attrDecl</name>.<name>simpleType</name>.
                                                <name>list</name>
                                            </name>
                                            ?
                                            <name><name>XMLSymbols</name>.
                                                <name>fNMTOKENSSymbol</name>
                                            </name>
                                            :
                                            <name><name>XMLSymbols</name>.
                                                <name>fNMTOKENSymbol</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XMLSimpleType</name>.
                                        <name>TYPE_NOTATION</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <return>return
                                        <expr>
                                            <name><name>XMLSymbols</name>.
                                                <name>fNOTATIONSymbol</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                    }
                                </block>
                            </case>
                            }
                        </block>
                    </switch>
                    <return>return
                        <expr>
                            <name><name>XMLSymbols</name>.
                                <name>fCDATASymbol</name>
                            </name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getAttributeTypeName(XMLAttributeDecl):String</comment>

            <comment type="javadoc">/** initialization */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>init</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// datatype validators</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fValidation</name>
                                ||
                                <name>fDynamicValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <try>try
                                    <block>{
                                        <comment type="line">//REVISIT: datatypeRegistry + initialization of datatype
                                        </comment>
                                        <comment type="line">// why do we cast to ListDatatypeValidator?</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValID</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fIDSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValIDRef</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fIDREFSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValIDRefs</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fIDREFSSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValENTITY</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fENTITYSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValENTITIES</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fENTITIESSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValNMTOKEN</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fNMTOKENSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValNMTOKENS</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fNMTOKENSSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fValNOTATION</name>
                                                =
                                                <call>
                                                    <name><name>fDatatypeValidatorFactory</name>.
                                                        <name>getBuiltInDV</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLSymbols</name>.
                                                                    <name>fNOTATIONSymbol</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>Exception</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// should never happen</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>e</name>.
                                                            <name>printStackTrace</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>System</name>.
                                                                        <name>err</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </catch>
                                </try>

                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// init()</comment>

            <comment type="javadoc">/** ensure element stack capacity */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>ensureStackCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newElementDepth</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>newElementDepth</name>
                                ==
                                <name><name>fElementQNamePartsStack</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newStack</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>int</name>
                                                    <index>[
                                                        <expr>
                                                            <name>newElementDepth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>QName</name>
                                            <index>[]</index>
                                        </type>
                                        <name>newStackOfQueue</name> =
                                        <init>
                                            <expr>new
                                                <name>
                                                    <name>QName</name>
                                                    <index>[
                                                        <expr>
                                                            <name>newElementDepth</name>
                                                            * 2
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>fElementQNamePartsStack</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newStackOfQueue</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newElementDepth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementQNamePartsStack</name>
                                        =
                                        <name>newStackOfQueue</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>QName</name>
                                        </type>
                                        <name>qname</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fElementQNamePartsStack</name>
                                                    <index>[
                                                        <expr>
                                                            <name>newElementDepth</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>qname</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <name>newElementDepth</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>fElementQNamePartsStack</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fElementQNamePartsStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = new
                                                            <call>
                                                                <name>QName</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <expr_stmt>
                                    <expr>
                                        <name>newStack</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[
                                                <expr>
                                                    <name>newElementDepth</name>
                                                    * 2
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementIndexStack</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newStack</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newElementDepth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementIndexStack</name>
                                        =
                                        <name>newStack</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <expr_stmt>
                                    <expr>
                                        <name>newStack</name>
                                        = new
                                        <name>
                                            <name>int</name>
                                            <index>[
                                                <expr>
                                                    <name>newElementDepth</name>
                                                    * 2
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fContentSpecTypeStack</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newStack</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>newElementDepth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fContentSpecTypeStack</name>
                                        =
                                        <name>newStack</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// ensureStackCapacity</comment>


            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Handle element
                * @return true if validator is removed from the pipeline
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>handleStartElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">// VC: Root Element Type</comment>
                    <comment type="line">// see if the root element's name matches the one in DoctypeDecl</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fSeenRootElement</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// REVISIT: Here are current assumptions about validation
                                    features
                                </comment>
                                <comment type="line">// given that XMLSchema validator is in the pipeline</comment>
                                <comment type="line">//</comment>
                                <comment type="line">// http://xml.org/sax/features/validation = true</comment>
                                <comment type="line">// http://apache.org/xml/features/validation/schema = true
                                </comment>
                                <comment type="line">//</comment>
                                <comment type="line">// [1] XML instance document only has reference to a DTD</comment>
                                <comment type="line">// Outcome: report validation errors only against dtd.</comment>
                                <comment type="line">//</comment>
                                <comment type="line">// [2] XML instance document has only XML Schema grammars:
                                </comment>
                                <comment type="line">// Outcome: report validation errors only against schemas (no
                                    errors produced from DTD validator)
                                </comment>
                                <comment type="line">//</comment>
                                <comment type="line">// [3] XML instance document has DTD and XML schemas:</comment>
                                <comment type="line">// [a] if schema language is not set outcome - validation errors
                                    reported against both grammars: DTD and schemas.
                                </comment>
                                <comment type="line">// [b] if schema language is set to XML Schema - do not report
                                    validation errors
                                </comment>
                                <comment type="line">//</comment>
                                <comment type="line">// if dynamic validation is on</comment>
                                <comment type="line">// validate only against grammar we've found (depending on
                                    settings
                                </comment>
                                <comment type="line">// for schema feature)</comment>
                                <comment type="line">//</comment>
                                <comment type="line">//</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fPerformValidation</name>
                                        =
                                        <call>
                                            <name>validate</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fSeenRootElement</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fValidationManager</name>.
                                                <name>setEntityState</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fDTDGrammar</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fValidationManager</name>.
                                                <name>setGrammarFound</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSeenDoctypeDecl</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>rootElementSpecified</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDTDGrammar</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>fPerformValidation</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fCurrentElementIndex</name>
                                                    = -1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fCurrentContentSpecType</name>
                                                    = -1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fInElementContent</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fPerformValidation</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_GRAMMAR_NOT_FOUND"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>element</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// modify pipeline</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fDocumentSource</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fDocumentSource</name>.
                                                            <name>setDocumentHandler</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fDocumentHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fDocumentHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fDocumentHandler</name>.
                                                                    <name>setDocumentSource</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fDocumentSource</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// resolve the element</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentElementIndex</name>
                                        =
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>getElementDeclIndex</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">//changed here.. new function for getContentSpecType</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentContentSpecType</name>
                                        =
                                        <call>
                                            <name><name>fDTDGrammar</name>.
                                                <name>getContentSpecType</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fCurrentContentSpecType</name>
                                            == -1 &amp;&amp;
                                            <name>fPerformValidation</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_ELEMENT_NOT_DECLARED"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>element</name>.
                                                                                <name>rawname</name>
                                                                            </name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// 0. insert default attributes</comment>
                                <comment type="line">// 1. normalize the attributes</comment>
                                <comment type="line">// 2. validate the attrivute list.</comment>
                                <comment type="line">// TO DO:</comment>
                                <comment type="line">//changed here.. also pass element name,</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addDTDDefaultAttrsAndValidate</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElementIndex</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>attributes</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// set element content state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fInElementContent</name>
                            = <name>fCurrentContentSpecType</name> ==
                            <name><name>XMLElementDecl</name>.
                                <name>TYPE_CHILDREN</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// increment the element depth, add this element's</comment>
                    <comment type="line">// QName to its enclosing element 's children list</comment>
                    <expr_stmt>
                        <expr><name>fElementDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// push current length onto stack</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fElementChildrenOffsetStack</name>.
                                                <name>length</name>
                                            </name>
                                            &lt;=
                                            <name>fElementDepth</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>
                                                        <name>newarray</name>
                                                        <index>[]</index>
                                                    </name>
                                                    =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>int</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fElementChildrenOffsetStack</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        * 2
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>arraycopy</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fElementChildrenOffsetStack</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>newarray</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fElementChildrenOffsetStack</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fElementChildrenOffsetStack</name>
                                                    =
                                                    <name>newarray</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fElementChildrenOffsetStack</name>
                                            <index>[
                                                <expr>
                                                    <name>fElementDepth</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name>fElementChildrenLength</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// add this element to children</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fElementChildren</name>.
                                                <name>length</name>
                                            </name>
                                            &lt;=
                                            <name>fElementChildrenLength</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>QName</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>newarray</name> =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>QName</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fElementChildrenLength</name>
                                                                        * 2
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.
                                                            <name>arraycopy</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fElementChildren</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>newarray</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fElementChildren</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fElementChildren</name>
                                                    =
                                                    <name>newarray</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>QName</name>
                                        </type>
                                        <name>qname</name> =
                                        <init>
                                            <expr>
                                                <name>
                                                    <name>fElementChildren</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fElementChildrenLength</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>qname</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <name>fElementChildrenLength</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>fElementChildren</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fElementChildren</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = new
                                                            <call>
                                                                <name>QName</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            <expr_stmt>
                                                <expr>
                                                    <name>qname</name>
                                                    =
                                                    <name>
                                                        <name>fElementChildren</name>
                                                        <index>[
                                                            <expr>
                                                                <name>fElementChildrenLength</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>qname</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr><name>fElementChildrenLength</name>++
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// save current element information</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentElement</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureStackCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fElementDepth</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementQNamePartsStack</name>
                                <index>[
                                    <expr>
                                        <name>fElementDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            .
                            <call>
                                <name>setValues</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentElement</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementIndexStack</name>
                                <index>[
                                    <expr>
                                        <name>fElementDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>fCurrentElementIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fContentSpecTypeStack</name>
                                <index>[
                                    <expr>
                                        <name>fElementDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>fCurrentContentSpecType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>startNamespaceScope</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// handleStartElement(QName,XMLAttributes)</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>startNamespaceScope</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/** Handle end element. */</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>handleEndElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isEmpty</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// decrease element depth</comment>
                    <expr_stmt>
                        <expr><name>fElementDepth</name>--
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// validate</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPerformValidation</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>elementIndex</name> =
                                        <init>
                                            <expr>
                                                <name>fCurrentElementIndex</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>elementIndex</name>
                                            != -1 &amp;&amp; <name>fCurrentContentSpecType</name> != -1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>QName</name>
                                                    </type>
                                                    <name>
                                                        <name>children</name>
                                                        <index>[]</index>
                                                    </name>
                                                    =
                                                    <init>
                                                        <expr>
                                                            <name>fElementChildren</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>childrenOffset</name> =
                                                    <init>
                                                        <expr>
                                                            <name>
                                                                <name>fElementChildrenOffsetStack</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>fElementDepth</name>
                                                                        + 1
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            + 1
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>childrenLength</name> =
                                                    <init>
                                                        <expr>
                                                            <name>fElementChildrenLength</name>
                                                            -
                                                            <name>childrenOffset</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>result</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>checkContent</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elementIndex</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>children</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>childrenOffset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>childrenLength</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>result</name>
                                                        != -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fDTDGrammar</name>.
                                                                        <name>getElementDecl</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>elementIndex</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fTempElementDecl</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name><name>fTempElementDecl</name>.
                                                                        <name>type</name>
                                                                    </name>
                                                                    ==
                                                                    <name><name>XMLElementDecl</name>.
                                                                        <name>TYPE_EMPTY</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"MSG_CONTENT_INVALID"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        element</name>.
                                                                                                        <name>rawname
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                , <expr>"EMPTY"</expr>}
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>String</name>
                                                                            </type>
                                                                            <name>messageKey</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name>result</name>
                                                                                    != <name>childrenLength</name> ?
                                                                                    "MSG_CONTENT_INVALID" :
                                                                                    "MSG_CONTENT_INCOMPLETE"
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>messageKey</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        element</name>.
                                                                                                        <name>rawname
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ,
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            fDTDGrammar</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                getContentSpecAsString
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        elementIndex
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>SEVERITY_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>fElementChildrenLength</name>
                                        =
                                        <name>
                                            <name>fElementChildrenOffsetStack</name>
                                            <index>[
                                                <expr>
                                                    <name>fElementDepth</name>
                                                    + 1
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        + 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>endNamespaceScope</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentElement</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isEmpty</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// now pop this element off the top of the element stack</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fElementDepth</name>
                                &lt; -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>RuntimeException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"FWK008 Element stack underflow"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fElementDepth</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fCurrentElement</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentElementIndex</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fCurrentContentSpecType</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fInElementContent</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// TO DO : fix this</comment>
                                <comment type="line">//</comment>
                                <comment type="line">// Check after document is fully parsed</comment>
                                <comment type="line">// (1) check that there was an element with a matching id for
                                    every
                                </comment>
                                <comment type="line">// IDREF and IDREFS attr (V_IDREF0)</comment>
                                <comment type="line">//</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fPerformValidation</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>value</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>fValidationState</name>.
                                                                    <name>checkIDRefID</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>value</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>reportError</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLMessageFormatter</name>.
                                                                                    <name>XML_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>"MSG_ELEMENT_WITH_ID_REQUIRED"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLErrorReporter</name>.
                                                                                    <name>SEVERITY_ERROR</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If Namespace enable then localName != rawName</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentElement</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>
                                                <name>fElementQNamePartsStack</name>
                                                <index>[
                                                    <expr>
                                                        <name>fElementDepth</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fCurrentElementIndex</name>
                            =
                            <name>
                                <name>fElementIndexStack</name>
                                <index>[
                                    <expr>
                                        <name>fElementDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentContentSpecType</name>
                            =
                            <name>
                                <name>fContentSpecTypeStack</name>
                                <index>[
                                    <expr>
                                        <name>fElementDepth</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fInElementContent</name>
                            = (<name>fCurrentContentSpecType</name> ==
                            <name><name>XMLElementDecl</name>.
                                <name>TYPE_CHILDREN</name>
                            </name>
                            )
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// handleEndElement(QName,boolean)</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>endNamespaceScope</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isEmpty</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// call handlers</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDocumentHandler</name>
                                != <name>null</name> &amp;&amp; !
                                <name>isEmpty</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// NOTE: The binding of the element doesn't actually happen
                                </comment>
                                <comment type="line">// yet because the namespace binder does that. However,</comment>
                                <comment type="line">// if it does it before this point, then the endPrefix-</comment>
                                <comment type="line">// Mapping calls get made too soon! As long as the</comment>
                                <comment type="line">// rawnames match, we know it'll have a good binding,</comment>
                                <comment type="line">// so we can just use the current element. -Ac</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fDocumentHandler</name>.
                                                <name>endElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentElement</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>augs</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">// returns whether a character is space according to the</comment>
            <comment type="line">// version of XML this validator supports.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isSpace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isSpace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>c</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isSpace(int): boolean</comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>characterData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>characters</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>XMLString</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>data</name>.
                                                                    <name>toCharArray</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>data</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XMLDTDValidator</comment>
</unit>
