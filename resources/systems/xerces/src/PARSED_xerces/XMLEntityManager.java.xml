<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\XMLEntityManager.java">
    <comment type="block">/*
        * Copyright 1999-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>impl</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStreamReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>StringReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Method</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>HttpURLConnection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URL</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>net</name>.
            <name>URLConnection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Map</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Stack</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>io</name>.
            <name>ASCIIReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>io</name>.
            <name>UCSReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>io</name>.
            <name>UTF8Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>validation</name>.
            <name>ValidationManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>AugmentationsImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>EncodingMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>HTTPInputSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SecurityManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>URI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLEntityDescriptionImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLResourceIdentifierImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLEntityResolver</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The entity manager handles the registration of general and parameter
        * entities; resolves entities; and starts entities. The entity manager
        * is a central component in a standard parser configuration and this
        * class works directly with the entity scanner to manage the underlying
        * xni.
        * &lt;p&gt;
        * This component requires the following features and properties from the
        * component manager that uses it:
        * &lt;ul&gt;
        * &lt;li&gt;http://xml.org/sax/features/validation&lt;/li&gt;
        * &lt;li&gt;http://xml.org/sax/features/external-general-entities&lt;/li&gt;
        * &lt;li&gt;http://xml.org/sax/features/external-parameter-entities&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/allow-java-encodings&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/symbol-table&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/entity-resolver&lt;/li&gt;
        * &lt;/ul&gt;
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        * @author Arnaud Le Hors, IBM
        *
        * @version $Id: XMLEntityManager.java,v 1.94 2005/04/19 03:18:18 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class
        <name>XMLEntityManager</name>
        <super>
            <implements>implements <name>XMLComponent</name>,
                <name>XMLEntityResolver</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default buffer size (2048). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DEFAULT_BUFFER_SIZE</name> =
                    <init>
                        <expr>2048</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Default buffer size before we've finished with the XMLDecl: */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DEFAULT_XMLDECL_BUFFER_SIZE</name> =
                    <init>
                        <expr>64</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Default internal entity buffer size (512). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DEFAULT_INTERNAL_BUFFER_SIZE</name> =
                    <init>
                        <expr>512</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// feature identifiers</comment>

            <comment type="javadoc">/** Feature identifier: validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: external general entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>EXTERNAL_GENERAL_ENTITIES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>EXTERNAL_GENERAL_ENTITIES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: external parameter entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>EXTERNAL_PARAMETER_ENTITIES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>EXTERNAL_PARAMETER_ENTITIES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: allow Java encodings. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ALLOW_JAVA_ENCODINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ALLOW_JAVA_ENCODINGS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: warn on duplicate EntityDef */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>WARN_ON_DUPLICATE_ENTITYDEF</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>WARN_ON_DUPLICATE_ENTITYDEF_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: standard uri conformant */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>STANDARD_URI_CONFORMANT</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>STANDARD_URI_CONFORMANT_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>PARSER_SETTINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>PARSER_SETTINGS</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: entity resolver. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENTITY_RESOLVER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ENTITY_RESOLVER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// property identifier: ValidationManager</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** property identifier: buffer size. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>BUFFER_SIZE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>BUFFER_SIZE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** property identifier: security manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SECURITY_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SECURITY_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// recognized features and properties</comment>

            <comment type="javadoc">/** Recognized features. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_FEATURES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>VALIDATION</name>
                                </expr>
                                ,
                                <expr>
                                    <name>EXTERNAL_GENERAL_ENTITIES</name>
                                </expr>
                                ,
                                <expr>
                                    <name>EXTERNAL_PARAMETER_ENTITIES</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ALLOW_JAVA_ENCODINGS</name>
                                </expr>
                                ,
                                <expr>
                                    <name>WARN_ON_DUPLICATE_ENTITYDEF</name>
                                </expr>
                                ,
                                <expr>
                                    <name>STANDARD_URI_CONFORMANT</name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Boolean</name>
                        <index>[]</index>
                    </type>
                    <name>FEATURE_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>TRUE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>TRUE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>FALSE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>FALSE</name>
                                    </name>
                                </expr>
                                ,
                                <expr>
                                    <name><name>Boolean</name>.
                                        <name>FALSE</name>
                                    </name>
                                </expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Recognized properties. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>RECOGNIZED_PROPERTIES</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>SYMBOL_TABLE</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ERROR_REPORTER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>ENTITY_RESOLVER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>VALIDATION_MANAGER</name>
                                </expr>
                                ,
                                <expr>
                                    <name>BUFFER_SIZE</name>
                                </expr>
                                ,
                                <expr>
                                    <name>SECURITY_MANAGER</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property defaults. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>PROPERTY_DEFAULTS</name> =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                <expr>new
                                    <call>
                                        <name>Integer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_BUFFER_SIZE</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ,
                                <expr>
                                    <name>null</name>
                                </expr>
                                ,
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>XMLEntity</name> =
                    <init>
                        <expr>"[xml]".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>DTDEntity</name> =
                    <init>
                        <expr>"[dtd]".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// debugging</comment>

            <comment type="javadoc">/**
                * Debug printing of buffer. This debugging flag works best when you
                * resize the DEFAULT_BUFFER_SIZE down to something reasonable like
                * 64 characters.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_BUFFER</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Debug some basic entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ENTITIES</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Debug switching readers for encodings. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ENCODINGS</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// should be diplayed trace resolving messages</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_RESOLVER</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="line">// features</comment>

            <comment type="javadoc">/**
                * Validation. This feature identifier is:
                * http://xml.org/sax/features/validation
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fValidation</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * External general entities. This feature identifier is:
                * http://xml.org/sax/features/external-general-entities
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fExternalGeneralEntities</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * External parameter entities. This feature identifier is:
                * http://xml.org/sax/features/external-parameter-entities
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fExternalParameterEntities</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Allow Java encoding names. This feature identifier is:
                * http://apache.org/xml/features/allow-java-encodings
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fAllowJavaEncodings</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** warn on duplicate Entity declaration.
                * http://apache.org/xml/features/warn-on-duplicate-entitydef
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fWarnDuplicateEntityDef</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * standard uri conformant (strict uri).
                * http://apache.org/xml/features/standard-uri-conformant
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fStrictURI</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/**
                * Symbol table. This property identifier is:
                * http://apache.org/xml/properties/internal/symbol-table
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Error reporter. This property identifier is:
                * http://apache.org/xml/properties/internal/error-reporter
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Entity resolver. This property identifier is:
                * http://apache.org/xml/properties/internal/entity-resolver
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityResolver</name>
                    </type>
                    <name>fEntityResolver</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Validation manager. This property identifier is:
                * http://apache.org/xml/properties/internal/validation-manager
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ValidationManager</name>
                    </type>
                    <name>fValidationManager</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// settings</comment>

            <comment type="javadoc">/**
                * Buffer size. We get this value from a property. The default size
                * is used if the input buffer size property is not specified.
                * REVISIT: do we need a property for internal entity buffer size?
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fBufferSize</name> =
                    <init>
                        <expr>
                            <name>DEFAULT_BUFFER_SIZE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// stores defaults for entity expansion limit if it has</comment>
            <comment type="line">// been set on the configuration.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SecurityManager</name>
                    </type>
                    <name>fSecurityManager</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * True if the document entity is standalone. This should really
                * only be set by the document source (e.g. XMLDocumentScanner).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fStandalone</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// are the entities being parsed in the external subset?</comment>
            <comment type="line">// NOTE: this *is not* the same as whether they're external entities!</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fInExternalSubset</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// handlers</comment>

            <comment type="javadoc">/** Entity handler. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityHandler</name>
                    </type>
                    <name>fEntityHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// scanner</comment>

            <comment type="javadoc">/** Current entity scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityScanner</name>
                    </type>
                    <name>fEntityScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.0 entity scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityScanner</name>
                    </type>
                    <name>fXML10EntityScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** XML 1.1 entity scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityScanner</name>
                    </type>
                    <name>fXML11EntityScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// entity expansion limit (contains useful data if and only if</comment>
            <comment type="line">// fSecurityManager is non-null)</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fEntityExpansionLimit</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// entity currently being expanded:</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fEntityExpansionCount</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// entities</comment>

            <comment type="javadoc">/** Entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fEntities</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fEntityStack</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current entity. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>ScannedEntity</name>
                    </type>
                    <name>fCurrentEntity</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// shared context</comment>

            <comment type="javadoc">/** Shared declared entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fDeclaredEntities</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temp vars</comment>

            <comment type="javadoc">/** Resource identifer. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>XMLResourceIdentifierImpl</name>
                    </type>
                    <name>fResourceIdentifier</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLResourceIdentifierImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Augmentations for entities. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>Augmentations</name>
                    </type>
                    <name>fEntityAugs</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>AugmentationsImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Pool of character buffers. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CharacterBufferPool</name>
                    </type>
                    <name>fBufferPool</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>CharacterBufferPool</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fBufferSize</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>DEFAULT_INTERNAL_BUFFER_SIZE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLEntityManager</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="javadoc">/**
                * Constructs an entity manager that shares the specified entity
                * declarations during each parse.
                * &lt;p&gt;
                * &lt;strong&gt;REVISIT:&lt;/strong&gt; We might want to think about the "right"
                * way to expose the list of declared entities. For now, the knowledge
                * how to access the entity declarations is implicit.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLEntityManager</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityManager</name>
                            </type>
                            <name>entityManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{


                    <comment type="line">// save shared entity declarations</comment>
                    <expr_stmt>
                        <expr>
                            <name>fDeclaredEntities</name>
                            = <name>entityManager</name> !=
                            <name>null</name>
                            ?
                            <call>
                                <name><name>entityManager</name>.
                                    <name>getDeclaredEntities</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setScannerVersion</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XML_VERSION_1_0</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(XMLEntityManager)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Sets whether the document entity is standalone.
                *
                * @param standalone True if document entity is standalone.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStandalone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>standalone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fStandalone</name>
                            =
                            <name>standalone</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setStandalone(boolean)</comment>

            <comment type="javadoc">/** Returns true if the document entity is standalone. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isStandalone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fStandalone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isStandalone():boolean</comment>

            <comment type="javadoc">/**
                * Sets the entity handler. When an entity starts and ends, the
                * entity handler is notified of the change.
                *
                * @param entityHandler The new entity handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEntityHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityHandler</name>
                            </type>
                            <name>entityHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEntityHandler</name>
                            =
                            <name>entityHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setEntityHandler(XMLEntityHandler)</comment>

            <comment type="line">// this simply returns the fResourceIdentifier object;</comment>
            <comment type="line">// this should only be used with caution by callers that</comment>
            <comment type="line">// carefully manage the entity manager's behaviour, so that</comment>
            <comment type="line">// this doesn't returning meaningless or misleading data.</comment>
            <comment type="line">// @return a reference to the current fResourceIdentifier object</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLResourceIdentifier</name>
                </type>
                <name>getCurrentResourceIdentifier</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fResourceIdentifier</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// this simply returns the fCurrentEntity object;</comment>
            <comment type="line">// this should only be used with caution by callers that</comment>
            <comment type="line">// carefully manage the entity manager's behaviour, so that</comment>
            <comment type="line">// this doesn't returning meaningless or misleading data.</comment>
            <comment type="line">// @return a reference to the current fCurrentEntity object</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ScannedEntity</name>
                </type>
                <name>getCurrentEntity</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fCurrentEntity</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds an internal entity declaration.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method ignores subsequent entity
                * declarations.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The name should be a unique symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @param name The name of the entity.
                * @param text The text of the entity.
                *
                * @see SymbolTable
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addInternalEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntities</name>.
                                        <name>containsKey</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Entity</name>
                                        </type>
                                        <name>entity</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>InternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>text</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fInExternalSubset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntities</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fWarnDuplicateEntityDef</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_DUPLICATE_ENTITY_DEFINITION"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_WARNING</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// addInternalEntity(String,String)</comment>

            <comment type="javadoc">/**
                * Adds an external entity declaration.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method ignores subsequent entity
                * declarations.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The name should be a unique symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @param name The name of the entity.
                * @param publicId The public identifier of the entity.
                * @param literalSystemId The system identifier of the entity.
                * @param baseSystemId The base system identifier of the entity.
                * This is the system identifier of the entity
                * where &lt;em&gt;the entity being added&lt;/em&gt; and
                * is used to expand the system identifier when
                * the system identifier is a relative URI.
                * When null the system identifier of the first
                * external entity on the stack is used instead.
                *
                * @see SymbolTable
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addExternalEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>literalSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntities</name>.
                                        <name>containsKey</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>baseSystemId</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// search for the first external entity on the stack
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>size</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityStack</name>.
                                                                    <name>size</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>size</name>
                                                        == 0 &amp;&amp; <name>fCurrentEntity</name> != <name>null</name> &amp;&amp;
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>entityLocation</name>
                                                        </name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>baseSystemId</name>
                                                                =
                                                                <call>
                                                                    <name><name>fCurrentEntity</name>.<name>
                                                                        entityLocation</name>.
                                                                        <name>getExpandedSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>
                                                                <name>size</name>
                                                                - 1
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &gt;= 0
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>--
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>ScannedEntity</name>
                                                            </type>
                                                            <name>externalEntity</name> =
                                                            <init>
                                                                <expr>(<name>ScannedEntity</name>)
                                                                    <call>
                                                                        <name><name>fEntityStack</name>.
                                                                            <name>elementAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>externalEntity</name>.
                                                                    <name>entityLocation</name>
                                                                </name>
                                                                != <name>null</name> &amp;&amp;
                                                                <call>
                                                                    <name><name>externalEntity</name>.<name>
                                                                        entityLocation</name>.
                                                                        <name>getExpandedSystemId</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>baseSystemId</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>externalEntity</name>.<name>
                                                                                entityLocation</name>.
                                                                                <name>getExpandedSystemId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Entity</name>
                                        </type>
                                        <name>entity</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>ExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>XMLEntityDescriptionImpl</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>name</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>publicId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>literalSystemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>baseSystemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>expandSystemId</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>literalSystemId
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>baseSystemId
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>false</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fInExternalSubset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntities</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fWarnDuplicateEntityDef</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_DUPLICATE_ENTITY_DEFINITION"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_WARNING</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// addExternalEntity(String,String,String,String)</comment>

            <comment type="javadoc">/**
                * Checks whether an entity given by name is external.
                *
                * @param entityName The name of the entity to check.
                * @return True if the entity is external, false otherwise
                * (including when the entity is not declared).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isExternalEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Entity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>(<name>Entity</name>)
                                    <call>
                                        <name><name>fEntities</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entityName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entity</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>entity</name>.
                                    <name>isExternal</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether the declaration of an entity given by name is
                // in the external subset.
                *
                * @param entityName The name of the entity to check.
                * @return True if the entity was declared in the external subset, false otherwise
                * (including when the entity is not declared).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isEntityDeclInExternalSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Entity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>(<name>Entity</name>)
                                    <call>
                                        <name><name>fEntities</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entityName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entity</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>entity</name>.
                                    <name>isEntityDeclInExternalSubset</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds an unparsed entity declaration.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method ignores subsequent entity
                * declarations.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The name should be a unique symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @param name The name of the entity.
                * @param publicId The public identifier of the entity.
                * @param systemId The system identifier of the entity.
                * @param notation The name of the notation.
                *
                * @see SymbolTable
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addUnparsedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntities</name>.
                                        <name>containsKey</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>name</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Entity</name>
                                        </type>
                                        <name>entity</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>ExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>XMLEntityDescriptionImpl</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>name</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>publicId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>systemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>baseSystemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>notation</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fInExternalSubset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntities</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>entity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fWarnDuplicateEntityDef</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"MSG_DUPLICATE_ENTITY_DEFINITION"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>name</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_WARNING</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// addUnparsedEntity(String,String,String,String)</comment>

            <comment type="javadoc">/**
                * Checks whether an entity given by name is unparsed.
                *
                * @param entityName The name of the entity to check.
                * @return True if the entity is unparsed, false otherwise
                * (including when the entity is not declared).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isUnparsedEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Entity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>(<name>Entity</name>)
                                    <call>
                                        <name><name>fEntities</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entityName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entity</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>entity</name>.
                                    <name>isUnparsed</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether an entity given by name is declared.
                *
                * @param entityName The name of the entity to check.
                * @return True if the entity is declared, false otherwise.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDeclaredEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Entity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>(<name>Entity</name>)
                                    <call>
                                        <name><name>fEntities</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entityName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>entity</name>
                            !=
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resolves the specified public and system identifiers. This
                * method first attempts to resolve the entity based on the
                * EntityResolver registered by the application. If no entity
                * resolver is registered or if the registered entity handler
                * is unable to resolve the entity, then default entity
                * resolution will occur.
                *
                * @param publicId The public identifier of the entity.
                * @param systemId The system identifier of the entity.
                * @param baseSystemId The base system identifier of the entity.
                * This is the system identifier of the current
                * entity and is used to expand the system
                * identifier when the system identifier is a
                * relative URI.
                *
                * @return Returns an input source that wraps the resolved entity.
                * This method will never return null.
                *
                * @throws IOException Thrown on i/o error.
                * @throws XNIException Thrown by entity resolver to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLInputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>resourceIdentifier</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getPublicId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>literalSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getLiteralSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getBaseSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>expandedSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>resourceIdentifier</name>.
                                            <name>getExpandedSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// if no base systemId given, assume that it's relative</comment>
                    <comment type="line">// to the systemId of the current scanned entity</comment>
                    <comment type="line">// Sometimes the system id is not (properly) expanded.</comment>
                    <comment type="line">// We need to expand the system id if:</comment>
                    <comment type="line">// a. the expanded one was null; or</comment>
                    <comment type="line">// b. the base system id was null, but becomes non-null from the current
                        entity.
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>needExpand</name> =
                            <init>
                                <expr>(<name>expandedSystemId</name> == <name>null</name>)
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// REVISIT: why would the baseSystemId ever be null? if we</comment>
                    <comment type="line">// didn't have to make this check we wouldn't have to reuse the</comment>
                    <comment type="line">// fXMLResourceIdentifier object...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>baseSystemId</name>
                                == <name>null</name> &amp;&amp; <name>fCurrentEntity</name> != <name>null</name> &amp;&amp;
                                <name><name>fCurrentEntity</name>.
                                    <name>entityLocation</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseSystemId</name>
                                        =
                                        <call>
                                            <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                                <name>getExpandedSystemId</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>baseSystemId</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>needExpand</name>
                                                = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>needExpand</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>expandedSystemId</name>
                                    =
                                    <call>
                                        <name>expandSystemId</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>literalSystemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>baseSystemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// give the entity resolver a chance</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityResolver</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>resourceIdentifier</name>.
                                                <name>setBaseSystemId</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>baseSystemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>resourceIdentifier</name>.
                                                <name>setExpandedSystemId</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>expandedSystemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>xmlInputSource</name>
                                        =
                                        <call>
                                            <name><name>fEntityResolver</name>.
                                                <name>resolveEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>resourceIdentifier</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// do default resolution</comment>
                    <comment type="line">// REVISIT: what's the correct behavior if the user provided an entity
                    </comment>
                    <comment type="line">// resolver (fEntityResolver != null), but resolveEntity doesn't return
                    </comment>
                    <comment type="line">// an input source (xmlInputSource == null)?</comment>
                    <comment type="line">// do we do default resolution, or do we just return null? -SG</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>xmlInputSource</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// REVISIT: when systemId is null, I think we should return null.
                                </comment>
                                <comment type="line">// is this the right solution? -SG</comment>
                                <comment type="line">//if (systemId != null)</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>xmlInputSource</name>
                                        = new
                                        <call>
                                            <name>XMLInputSource</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>publicId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>literalSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>baseSystemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_RESOLVER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>err</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"XMLEntityManager.resolveEntity(" + <name>publicId</name> +
                                                        ")"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>err</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" = " +
                                                        <name>xmlInputSource</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>xmlInputSource</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// resolveEntity(XMLResourceIdentifier):XMLInputSource</comment>

            <comment type="javadoc">/**
                * Starts a named entity.
                *
                * @param entityName The name of the entity to start.
                * @param literal True if this entity is started within a literal
                * value.
                *
                * @throws IOException Thrown on i/o error.
                * @throws XNIException Thrown by entity handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>entityName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>literal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// was entity declared?</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Entity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>(<name>Entity</name>)
                                    <call>
                                        <name><name>fEntities</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entityName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>entity</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fEntityHandler</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>encoding</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fResourceIdentifier</name>.
                                                            <name>clear</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityAugs</name>.
                                                            <name>removeAllItems</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityAugs</name>.
                                                            <name>putItem</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ENTITY_SKIPPED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Boolean</name>.
                                                                        <name>TRUE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityHandler</name>.
                                                            <name>startEntity</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>entityName</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fResourceIdentifier</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>encoding</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fEntityAugs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityAugs</name>.
                                                            <name>removeAllItems</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityAugs</name>.
                                                            <name>putItem</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ENTITY_SKIPPED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Boolean</name>.
                                                                        <name>TRUE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityHandler</name>.
                                                            <name>endEntity</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>entityName</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fEntityAugs</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// should we skip external entities?</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>entity</name>.
                                            <name>isExternal</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>external</name>
                                &amp;&amp; (<name>fValidationManager</name> == <name>null</name> || !
                                <call>
                                    <name><name>fValidationManager</name>.
                                        <name>isCachedDTD</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>unparsed</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entity</name>.
                                                        <name>isUnparsed</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>parameter</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>entityName</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"%"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>general</name> =
                                        <init>
                                            <expr>!
                                                <name>parameter</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>unparsed</name>
                                            || (<name>general</name> &amp;&amp; !<name>fExternalGeneralEntities</name>)
                                            ||
                                            (<name>parameter</name> &amp;&amp; !<name>fExternalParameterEntities</name>)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fEntityHandler</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fResourceIdentifier</name>.
                                                                        <name>clear</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <specifier>final</specifier>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>encoding</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>ExternalEntity</name>
                                                                </type>
                                                                <name>externalEntity</name> =
                                                                <init>
                                                                    <expr>(<name>ExternalEntity</name>)
                                                                        <name>entity</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <comment type="line">//REVISIT: since we're storing
                                                            expandedSystemId in the
                                                        </comment>
                                                        <comment type="line">// externalEntity, how could this have got
                                                            here if it wasn't already
                                                        </comment>
                                                        <comment type="line">// expanded??? - neilg</comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>extLitSysId</name> =
                                                                <init>
                                                                    <expr>(
                                                                        <name><name>externalEntity</name>.
                                                                            <name>entityLocation</name>
                                                                        </name>
                                                                        != <name>null</name> ?
                                                                        <call>
                                                                            <name><name>externalEntity</name>.<name>
                                                                                entityLocation</name>.
                                                                                <name>getLiteralSystemId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        : <name>null</name>)
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>extBaseSysId</name> =
                                                                <init>
                                                                    <expr>(
                                                                        <name><name>externalEntity</name>.
                                                                            <name>entityLocation</name>
                                                                        </name>
                                                                        != <name>null</name> ?
                                                                        <call>
                                                                            <name><name>externalEntity</name>.<name>
                                                                                entityLocation</name>.
                                                                                <name>getBaseSystemId</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        : <name>null</name>)
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>expandedSystemId</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name>expandSystemId</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>extLitSysId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>extBaseSysId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>false</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fResourceIdentifier</name>.
                                                                        <name>setValues</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(
                                                                                <name><name>externalEntity</name>.
                                                                                    <name>entityLocation</name>
                                                                                </name>
                                                                                != <name>null</name> ?
                                                                                <call>
                                                                                    <name><name>externalEntity</name>
                                                                                        .<name>entityLocation</name>.
                                                                                        <name>getPublicId</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                : <name>null</name>)
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>extLitSysId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>extBaseSysId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>expandedSystemId</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityAugs</name>.
                                                                        <name>removeAllItems</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityAugs</name>.
                                                                        <name>putItem</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Constants</name>.
                                                                                    <name>ENTITY_SKIPPED</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Boolean</name>.
                                                                                    <name>TRUE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityHandler</name>.
                                                                        <name>startEntity</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>entityName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fResourceIdentifier</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>encoding</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fEntityAugs</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityAugs</name>.
                                                                        <name>removeAllItems</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityAugs</name>.
                                                                        <name>putItem</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Constants</name>.
                                                                                    <name>ENTITY_SKIPPED</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Boolean</name>.
                                                                                    <name>TRUE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityHandler</name>.
                                                                        <name>endEntity</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>entityName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fEntityAugs</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// is entity recursive?</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityStack</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>size</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Entity</name>
                                    </type>
                                    <name>activeEntity</name> =
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            ==
                                            <name>size</name>
                                            ?
                                            <name>fCurrentEntity</name>
                                            : (<name>Entity</name>)
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>activeEntity</name>.
                                            <name>name</name>
                                        </name>
                                        ==
                                        <name>entityName</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>StringBuffer</name>
                                                </type>
                                                <name>path</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringBuffer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>entityName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>j</name> =
                                                    <init>
                                                        <expr>
                                                            <name>i</name>
                                                            + 1
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>j</name>
                                                    &lt;
                                                    <name>size</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>j</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>activeEntity</name>
                                                        = (<name>Entity</name>)
                                                        <call>
                                                            <name><name>fEntityStack</name>.
                                                                <name>elementAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>path</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" -&gt; "</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>path</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>activeEntity</name>.
                                                                            <name>name</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </for>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" -&gt; "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>name</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>" -&gt; "</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>path</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>entityName</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fErrorReporter</name>.
                                                        <name>reportError</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLMessageFormatter</name>.
                                                                    <name>XML_DOMAIN</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"RecursiveReference"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>entityName</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>path</name>.
                                                                                <name>toString</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>XMLErrorReporter</name>.
                                                                    <name>SEVERITY_FATAL_ERROR</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fEntityHandler</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fResourceIdentifier</name>.
                                                                    <name>clear</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <specifier>final</specifier>
                                                                <name>String</name>
                                                            </type>
                                                            <name>encoding</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>external</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>ExternalEntity</name>
                                                                        </type>
                                                                        <name>externalEntity</name> =
                                                                        <init>
                                                                            <expr>(<name>ExternalEntity</name>)
                                                                                <name>entity</name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <comment type="line">// REVISIT: for the same reason
                                                                    above...
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>extLitSysId</name> =
                                                                        <init>
                                                                            <expr>(
                                                                                <name><name>externalEntity</name>.
                                                                                    <name>entityLocation</name>
                                                                                </name>
                                                                                != <name>null</name> ?
                                                                                <call>
                                                                                    <name><name>externalEntity</name>
                                                                                        .<name>entityLocation</name>.
                                                                                        <name>getLiteralSystemId</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                : <name>null</name>)
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>extBaseSysId</name> =
                                                                        <init>
                                                                            <expr>(
                                                                                <name><name>externalEntity</name>.
                                                                                    <name>entityLocation</name>
                                                                                </name>
                                                                                != <name>null</name> ?
                                                                                <call>
                                                                                    <name><name>externalEntity</name>
                                                                                        .<name>entityLocation</name>.
                                                                                        <name>getBaseSystemId</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                : <name>null</name>)
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>expandedSystemId</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>expandSystemId</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>extLitSysId</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>extBaseSysId
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>false</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fResourceIdentifier</name>.
                                                                                <name>setValues</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(
                                                                                        <name><name>
                                                                                            externalEntity</name>.
                                                                                            <name>entityLocation</name>
                                                                                        </name>
                                                                                        != <name>null</name> ?
                                                                                        <call>
                                                                                            <name><name>
                                                                                                externalEntity</name>
                                                                                                .<name>
                                                                                                    entityLocation</name>.
                                                                                                <name>getPublicId</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        : <name>null</name>)
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>extLitSysId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>extBaseSysId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>expandedSystemId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityAugs</name>.
                                                                    <name>removeAllItems</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityAugs</name>.
                                                                    <name>putItem</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Constants</name>.
                                                                                <name>ENTITY_SKIPPED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Boolean</name>.
                                                                                <name>TRUE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityHandler</name>.
                                                                    <name>startEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>entityName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fResourceIdentifier</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fEntityAugs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityAugs</name>.
                                                                    <name>removeAllItems</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityAugs</name>.
                                                                    <name>putItem</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Constants</name>.
                                                                                <name>ENTITY_SKIPPED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Boolean</name>.
                                                                                <name>TRUE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityHandler</name>.
                                                                    <name>endEntity</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>entityName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fEntityAugs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return;</return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// resolve external entity</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>external</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ExternalEntity</name>
                                        </type>
                                        <name>externalEntity</name> =
                                        <init>
                                            <expr>(<name>ExternalEntity</name>)
                                                <name>entity</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>xmlInputSource</name>
                                        =
                                        <call>
                                            <name>resolveEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>externalEntity</name>.
                                                            <name>entityLocation</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>

                        <comment type="line">// wrap internal entity</comment>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>InternalEntity</name>
                                        </type>
                                        <name>internalEntity</name> =
                                        <init>
                                            <expr>(<name>InternalEntity</name>)
                                                <name>entity</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Reader</name>
                                        </type>
                                        <name>reader</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StringReader</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>internalEntity</name>.
                                                                    <name>text</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>xmlInputSource</name>
                                        = new
                                        <call>
                                            <name>XMLInputSource</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>reader</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// start the entity</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>startEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>entityName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlInputSource</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>literal</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>external</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// startEntity(String,boolean)</comment>

            <comment type="javadoc">/**
                * Starts the document entity. The document entity has the "[xml]"
                * pseudo-name.
                *
                * @param xmlInputSource The input source of the document entity.
                *
                * @throws IOException Thrown on i/o error.
                * @throws XNIException Thrown by entity handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocumentEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>startEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>XMLEntity</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlInputSource</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// startDocumentEntity(XMLInputSource)</comment>

            <comment type="javadoc">/**
                * Starts the DTD entity. The DTD entity has the "[dtd]"
                * pseudo-name.
                *
                * @param xmlInputSource The input source of the DTD entity.
                *
                * @throws IOException Thrown on i/o error.
                * @throws XNIException Thrown by entity handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDTDEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>startEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DTDEntity</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>xmlInputSource</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// startDTDEntity(XMLInputSource)</comment>

            <comment type="line">// indicate start of external subset so that</comment>
            <comment type="line">// location of entity decls can be tracked</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startExternalSubset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fInExternalSubset</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endExternalSubset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fInExternalSubset</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Starts an entity.
                * &lt;p&gt;
                * This method can be used to insert an application defined XML
                * entity stream into the parsing stream.
                *
                * @param name The name of the entity.
                * @param xmlInputSource The input source of the entity.
                * @param literal True if this entity is started within a
                * literal value.
                * @param isExternal whether this entity should be treated as an internal or external entity.
                *
                * @throws IOException Thrown on i/o error.
                * @throws XNIException Thrown by entity handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>literal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isExternal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>setupCurrentEntity</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xmlInputSource</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>literal</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>isExternal</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//when entity expansion limit is set by the Application, we need to</comment>
                    <comment type="line">//check for the entity expansion limit set by the parser, if number of entity
                    </comment>
                    <comment type="line">//expansions exceeds the entity expansion limit, parser will throw fatal
                        error.
                    </comment>
                    <comment type="line">// Note that this is intentionally unbalanced; it counts</comment>
                    <comment type="line">// the number of expansions *per document*.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fSecurityManager</name>
                                != <name>null</name> &amp;&amp; <name>fEntityExpansionCount</name>++ &gt;
                                <name>fEntityExpansionLimit</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLMessageFormatter</name>.
                                                            <name>XML_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"EntityExpansionLimitExceeded"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>new
                                                                <call>
                                                                    <name>Integer</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fEntityExpansionLimit</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLErrorReporter</name>.
                                                            <name>SEVERITY_FATAL_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// is there anything better to do than reset the counter?</comment>
                                <comment type="line">// at least one can envision debugging applications where this
                                    might
                                </comment>
                                <comment type="line">// be useful...</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityExpansionCount</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// call handler</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityHandler</name>.
                                                <name>startEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fResourceIdentifier</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// startEntity(String,XMLInputSource)</comment>

            <comment type="javadoc">/**
                * This method uses the passed-in XMLInputSource to make
                * fCurrentEntity usable for reading.
                * @param name name of the entity (XML is it's the document entity)
                * @param xmlInputSource the input source, with sufficient information
                * to begin scanning characters.
                * @param literal True if this entity is started within a
                * literal value.
                * @param isExternal whether this entity should be treated as an internal or external entity.
                * @throws IOException if anything can't be read
                * XNIException If any parser-specific goes wrong.
                * @return the encoding of the new entity or null if a character stream was employed
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>setupCurrentEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>xmlInputSource</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>literal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isExternal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// get information</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>publicId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>getPublicId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>literalSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>getSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>getBaseSystemId</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>getEncoding</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>boolean</name>
                            </type>
                            <name>encodingExternallySpecified</name> =
                            <init>
                                <expr>(<name>encoding</name> != <name>null</name>)
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>isBigEndian</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// create reader</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>stream</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Reader</name>
                            </type>
                            <name>reader</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xmlInputSource</name>.
                                            <name>getCharacterStream</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// First chance checking strict URI</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>expandedSystemId</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>expandSystemId</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>literalSystemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>baseSystemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fStrictURI</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>baseSystemId</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseSystemId</name>
                                        =
                                        <name>expandedSystemId</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>reader</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>stream</name>
                                        =
                                        <call>
                                            <name><name>xmlInputSource</name>.
                                                <name>getByteStream</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>stream</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>URL</name>
                                                    </type>
                                                    <name>location</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>URL</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>expandedSystemId</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>URLConnection</name>
                                                    </type>
                                                    <name>connect</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>location</name>.
                                                                    <name>openConnection</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>!(<name>connect</name>
                                                        <name>instanceof</name>
                                                        <name>HttpURLConnection</name>)
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>stream</name>
                                                                =
                                                                <call>
                                                                    <name><name>connect</name>.
                                                                        <name>getInputStream</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>boolean</name>
                                                                </type>
                                                                <name>followRedirects</name> =
                                                                <init>
                                                                    <expr>true</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>

                                                        <comment type="line">// setup URLConnection if we have an
                                                            HTTPInputSource
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>xmlInputSource</name>
                                                                    <name>instanceof</name>
                                                                    <name>HTTPInputSource</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <specifier>final</specifier>
                                                                                <name>HttpURLConnection</name>
                                                                            </type>
                                                                            <name>urlConnection</name> =
                                                                            <init>
                                                                                <expr>(<name>HttpURLConnection</name>)
                                                                                    <name>connect</name>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <specifier>final</specifier>
                                                                                <name>HTTPInputSource</name>
                                                                            </type>
                                                                            <name>httpInputSource</name> =
                                                                            <init>
                                                                                <expr>(<name>HTTPInputSource</name>)
                                                                                    <name>xmlInputSource</name>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>

                                                                    <comment type="line">// set request properties
                                                                    </comment>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>Iterator</name>
                                                                            </type>
                                                                            <name>propIter</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            httpInputSource</name>.
                                                                                            <name>
                                                                                                getHTTPRequestProperties
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <while>while
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>propIter</name>.
                                                                                        <name>hasNext</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name><name>Map</name>.
                                                                                            <name>Entry</name>
                                                                                        </name>
                                                                                    </type>
                                                                                    <name>entry</name> =
                                                                                    <init>
                                                                                        <expr>(
                                                                                            <name><name>Map</name>.
                                                                                                <name>Entry</name>
                                                                                            </name>
                                                                                            )
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    propIter</name>.
                                                                                                    <name>next</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>urlConnection</name>
                                                                                            .
                                                                                            <name>setRequestProperty
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>(<name>
                                                                                                    String</name>)
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            entry</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                getKey
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>(<name>
                                                                                                    String</name>)
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            entry</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                getValue
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </while>

                                                                    <comment type="line">// set preference for
                                                                        redirection
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>followRedirects</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>httpInputSource</name>.
                                                                                    <name>getFollowHTTPRedirects</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>!
                                                                                <name>followRedirects</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>
                                                                                                setInstanceFollowRedirects
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            urlConnection
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            followRedirects
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>

                                                        <expr_stmt>
                                                            <expr>
                                                                <name>stream</name>
                                                                =
                                                                <call>
                                                                    <name><name>connect</name>.
                                                                        <name>getInputStream</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// REVISIT: If the URLConnection has
                                                            external encoding
                                                        </comment>
                                                        <comment type="line">// information, we should be reading it
                                                            here. It's located
                                                        </comment>
                                                        <comment type="line">// in the charset parameter of
                                                            Content-Type. -- mrglavas
                                                        </comment>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>followRedirects</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>String</name>
                                                                            </type>
                                                                            <name>redirect</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>connect</name>.
                                                                                            <name>getURL</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                    .
                                                                                    <call>
                                                                                        <name>toString</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <comment type="line">// E43: Check if the URL was
                                                                        redirected, and then
                                                                    </comment>
                                                                    <comment type="line">// update literal and expanded
                                                                        system IDs if needed.
                                                                    </comment>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>!
                                                                                <call>
                                                                                    <name><name>redirect</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>expandedSystemId
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>literalSystemId</name>
                                                                                        =
                                                                                        <name>redirect</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>expandedSystemId</name>
                                                                                        =
                                                                                        <name>redirect</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// wrap this stream in RewindableInputStream</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>stream</name>
                                        = new
                                        <call>
                                            <name>RewindableInputStream</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>stream</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// perform auto-detect of encoding if necessary</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>encoding</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// read first four bytes and determine encoding
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <specifier>final</specifier>
                                                        <name>byte</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>b4</name> =
                                                    <init>
                                                        <expr>new
                                                            <name>
                                                                <name>byte</name>
                                                                <index>[<expr>4</expr>]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>count</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <for>for (<init>;</init>
                                                <condition>
                                                    <expr><name>count</name>&lt;4
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>count</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>b4</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>count</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            = (<name>byte</name>)
                                                            <call>
                                                                <name><name>stream</name>.
                                                                    <name>read</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>count</name>
                                                        == 4
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>encodingDesc</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name>getEncodingName</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>b4</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>count</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>encoding</name>
                                                                =
                                                                <call>(<name>String</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>encodingDesc</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>isBigEndian</name>
                                                                =
                                                                <call>(<name>Boolean</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>encodingDesc</name>
                                                                                    <index>[<expr>1</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>stream</name>.
                                                                        <name>reset</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>offset</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <comment type="line">// Special case UTF-8 files with BOM
                                                            created by Microsoft
                                                        </comment>
                                                        <comment type="line">// tools. It's more efficient to consume
                                                            the BOM than make
                                                        </comment>
                                                        <comment type="line">// the reader perform extra checks. -Ac
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>count</name>
                                                                    &gt; 2 &amp;&amp;
                                                                    <call>
                                                                        <name><name>encoding</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"UTF-8"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>b0</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>b4</name>
                                                                                        <index>[<expr>0</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    &amp; 0xFF
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>b1</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>b4</name>
                                                                                        <index>[<expr>1</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    &amp; 0xFF
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>b2</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>b4</name>
                                                                                        <index>[<expr>2</expr>]
                                                                                        </index>
                                                                                    </name>
                                                                                    &amp; 0xFF
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>b0</name>
                                                                                == 0xEF &amp;&amp; <name>b1</name> ==
                                                                                0xBB &amp;&amp; <name>b2</name> == 0xBF
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">// ignore first
                                                                                    three bytes...
                                                                                </comment>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>stream</name>.
                                                                                                <name>skip</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>3</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>reader</name>
                                                                =
                                                                <call>
                                                                    <name>createReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>stream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>encoding</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>isBigEndian</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>reader</name>
                                                                =
                                                                <call>
                                                                    <name>createReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>stream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>encoding</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>isBigEndian</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>

                                    <comment type="line">// use specified encoding</comment>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>encoding</name>
                                                    =
                                                    <call>
                                                        <name><name>encoding</name>.
                                                            <name>toUpperCase</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Locale</name>.
                                                                        <name>ENGLISH</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// If encoding is UTF-8, consume BOM if one is
                                                present.
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>encoding</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"UTF-8"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <specifier>final</specifier>
                                                                    <name>int</name>
                                                                    <index>[]</index>
                                                                </type>
                                                                <name>b3</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>int</name>
                                                                            <index>[<expr>3</expr>]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>count</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <for>for (<init>;</init>
                                                            <condition>
                                                                <expr>
                                                                    <name>count</name>
                                                                    &lt; 3
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr>++
                                                                    <name>count</name>
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>b3</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>count</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <call>
                                                                            <name><name>stream</name>.
                                                                                <name>read</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>
                                                                                <name>b3</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>count</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            == -1
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <break>break;</break>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </for>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>count</name>
                                                                    == 3
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>
                                                                                    <name>b3</name>
                                                                                    <index>[<expr>0</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                != 0xEF ||
                                                                                <name>
                                                                                    <name>b3</name>
                                                                                    <index>[<expr>1</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                != 0xBB ||
                                                                                <name>
                                                                                    <name>b3</name>
                                                                                    <index>[<expr>2</expr>]
                                                                                    </index>
                                                                                </name>
                                                                                != 0xBF
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">// First three
                                                                                    bytes are not BOM, so reset.
                                                                                </comment>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>stream</name>.
                                                                                                <name>reset</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>stream</name>.
                                                                                    <name>reset</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>reader</name>
                                                                =
                                                                <call>
                                                                    <name>createReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>stream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>encoding</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>isBigEndian</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <comment type="line">// If encoding is UTF-16, we still need to read the
                                                    first four bytes
                                                </comment>
                                                <comment type="line">// in order to discover the byte order.</comment>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>encoding</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"UTF-16"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <specifier>final</specifier>
                                                                            <name>int</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>b4</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>int</name>
                                                                                    <index>[<expr>4</expr>]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>count</name> =
                                                                        <init>
                                                                            <expr>0</expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <for>for (<init>;</init>
                                                                    <condition>
                                                                        <expr>
                                                                            <name>count</name>
                                                                            &lt; 4
                                                                        </expr>
                                                                        ;
                                                                    </condition>
                                                                    <incr>
                                                                        <expr>++
                                                                            <name>count</name>
                                                                        </expr>
                                                                    </incr>
                                                                    )
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>b4</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>count</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>stream</name>.
                                                                                        <name>read</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>b4</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>count</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                    == -1
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <break>break;</break>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </for>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>stream</name>.
                                                                                <name>reset</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>

                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>utf16Encoding</name> =
                                                                        <init>
                                                                            <expr>"UTF-16"</expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>count</name>
                                                                            &gt;= 2
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <specifier>final</specifier>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>b0</name> =
                                                                                    <init>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>b4</name>
                                                                                                <index>[<expr>0</expr>]
                                                                                                </index>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <decl_stmt>
                                                                                <decl>
                                                                                    <type>
                                                                                        <specifier>final</specifier>
                                                                                        <name>int</name>
                                                                                    </type>
                                                                                    <name>b1</name> =
                                                                                    <init>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>b4</name>
                                                                                                <index>[<expr>1</expr>]
                                                                                                </index>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </init>
                                                                                </decl>
                                                                                ;
                                                                            </decl_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>b0</name>
                                                                                        == 0xFE &amp;&amp; <name>b1
                                                                                    </name> == 0xFF
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <comment type="line">// UTF-16,
                                                                                            big-endian
                                                                                        </comment>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>utf16Encoding
                                                                                                </name>
                                                                                                = "UTF-16BE"
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>isBigEndian</name>
                                                                                                =
                                                                                                <name><name>
                                                                                                    Boolean</name>.
                                                                                                    <name>TRUE</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>b0</name>
                                                                                                == 0xFF &amp;&amp; <name>
                                                                                                b1
                                                                                            </name> == 0xFE
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <comment type="line">//
                                                                                                    UTF-16,
                                                                                                    little-endian
                                                                                                </comment>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            utf16Encoding
                                                                                                        </name>
                                                                                                        = "UTF-16LE"
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            isBigEndian
                                                                                                        </name>
                                                                                                        =
                                                                                                        <name><name>
                                                                                                            Boolean</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                FALSE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>count
                                                                                                        </name>
                                                                                                        == 4
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <decl_stmt>
                                                                                                            <decl>
                                                                                                                <type>
                                                                                                                    <specifier>
                                                                                                                        final
                                                                                                                    </specifier>
                                                                                                                    <name>
                                                                                                                        int
                                                                                                                    </name>
                                                                                                                </type>
                                                                                                                <name>
                                                                                                                    b2
                                                                                                                </name> =
                                                                                                                <init>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                b4
                                                                                                                            </name>
                                                                                                                            <index>
                                                                                                                                [<expr>
                                                                                                                                2</expr>]
                                                                                                                            </index>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </init>
                                                                                                            </decl>
                                                                                                            ;
                                                                                                        </decl_stmt>
                                                                                                        <decl_stmt>
                                                                                                            <decl>
                                                                                                                <type>
                                                                                                                    <specifier>
                                                                                                                        final
                                                                                                                    </specifier>
                                                                                                                    <name>
                                                                                                                        int
                                                                                                                    </name>
                                                                                                                </type>
                                                                                                                <name>
                                                                                                                    b3
                                                                                                                </name> =
                                                                                                                <init>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                b4
                                                                                                                            </name>
                                                                                                                            <index>
                                                                                                                                [<expr>
                                                                                                                                3</expr>]
                                                                                                                            </index>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </init>
                                                                                                            </decl>
                                                                                                            ;
                                                                                                        </decl_stmt>
                                                                                                        <if>if
                                                                                                            <condition>(
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        b0
                                                                                                                    </name>
                                                                                                                    ==
                                                                                                                    0x00
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b1
                                                                                                                </name> ==
                                                                                                                    0x3C
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b2
                                                                                                                </name> ==
                                                                                                                    0x00
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b3
                                                                                                                </name> ==
                                                                                                                    0x3F
                                                                                                                </expr>
                                                                                                                )
                                                                                                            </condition>
                                                                                                            <then>
                                                                                                                <block>{
                                                                                                                    <comment
                                                                                                                            type="line">
                                                                                                                        //
                                                                                                                        UTF-16,
                                                                                                                        big-endian,
                                                                                                                        no
                                                                                                                        BOM
                                                                                                                    </comment>
                                                                                                                    <expr_stmt>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                utf16Encoding
                                                                                                                            </name>
                                                                                                                            =
                                                                                                                            "UTF-16BE"
                                                                                                                        </expr>
                                                                                                                        ;
                                                                                                                    </expr_stmt>
                                                                                                                    <expr_stmt>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                isBigEndian
                                                                                                                            </name>
                                                                                                                            =
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    Boolean</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    TRUE
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                        ;
                                                                                                                    </expr_stmt>
                                                                                                                    }
                                                                                                                </block>
                                                                                                            </then>
                                                                                                        </if>
                                                                                                        <if>if
                                                                                                            <condition>(
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        b0
                                                                                                                    </name>
                                                                                                                    ==
                                                                                                                    0x3C
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b1
                                                                                                                </name> ==
                                                                                                                    0x00
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b2
                                                                                                                </name> ==
                                                                                                                    0x3F
                                                                                                                    &amp;&amp; <name>
                                                                                                                    b3
                                                                                                                </name> ==
                                                                                                                    0x00
                                                                                                                </expr>
                                                                                                                )
                                                                                                            </condition>
                                                                                                            <then>
                                                                                                                <block>{
                                                                                                                    <comment
                                                                                                                            type="line">
                                                                                                                        //
                                                                                                                        UTF-16,
                                                                                                                        little-endian,
                                                                                                                        no
                                                                                                                        BOM
                                                                                                                    </comment>
                                                                                                                    <expr_stmt>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                utf16Encoding
                                                                                                                            </name>
                                                                                                                            =
                                                                                                                            "UTF-16LE"
                                                                                                                        </expr>
                                                                                                                        ;
                                                                                                                    </expr_stmt>
                                                                                                                    <expr_stmt>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                isBigEndian
                                                                                                                            </name>
                                                                                                                            =
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    Boolean</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    FALSE
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                        ;
                                                                                                                    </expr_stmt>
                                                                                                                    }
                                                                                                                </block>
                                                                                                            </then>
                                                                                                        </if>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>reader</name>
                                                                        =
                                                                        <call>
                                                                            <name>createReader</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>stream</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>utf16Encoding</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>isBigEndian</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <comment type="line">// If encoding is UCS-4, we still need to
                                                            read the first four bytes
                                                        </comment>
                                                        <comment type="line">// in order to discover the byte order.
                                                        </comment>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>encoding</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"ISO-10646-UCS-4"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <specifier>final</specifier>
                                                                                    <name>int</name>
                                                                                    <index>[]</index>
                                                                                </type>
                                                                                <name>b4</name> =
                                                                                <init>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>int</name>
                                                                                            <index>[<expr>4</expr>]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>int</name>
                                                                                </type>
                                                                                <name>count</name> =
                                                                                <init>
                                                                                    <expr>0</expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <for>for (<init>;</init>
                                                                            <condition>
                                                                                <expr>
                                                                                    <name>count</name>
                                                                                    &lt; 4
                                                                                </expr>
                                                                                ;
                                                                            </condition>
                                                                            <incr>
                                                                                <expr>++
                                                                                    <name>count</name>
                                                                                </expr>
                                                                            </incr>
                                                                            )
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>b4</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>count</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>stream</name>.
                                                                                                <name>read</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>b4</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>count
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            == -1
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <break>break;</break>
                                                                                    </then>
                                                                                </if>
                                                                                }
                                                                            </block>
                                                                        </for>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>stream</name>.
                                                                                        <name>reset</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>

                                                                        <comment type="line">// Ignore unusual octet
                                                                            order for now.
                                                                        </comment>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>count</name>
                                                                                    == 4
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <comment type="line">// UCS-4, big
                                                                                        endian (1234)
                                                                                    </comment>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>b4</name>
                                                                                                    <index>[<expr>
                                                                                                        0</expr>]
                                                                                                    </index>
                                                                                                </name>
                                                                                                == 0x00 &amp;&amp;
                                                                                                <name>
                                                                                                    <name>b4</name>
                                                                                                    <index>[<expr>
                                                                                                        1</expr>]
                                                                                                    </index>
                                                                                                </name>
                                                                                                == 0x00 &amp;&amp;
                                                                                                <name>
                                                                                                    <name>b4</name>
                                                                                                    <index>[<expr>
                                                                                                        2</expr>]
                                                                                                    </index>
                                                                                                </name>
                                                                                                == 0x00 &amp;&amp;
                                                                                                <name>
                                                                                                    <name>b4</name>
                                                                                                    <index>[<expr>
                                                                                                        3</expr>]
                                                                                                    </index>
                                                                                                </name>
                                                                                                == 0x3C
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            isBigEndian
                                                                                                        </name>
                                                                                                        =
                                                                                                        <name><name>
                                                                                                            Boolean</name>
                                                                                                            .
                                                                                                            <name>TRUE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <comment type="line">// UCS-4,
                                                                                            little endian (1234)
                                                                                        </comment>
                                                                                        <else>else
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                0</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x3C &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                1</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x00 &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                2</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x00 &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                3</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x00
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    isBigEndian
                                                                                                                </name>
                                                                                                                =
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Boolean</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        FALSE
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                        </else>
                                                                                    </if>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>reader</name>
                                                                                =
                                                                                <call>
                                                                                    <name>createReader</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>stream</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>encoding</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>isBigEndian</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <comment type="line">// If encoding is UCS-2, we still
                                                                    need to read the first four bytes
                                                                </comment>
                                                                <comment type="line">// in order to discover the byte
                                                                    order.
                                                                </comment>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>encoding</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"ISO-10646-UCS-2"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <decl_stmt>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <specifier>final</specifier>
                                                                                            <name>int</name>
                                                                                            <index>[]</index>
                                                                                        </type>
                                                                                        <name>b4</name> =
                                                                                        <init>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>int</name>
                                                                                                    <index>[<expr>
                                                                                                        4</expr>]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </init>
                                                                                    </decl>
                                                                                    ;
                                                                                </decl_stmt>
                                                                                <decl_stmt>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <name>int</name>
                                                                                        </type>
                                                                                        <name>count</name> =
                                                                                        <init>
                                                                                            <expr>0</expr>
                                                                                        </init>
                                                                                    </decl>
                                                                                    ;
                                                                                </decl_stmt>
                                                                                <for>for (<init>;</init>
                                                                                    <condition>
                                                                                        <expr>
                                                                                            <name>count</name>
                                                                                            &lt; 4
                                                                                        </expr>
                                                                                        ;
                                                                                    </condition>
                                                                                    <incr>
                                                                                        <expr>++
                                                                                            <name>count</name>
                                                                                        </expr>
                                                                                    </incr>
                                                                                    )
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>b4</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                count
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                                =
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        stream</name>.
                                                                                                        <name>read
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        <name>b4</name>
                                                                                                        <index>[
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    count
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    == -1
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <break>break;</break>
                                                                                            </then>
                                                                                        </if>
                                                                                        }
                                                                                    </block>
                                                                                </for>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>stream</name>.
                                                                                                <name>reset</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>

                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>count</name>
                                                                                            == 4
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <comment type="line">//
                                                                                                UCS-2, big endian
                                                                                            </comment>
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                0</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x00 &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                1</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x3C &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                2</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x00 &amp;&amp;
                                                                                                        <name>
                                                                                                            <name>b4
                                                                                                            </name>
                                                                                                            <index>
                                                                                                                [<expr>
                                                                                                                3</expr>]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        == 0x3F
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    isBigEndian
                                                                                                                </name>
                                                                                                                =
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Boolean</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        TRUE
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                                <comment type="line">//
                                                                                                    UCS-2, little endian
                                                                                                </comment>
                                                                                                <else>else
                                                                                                    <if>if
                                                                                                        <condition>(
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        b4
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        [<expr>
                                                                                                                        0</expr>]
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                == 0x3C
                                                                                                                &amp;&amp;
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        b4
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        [<expr>
                                                                                                                        1</expr>]
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                == 0x00
                                                                                                                &amp;&amp;
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        b4
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        [<expr>
                                                                                                                        2</expr>]
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                == 0x3F
                                                                                                                &amp;&amp;
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        b4
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        [<expr>
                                                                                                                        3</expr>]
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                == 0x00
                                                                                                            </expr>
                                                                                                            )
                                                                                                        </condition>
                                                                                                        <then>
                                                                                                            <block>{
                                                                                                                <expr_stmt>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            isBigEndian
                                                                                                                        </name>
                                                                                                                        =
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                Boolean</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                FALSE
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    ;
                                                                                                                </expr_stmt>
                                                                                                                }
                                                                                                            </block>
                                                                                                        </then>
                                                                                                    </if>
                                                                                                </else>
                                                                                            </if>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>reader</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name>createReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>stream
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>encoding
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            isBigEndian
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>reader</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name>createReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>stream
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>encoding
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            isBigEndian
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>

                                <comment type="line">// read one character at a time so we don't jump too far</comment>
                                <comment type="line">// ahead, converting characters from the byte stream in</comment>
                                <comment type="line">// the wrong encoding</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_ENCODINGS</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"$$$ no longer wrapping reader in OneCharReader"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">//reader = new OneCharReader(reader);</comment>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// We've seen a new Reader.</comment>
                    <comment type="line">// Push it on the stack so we can close it later.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fReaderStack</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>reader</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// push entity on stack</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityStack</name>.
                                                <name>push</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// create entity</comment>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentEntity</name>
                            = new
                            <call>
                                <name>ScannedEntity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>XMLResourceIdentifierImpl</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>publicId</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>literalSystemId</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>baseSystemId</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>expandedSystemId</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>reader</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>encoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>literal</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isExternal</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fCurrentEntity</name>.
                                    <name>setEncodingExternallySpecified</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>encodingExternallySpecified</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>setCurrentEntity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentEntity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResourceIdentifier</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>publicId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>literalSystemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>baseSystemId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>expandedSystemId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>encoding</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">//setupCurrentEntity(String, XMLInputSource, boolean, boolean): String</comment>

            <comment type="line">// set version of scanner to use</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setScannerVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>version</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XML_VERSION_1_0</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fXML10EntityScanner</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fXML10EntityScanner</name>
                                                    = new
                                                    <call>
                                                        <name>XMLEntityScanner</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXML10EntityScanner</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityScanner</name>
                                        =
                                        <name>fXML10EntityScanner</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityScanner</name>.
                                                <name>setCurrentEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fXML11EntityScanner</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fXML11EntityScanner</name>
                                                    = new
                                                    <call>
                                                        <name>XML11EntityScanner</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXML11EntityScanner</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityScanner</name>
                                        =
                                        <name>fXML11EntityScanner</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityScanner</name>.
                                                <name>setCurrentEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// setScannerVersion(short)</comment>

            <comment type="javadoc">/** Returns the entity scanner. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLEntityScanner</name>
                </type>
                <name>getEntityScanner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityScanner</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// default to 1.0</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fXML10EntityScanner</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fXML10EntityScanner</name>
                                                    = new
                                                    <call>
                                                        <name>XMLEntityScanner</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXML10EntityScanner</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityScanner</name>
                                        =
                                        <name>fXML10EntityScanner</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fEntityScanner</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEntityScanner():XMLEntityScanner</comment>

            <comment type="line">// A stack containing all the open readers</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Stack</name>
                    </type>
                    <name>fReaderStack</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Close all opened InputStreams and Readers opened by this parser.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>closeReaders</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// close all readers</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>fReaderStack</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>((<name>Reader</name>)
                                            <call>
                                                <name><name>fReaderStack</name>.
                                                    <name>pop</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ).
                                            <call>
                                                <name>close</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>IOException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <comment type="line">// ignore</comment>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// XMLComponent methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Resets the component. The component can query the component manager
                * about any features and properties that affect the operation of the
                * component.
                *
                * @param componentManager The component manager.
                *
                * @throws SAXException Thrown by component on initialization error.
                * For example, if a feature or property is
                * required for the operation of the component, the
                * component manager may throw a
                * SAXNotRecognizedException or a
                * SAXNotSupportedException.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>parser_settings</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>parser_settings</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>PARSER_SETTINGS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>parser_settings</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>parser_settings</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// parser settings have not been changed</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// sax features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidation</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>VALIDATION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidation</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fExternalGeneralEntities</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>EXTERNAL_GENERAL_ENTITIES</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fExternalGeneralEntities</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fExternalParameterEntities</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>EXTERNAL_PARAMETER_ENTITIES</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fExternalParameterEntities</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// xerces features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fAllowJavaEncodings</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ALLOW_JAVA_ENCODINGS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAllowJavaEncodings</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fWarnDuplicateEntityDef</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>WARN_ON_DUPLICATE_ENTITYDEF</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fWarnDuplicateEntityDef</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fStrictURI</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>STANDARD_URI_CONFORMANT</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fStrictURI</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// xerces properties</comment>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            = (<name>SymbolTable</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SYMBOL_TABLE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            = (<name>XMLErrorReporter</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ERROR_REPORTER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fEntityResolver</name>
                                    = (<name>XMLEntityResolver</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ENTITY_RESOLVER</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fEntityResolver</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidationManager</name>
                                    = (<name>ValidationManager</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>VALIDATION_MANAGER</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidationManager</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fSecurityManager</name>
                                    = (<name>SecurityManager</name>)
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>SECURITY_MANAGER</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSecurityManager</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// reset general state</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>reset</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="line">// reset general state. Should not be called other than by</comment>
            <comment type="line">// a class acting as a component manager but not</comment>
            <comment type="line">// implementing that interface for whatever reason.</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEntityExpansionLimit</name>
                            = (<name>fSecurityManager</name> != <name>null</name>)?
                            <call>
                                <name><name>fSecurityManager</name>.
                                    <name>getEntityExpansionLimit</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :0
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// initialize state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fStandalone</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntities</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityStack</name>.
                                    <name>removeAllElements</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEntityExpansionCount</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fCurrentEntity</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// reset scanner</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fXML10EntityScanner</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXML10EntityScanner</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fXML11EntityScanner</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fXML11EntityScanner</name>.
                                                <name>reset</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSymbolTable</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fErrorReporter</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// DEBUG</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ENTITIES</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"text"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"Hello, World."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"empty-element"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo/&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"balanced-element"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo&gt;&lt;/foo&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"balanced-element-with-text"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo&gt;Hello, World&lt;/foo&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"balanced-element-with-entity"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo&gt;&amp;text;&lt;/foo&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"unbalanced-entity"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"recursive-entity"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;foo&gt;&amp;recursive-entity2;&lt;/foo&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"recursive-entity2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;bar&gt;&amp;recursive-entity3;&lt;/bar&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>addInternalEntity</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"recursive-entity3"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"&lt;baz&gt;&amp;recursive-entity;&lt;/baz&gt;"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>addExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"external-text"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"external-text.ent"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"test/external-text.xml"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>addExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"external-balanced-element"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"external-balanced-element.ent"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"test/external-balanced-element.xml"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>addExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"one"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ent/one.ent"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"test/external-entity.xml"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>addExternalEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"two"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"ent/two.ent"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>"test/ent/one.xml"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>IOException</name>
                                                </type>
                                                <name>ex</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// should never happen</comment>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// copy declared entities</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fDeclaredEntities</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name><name>java</name>.<name>util</name>.
                                                <name>Enumeration</name>
                                            </name>
                                        </type>
                                        <name>keys</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fDeclaredEntities</name>.
                                                        <name>keys</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>keys</name>.
                                                    <name>hasMoreElements</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Object</name>
                                                </type>
                                                <name>key</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>keys</name>.
                                                                <name>nextElement</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Object</name>
                                                </type>
                                                <name>value</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fDeclaredEntities</name>.
                                                                <name>get</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>key</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fEntities</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>key</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>fEntityHandler</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="javadoc">/**
                * Returns a list of feature identifiers that are recognized by
                * this component. This method may return null if no features
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedFeatures</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedFeatures():String[]</comment>

            <comment type="javadoc">/**
                * Sets the state of a feature. This method is called by the component
                * manager any time after reset when a feature changes state.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore features
                * that do not affect the operation of the component.
                *
                * @param featureId The feature identifier.
                * @param state The state of the feature.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// xerces features</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>featureId</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XERCES_FEATURE_PREFIX</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>suffixLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>featureId</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                -
                                                <call>
                                                    <name><name>Constants</name>.<name>XERCES_FEATURE_PREFIX</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>ALLOW_JAVA_ENCODINGS_FEATURE</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>featureId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>ALLOW_JAVA_ENCODINGS_FEATURE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fAllowJavaEncodings</name>
                                                    =
                                                    <name>state</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// setFeature(String,boolean)</comment>

            <comment type="javadoc">/**
                * Returns a list of property identifiers that are recognized by
                * this component. This method may return null if no properties
                * are recognized by this component.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getRecognizedProperties</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )(
                            <call>
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getRecognizedProperties():String[]</comment>

            <comment type="javadoc">/**
                * Sets the value of a property. This method is called by the component
                * manager any time after reset when a property changes value.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore properties
                * that do not affect the operation of the component.
                *
                * @param propertyId The property identifier.
                * @param value The value of the property.
                *
                * @throws SAXNotRecognizedException The component should not throw
                * this exception.
                * @throws SAXNotSupportedException The component should not throw
                * this exception.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Xerces properties</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XERCES_PROPERTY_PREFIX</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>suffixLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>propertyId</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                -
                                                <call>
                                                    <name><name>Constants</name>.<name>XERCES_PROPERTY_PREFIX</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>SYMBOL_TABLE_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>SYMBOL_TABLE_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                    = (<name>SymbolTable</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>ERROR_REPORTER_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>ERROR_REPORTER_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fErrorReporter</name>
                                                    = (<name>XMLErrorReporter</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>ENTITY_RESOLVER_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>ENTITY_RESOLVER_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fEntityResolver</name>
                                                    = (<name>XMLEntityResolver</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>BUFFER_SIZE_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>BUFFER_SIZE_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Integer</name>
                                                    </type>
                                                    <name>bufferSize</name> =
                                                    <init>
                                                        <expr>(<name>Integer</name>)
                                                            <name>value</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>bufferSize</name>
                                                        != <name>null</name> &amp;&amp;
                                                        <call>
                                                            <name><name>bufferSize</name>.
                                                                <name>intValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        &gt;
                                                        <name>DEFAULT_XMLDECL_BUFFER_SIZE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>fBufferSize</name>
                                                                =
                                                                <call>
                                                                    <name><name>bufferSize</name>.
                                                                        <name>intValue</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityScanner</name>.
                                                                        <name>setBufferSize</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fBufferSize</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fBufferPool</name>.
                                                                        <name>setExternalBufferSize</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fBufferSize</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>SECURITY_MANAGER_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>SECURITY_MANAGER_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fSecurityManager</name>
                                                    = (<name>SecurityManager</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>fEntityExpansionLimit</name>
                                                    = (<name>fSecurityManager</name> != <name>null</name>)?
                                                    <call>
                                                        <name><name>fSecurityManager</name>.
                                                            <name>getEntityExpansionLimit</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    :0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="javadoc">/**
                * Returns the default state for a feature, or null if this
                * component does not want to report a default value for this
                * feature.
                *
                * @param featureId The feature identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getFeatureDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_FEATURES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_FEATURES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>FEATURE_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getFeatureDefault(String):Boolean</comment>

            <comment type="javadoc">/**
                * Returns the default state for a property, or null if this
                * component does not want to report a default value for this
                * property.
                *
                * @param propertyId The property identifier.
                *
                * @since Xerces 2.2.0
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getPropertyDefault</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>RECOGNIZED_PROPERTIES</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>RECOGNIZED_PROPERTIES</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>propertyId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>PROPERTY_DEFAULTS</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPropertyDefault(String):Object</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public static methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// current value of the "user.dir" property</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>gUserDir</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// cached URI object for the current value of the escaped "user.dir" property stored as
                a URI
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>URI</name>
                    </type>
                    <name>gUserDirURI</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// which ASCII characters need to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>boolean</name>
                    </type>
                    <name>
                        <name>gNeedEscaping</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the first hex character if a character needs to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                    </type>
                    <name>
                        <name>gAfterEscaping1</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the second hex character if a character needs to be escaped</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                    </type>
                    <name>
                        <name>gAfterEscaping2</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[<expr>128</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>gHexChs</name> =
                    <init>
                        <expr>
                            <block>{<expr>'0'</expr>, <expr>'1'</expr>, <expr>'2'</expr>, <expr>'3'</expr>, <expr>
                                '4'</expr>, <expr>'5'</expr>, <expr>'6'</expr>, <expr>'7'</expr>,
                                <expr>'8'</expr>, <expr>'9'</expr>, <expr>'A'</expr>, <expr>'B'</expr>, <expr>'C'</expr>, <expr>
                                    'D'</expr>, <expr>'E'</expr>, <expr>'F'</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// initialize the above 3 arrays</comment>
            static
            <block>{
                <for>for (
                    <init>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </init>
                    <condition>
                        <expr>
                            <name>i</name>
                            &lt;= 0x1f
                        </expr>
                        ;
                    </condition>
                    <incr>
                        <expr><name>i</name>++
                        </expr>
                    </incr>
                    )
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gNeedEscaping</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = true
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping1</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                            &gt;&gt; 4
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping2</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                            &amp; 0xf
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                </for>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>gNeedEscaping</name>
                            <index>[<expr>0x7f</expr>]
                            </index>
                        </name>
                        = true
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>gAfterEscaping1</name>
                            <index>[<expr>0x7f</expr>]
                            </index>
                        </name>
                        = '7'
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>gAfterEscaping2</name>
                            <index>[<expr>0x7f</expr>]
                            </index>
                        </name>
                        = 'F'
                    </expr>
                    ;
                </expr_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>char</name>
                            <index>[]</index>
                        </type>
                        <name>escChs</name> =
                        <init>
                            <expr>
                                <block>{<expr>' '</expr>, <expr>'&lt;'</expr>, <expr>'&gt;'</expr>, <expr>
                                    '#'</expr>, <expr>'%'</expr>, <expr>'"'</expr>, <expr>'{'</expr>, <expr>'}'</expr>,
                                    <expr>'|'</expr>, <expr>'\\'</expr>, <expr>'^'</expr>, <expr>'~'</expr>, <expr>
                                        '['</expr>, <expr>']'</expr>, <expr>'`'</expr>}
                                </block>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>len</name> =
                        <init>
                            <expr>
                                <name><name>escChs</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>char</name>
                        </type>
                        <name>ch</name>
                    </decl>
                    ;
                </decl_stmt>
                <for>for (
                    <init>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </init>
                    <condition>
                        <expr>
                            <name>i</name>
                            &lt;
                            <name>len</name>
                        </expr>
                        ;
                    </condition>
                    <incr>
                        <expr><name>i</name>++
                        </expr>
                    </incr>
                    )
                    <block>{
                        <expr_stmt>
                            <expr>
                                <name>ch</name>
                                =
                                <name>
                                    <name>escChs</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gNeedEscaping</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = true
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping1</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                            &gt;&gt; 4
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>gAfterEscaping2</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                =
                                <name>
                                    <name>gHexChs</name>
                                    <index>[
                                        <expr>
                                            <name>ch</name>
                                            &amp; 0xf
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            ;
                        </expr_stmt>
                        }
                    </block>
                </for>
                }
            </block>
            <comment type="line">// To escape the "user.dir" system property, by using %HH to represent</comment>
            <comment type="line">// special ASCII characters: 0x00~0x1F, 0x7F, ' ', '&lt;', '&gt;', '#', '%'</comment>
            <comment type="line">// and '"'. It's a static method, so needs to be synchronized.</comment>
            <comment type="line">// this method looks heavy, but since the system property isn't expected</comment>
            <comment type="line">// to change often, so in most cases, we only need to return the URI</comment>
            <comment type="line">// that was escaped before.</comment>
            <comment type="line">// According to the URI spec, non-ASCII characters (whose value &gt;= 128)</comment>
            <comment type="line">// need to be escaped too.</comment>
            <comment type="line">// REVISIT: don't know how to escape non-ASCII characters, especially</comment>
            <comment type="line">// which encoding to use. Leave them for now.</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <specifier>synchronized</specifier>
                    <name>URI</name>
                </type>
                <name>getUserDir</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name><name>URI</name>.
                                <name>MalformedURIException</name>
                            </name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// get the user.dir property</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>userDir</name> =
                            <init>
                                <expr>""</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>userDir</name>
                                    =
                                    <call>
                                        <name><name>System</name>.
                                            <name>getProperty</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"user.dir"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>SecurityException</name>
                                    </type>
                                    <name>se</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// return empty string if property value is empty string.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>userDir</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"file"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>""</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// compute the new escaped value if the new property value doesn't</comment>
                    <comment type="line">// match the previous one</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>gUserDirURI</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>userDir</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>gUserDir</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>gUserDirURI</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// record the new value as the global property value</comment>
                    <expr_stmt>
                        <expr>
                            <name>gUserDir</name>
                            =
                            <name>userDir</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>separator</name> =
                            <init>
                                <expr>
                                    <name><name>java</name>.<name>io</name>.<name>File</name>.
                                        <name>separatorChar</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>userDir</name>
                            =
                            <call>
                                <name><name>userDir</name>.
                                    <name>replace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>separator</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'/'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>userDir</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                            ,
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buffer</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr><name>len</name>*3
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// change C:/blah to /C:/blah</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                &gt;= 2 &amp;&amp;
                                <call>
                                    <name><name>userDir</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>1</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == ':'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>ch</name>
                                        =
                                        <call>
                                            <name><name>Character</name>.
                                                <name>toUpperCase</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>userDir</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ch</name>
                                            &gt;= 'A' &amp;&amp; <name>ch</name> &lt;= 'Z'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'/'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// for each character in the path</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (<init>;</init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    =
                                    <call>
                                        <name><name>userDir</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// if it's not an ASCII character, break here, and use UTF-8 encoding
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &gt;= 128
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <break>break;</break>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>gNeedEscaping</name>
                                            <index>[
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'%'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>gAfterEscaping1</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>gAfterEscaping2</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// record the fact that it's escaped</comment>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>(<name>char</name>)
                                                                <name>ch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// we saw some non-ascii character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// get UTF-8 bytes for the remaining sub-string</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </type>
                                        <name>bytes</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>byte</name>
                                        </type>
                                        <name>b</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <try>try
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>bytes</name>
                                                =
                                                <call>
                                                    <name><name>userDir</name>.
                                                        <name>substring</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>getBytes</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"UTF-8"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name><name>java</name>.<name>io</name>.
                                                        <name>UnsupportedEncodingException</name>
                                                    </name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <comment type="line">// should never happen</comment>
                                            <return>return
                                                <expr>new
                                                    <call>
                                                        <name>URI</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"file"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>""</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>userDir</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <expr_stmt>
                                    <expr>
                                        <name>len</name>
                                        =
                                        <name><name>bytes</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// for each byte</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>b</name>
                                                =
                                                <name>
                                                    <name>bytes</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// for non-ascii character: make it positive, then escape
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>b</name>
                                                    &lt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>ch</name>
                                                            = <name>b</name> + 256
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>'%'</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gHexChs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        &gt;&gt; 4
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>gHexChs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        &amp; 0xf
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>gNeedEscaping</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>b</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>'%'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>gAfterEscaping1</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>b</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>gAfterEscaping2</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>b</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buffer</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>char</name>)
                                                                                    <name>b</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// change blah/blah to blah/blah/</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>userDir</name>.
                                        <name>endsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"/"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>buffer</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'/'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>gUserDirURI</name>
                            = new
                            <call>
                                <name>URI</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"file"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>""</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>buffer</name>.
                                                    <name>toString</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>gUserDirURI</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Absolutizes a URI using the current value
                * of the "user.dir" property as the base URI. If
                * the URI is already absolute, this is a no-op.
                *
                * @param uri the URI to absolutize
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>absolutizeAgainstUserDir</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>uri</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name><name>URI</name>.
                                <name>MalformedURIException</name>
                            </name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>uri</name>.
                                    <name>absolutize</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getUserDir</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Expands a system id and returns the system id as a URI, if
                * it can be expanded. A return value of null means that the
                * identifier is already expanded. An exception thrown
                * indicates a failure to expand the id.
                *
                * @param systemId The systemId to be expanded.
                *
                * @return Returns the URI string representing the expanded system
                * identifier. A null value indicates that the given
                * system identifier is already expanded.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>expandSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>strict</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name><name>URI</name>.
                                <name>MalformedURIException</name>
                            </name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check if there is a system id before</comment>
                    <comment type="line">// trying to expand it.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>systemId</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// system id has to be a valid URI</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>strict</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>expandSystemIdStrictOn</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>baseSystemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Assume the URIs are well-formed. If it turns out they're not, try fixing
                        them up.
                    </comment>
                    <try>try
                        <block>{
                            <return>return
                                <expr>
                                    <call>
                                        <name>expandSystemIdStrictOff</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>baseSystemId</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name><name>URI</name>.
                                            <name>MalformedURIException</name>
                                        </name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// continue on...</comment>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// check for bad parameters id</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>systemId</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>systemId</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// normalize id</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>id</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>fixURI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// normalize base</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>base</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>uri</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>baseSystemId</name>
                                        == <name>null</name> ||
                                        <call>
                                            <name><name>baseSystemId</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == 0 ||
                                        <call>
                                            <name><name>baseSystemId</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>systemId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>base</name>
                                                =
                                                <call>
                                                    <name>getUserDir</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <try>try
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>base</name>
                                                        = new
                                                        <call>
                                                            <name>URI</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>fixURI</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>baseSystemId</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        .
                                                                        <call>
                                                                            <name>trim</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                            <catch>catch (
                                                <param>
                                                    <decl>
                                                        <type>
                                                            <name><name>URI</name>.
                                                                <name>MalformedURIException</name>
                                                            </name>
                                                        </type>
                                                        <name>e</name>
                                                    </decl>
                                                </param>
                                                )
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>baseSystemId</name>.
                                                                        <name>indexOf</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>':'</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                != -1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// for xml schemas we might have
                                                                    baseURI with
                                                                </comment>
                                                                <comment type="line">// a specified drive</comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>base</name>
                                                                        = new
                                                                        <call>
                                                                            <name>URI</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"file"</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>""</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>fixURI</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            baseSystemId
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        .
                                                                                        <call>
                                                                                            <name>trim</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>base</name>
                                                                        = new
                                                                        <call>
                                                                            <name>URI</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>getUserDir</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>fixURI</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            baseSystemId
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </catch>
                                        </try>
                                        }
                                    </block>
                                </else>
                            </if>
                            <comment type="line">// expand id</comment>
                            <expr_stmt>
                                <expr>
                                    <name>uri</name>
                                    = new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>base</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>id</name>.
                                                            <name>trim</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// let it go through</comment>

                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>
                                <name>uri</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>systemId</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>uri</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// expandSystemId(String,String,boolean):String</comment>

            <comment type="javadoc">/**
                * Helper method for expandSystemId(String,String,boolean):String
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>expandSystemIdStrictOn</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name><name>URI</name>.
                                <name>MalformedURIException</name>
                            </name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>systemURI</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// If it's already an absolute one, return it</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>systemURI</name>.
                                        <name>isAbsoluteURI</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>systemId</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If there isn't a base URI, use the working directory</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>baseURI</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>baseSystemId</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>baseSystemId</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseURI</name>
                                        =
                                        <call>
                                            <name>getUserDir</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseURI</name>
                                        = new
                                        <call>
                                            <name>URI</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>baseSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>baseURI</name>.
                                                    <name>isAbsoluteURI</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// assume "base" is also a relative uri</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>baseURI</name>.
                                                            <name>absolutize</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getUserDir</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// absolutize the system identifier using the base URI</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>systemURI</name>.
                                    <name>absolutize</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baseURI</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return the string rep of the new uri (an absolute one)</comment>
                    <return>return
                        <expr>
                            <call>
                                <name><name>systemURI</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    <comment type="line">// if any exception is thrown, it'll get thrown to the caller.</comment>

                    }
                </block>
            </function>
            <comment type="line">// expandSystemIdStrictOn(String,String):String</comment>

            <comment type="javadoc">/**
                * Helper method for expandSystemId(String,String,boolean):String
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>expandSystemIdStrictOff</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name><name>URI</name>.
                                <name>MalformedURIException</name>
                            </name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>systemURI</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>URI</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>true</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// If it's already an absolute one, return it</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>systemURI</name>.
                                        <name>isAbsoluteURI</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>systemURI</name>.
                                                    <name>getScheme</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>length</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>systemId</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="javadoc">/**
                                    * If the scheme's length is only one character,
                                    * it's likely that this was intended as a file
                                    * path. Fixing this up in expandSystemId to
                                    * maintain backwards compatibility.
                                    */
                                </comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name><name>URI</name>.
                                                <name>MalformedURIException</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If there isn't a base URI, use the working directory</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>URI</name>
                            </type>
                            <name>baseURI</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>baseSystemId</name>
                                == <name>null</name> ||
                                <call>
                                    <name><name>baseSystemId</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseURI</name>
                                        =
                                        <call>
                                            <name>getUserDir</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>baseURI</name>
                                        = new
                                        <call>
                                            <name>URI</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>baseSystemId</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>baseURI</name>.
                                                    <name>isAbsoluteURI</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// assume "base" is also a relative uri</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>baseURI</name>.
                                                            <name>absolutize</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getUserDir</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// absolutize the system identifier using the base URI</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>systemURI</name>.
                                    <name>absolutize</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>baseURI</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return the string rep of the new uri (an absolute one)</comment>
                    <return>return
                        <expr>
                            <call>
                                <name><name>systemURI</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    <comment type="line">// if any exception is thrown, it'll get thrown to the caller.</comment>

                    }
                </block>
            </function>
            <comment type="line">// expandSystemIdStrictOff(String,String):String</comment>

            <comment type="javadoc">/**
                * Attempt to set whether redirects will be followed for an &lt;code&gt;HttpURLConnection&lt;/code&gt;.
                * This may fail on earlier JDKs which do not support setting this preference.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>setInstanceFollowRedirects</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>HttpURLConnection</name>
                            </type>
                            <name>urlCon</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>followRedirects</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Method</name>
                                    </type>
                                    <name>method</name> =
                                    <init>
                                        <expr>
                                            <name><name>HttpURLConnection</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class.
                                            <call>
                                                <name>getMethod</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"setInstanceFollowRedirects"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Class</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name><name>Boolean</name>.
                                                                        <name>TYPE</name>
                                                                    </name>
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>method</name>.
                                            <name>invoke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>urlCon</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>followRedirects</name>
                                                            ?
                                                            <name><name>Boolean</name>.
                                                                <name>TRUE</name>
                                                            </name>
                                                            :
                                                            <name><name>Boolean</name>.
                                                                <name>FALSE</name>
                                                            </name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <comment type="line">// setInstanceFollowRedirects doesn't exist.</comment>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>exc</name>
                                </decl>
                            </param>
                            )
                            <block>{}</block>
                        </catch>
                    </try>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Ends an entity.
                *
                * @throws XNIException Thrown by entity handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>endEntity</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// call handler</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(endEntity: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>print</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fEntityHandler</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityHandler</name>.
                                                <name>endEntity</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>name</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Close the reader for the current entity once we're</comment>
                    <comment type="line">// done with it, and remove it from our stack. If parsing</comment>
                    <comment type="line">// is halted at some point, the rest of the readers on</comment>
                    <comment type="line">// the stack will be closed during cleanup.</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fCurrentEntity</name>.<name>reader</name>.
                                            <name>close</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>IOException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// ignore</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    <comment type="line">// REVISIT: We should never encounter underflow if the calls</comment>
                    <comment type="line">// to startEntity and endEntity are balanced, but guard</comment>
                    <comment type="line">// against the EmptyStackException for now. -- mrglavas</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fReaderStack</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fReaderStack</name>.
                                                <name>pop</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//Release the character buffer back to the pool for reuse</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fBufferPool</name>.
                                    <name>returnToPool</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>fBuffer</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Pop entity stack.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentEntity</name>
                            =
                            <call>
                                <name><name>fEntityStack</name>.
                                    <name>size</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            &gt; 0
                            ? (<name>ScannedEntity</name>)
                            <call>
                                <name><name>fEntityStack</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>setCurrentEntity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fCurrentEntity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")endEntity: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>print</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// endEntity()</comment>

            <comment type="javadoc">/**
                * Returns the IANA encoding name that is auto-detected from
                * the bytes specified, with the endian-ness of that encoding where appropriate.
                *
                * @param b4 The first four bytes of the input.
                * @param count The number of bytes actually read.
                * @return a 2-element array: the first element, an IANA-encoding string,
                * the second element a Boolean which is true iff the document is big endian, false
                * if it's little-endian, and null if the distinction isn't relevant.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>getEncodingName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>byte</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>b4</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &lt; 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-8"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// UTF-16, with BOM</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b0</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>b4</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    &amp; 0xFF
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b1</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>b4</name>
                                        <index>[<expr>1</expr>]
                                        </index>
                                    </name>
                                    &amp; 0xFF
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0xFE &amp;&amp; <name>b1</name> == 0xFF
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UTF-16, big-endian</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-16BE"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>TRUE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0xFF &amp;&amp; <name>b1</name> == 0xFE
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UTF-16, little-endian</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-16LE"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>FALSE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// default to UTF-8 if we don't have enough bytes to make a</comment>
                    <comment type="line">// good determination of the encoding</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &lt; 3
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-8"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// UTF-8 with a BOM</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b2</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>b4</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                    &amp; 0xFF
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0xEF &amp;&amp; <name>b1</name> == 0xBB &amp;&amp; <name>b2</name> == 0xBF
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-8"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// default to UTF-8 if we don't have enough bytes to make a</comment>
                    <comment type="line">// good determination of the encoding</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                &lt; 4
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-8"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// other encodings</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>b3</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>b4</name>
                                        <index>[<expr>3</expr>]
                                        </index>
                                    </name>
                                    &amp; 0xFF
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x00 &amp;&amp; <name>b1</name> == 0x00 &amp;&amp; <name>b2</name> == 0x00 &amp;&amp; <name>
                                b3
                            </name> == 0x3C
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UCS-4, big endian (1234)</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"ISO-10646-UCS-4"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>TRUE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x3C &amp;&amp; <name>b1</name> == 0x00 &amp;&amp; <name>b2</name> == 0x00 &amp;&amp; <name>
                                b3
                            </name> == 0x00
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UCS-4, little endian (4321)</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"ISO-10646-UCS-4"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>FALSE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x00 &amp;&amp; <name>b1</name> == 0x00 &amp;&amp; <name>b2</name> == 0x3C &amp;&amp; <name>
                                b3
                            </name> == 0x00
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UCS-4, unusual octet order (2143)</comment>
                                <comment type="line">// REVISIT: What should this be?</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"ISO-10646-UCS-4"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x00 &amp;&amp; <name>b1</name> == 0x3C &amp;&amp; <name>b2</name> == 0x00 &amp;&amp; <name>
                                b3
                            </name> == 0x00
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UCS-4, unusual octect order (3412)</comment>
                                <comment type="line">// REVISIT: What should this be?</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"ISO-10646-UCS-4"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x00 &amp;&amp; <name>b1</name> == 0x3C &amp;&amp; <name>b2</name> == 0x00 &amp;&amp; <name>
                                b3
                            </name> == 0x3F
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UTF-16, big-endian, no BOM</comment>
                                <comment type="line">// (or could turn out to be UCS-2...</comment>
                                <comment type="line">// REVISIT: What should this be?</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-16BE"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>TRUE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x3C &amp;&amp; <name>b1</name> == 0x00 &amp;&amp; <name>b2</name> == 0x3F &amp;&amp; <name>
                                b3
                            </name> == 0x00
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// UTF-16, little-endian, no BOM</comment>
                                <comment type="line">// (or could turn out to be UCS-2...</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"UTF-16LE"</expr>,
                                            <expr>
                                                <name><name>Boolean</name>.
                                                    <name>FALSE</name>
                                                </name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b0</name>
                                == 0x4C &amp;&amp; <name>b1</name> == 0x6F &amp;&amp; <name>b2</name> == 0xA7 &amp;&amp; <name>
                                b3
                            </name> == 0x94
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// EBCDIC</comment>
                                <comment type="line">// a la xerces1, return CP037 instead of EBCDIC here</comment>
                                <return>return
                                    <expr>new
                                        <name>
                                            <name>Object</name>
                                            <index>[]</index>
                                        </name>
                                        <block>{<expr>"CP037"</expr>,
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            }
                                        </block>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// default encoding</comment>
                    <return>return
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[]</index>
                            </name>
                            <block>{<expr>"UTF-8"</expr>,
                                <expr>
                                    <name>null</name>
                                </expr>
                                }
                            </block>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getEncodingName(byte[],int):Object[]</comment>

            <comment type="javadoc">/**
                * Creates a reader capable of reading the given input stream in
                * the specified encoding.
                *
                * @param inputStream The input stream.
                * @param encoding The encoding name that the input stream is
                * encoded using. If the user has specified that
                * Java encoding names are allowed, then the
                * encoding name may be a Java encoding name;
                * otherwise, it is an ianaEncoding name.
                * @param isBigEndian For encodings (like uCS-4), whose names cannot
                * specify a byte order, this tells whether the order is bigEndian. null menas
                * unknown or not relevant.
                *
                * @return Returns a reader.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Reader</name>
                </type>
                <name>createReader</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>inputStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>isBigEndian</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// normalize encoding name</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>encoding</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>encoding</name>
                                        = "UTF-8"
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// try to use an optimized reader</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ENCODING</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>encoding</name>.
                                            <name>toUpperCase</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Locale</name>.
                                                        <name>ENGLISH</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ENCODING</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"UTF-8"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_ENCODINGS</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"$$$ creating UTF8Reader"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>UTF8Reader</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>inputStream</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>fBufferSize</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fErrorReporter</name>.
                                                                <name>getMessageFormatter</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XMLMessageFormatter</name>.
                                                                            <name>XML_DOMAIN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>fErrorReporter</name>.
                                                                <name>getLocale</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ENCODING</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"ISO-10646-UCS-4"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>isBigEndian</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>isBE</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>isBigEndian</name>.
                                                                    <name>booleanValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>isBE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>new
                                                                <call>
                                                                    <name>UCSReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>inputStream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>UCSReader</name>.
                                                                                    <name>UCS4BE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <return>return
                                                            <expr>new
                                                                <call>
                                                                    <name>UCSReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>inputStream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>UCSReader</name>.
                                                                                    <name>UCS4LE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"EncodingByteOrderUnsupported"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_FATAL_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>ENCODING</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"ISO-10646-UCS-2"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>isBigEndian</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// sould never happen with this encoding...</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>boolean</name>
                                                    </type>
                                                    <name>isBE</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>isBigEndian</name>.
                                                                    <name>booleanValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>isBE</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>new
                                                                <call>
                                                                    <name>UCSReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>inputStream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>UCSReader</name>.
                                                                                    <name>UCS2BE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <return>return
                                                            <expr>new
                                                                <call>
                                                                    <name>UCSReader</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>inputStream</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>UCSReader</name>.
                                                                                    <name>UCS2LE</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"EncodingByteOrderUnsupported"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_FATAL_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check for valid name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>validIANA</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>XMLChar</name>.
                                            <name>isValidIANAEncoding</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>validJava</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>XMLChar</name>.
                                            <name>isValidJavaEncoding</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!<name>validIANA</name> || (<name>fAllowJavaEncodings</name> &amp;&amp; !<name>
                                validJava</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLMessageFormatter</name>.
                                                            <name>XML_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"EncodingDeclInvalid"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>encoding</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLErrorReporter</name>.
                                                            <name>SEVERITY_FATAL_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// NOTE: AndyH suggested that, on failure, we use ISO Latin 1
                                </comment>
                                <comment type="line">// because every byte is a valid ISO Latin 1 character.</comment>
                                <comment type="line">// It may not translate correctly but if we failed on</comment>
                                <comment type="line">// the encoding anyway, then we're expecting the content</comment>
                                <comment type="line">// of the document to be bad. This will just prevent an</comment>
                                <comment type="line">// invalid UTF-8 sequence to be detected. This is only</comment>
                                <comment type="line">// important when continue-after-fatal-error is turned</comment>
                                <comment type="line">// on. -Ac</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>encoding</name>
                                        = "ISO-8859-1"
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// try to use a Java reader</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>javaEncoding</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>EncodingMap</name>.
                                            <name>getIANA2JavaMapping</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ENCODING</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>javaEncoding</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fAllowJavaEncodings</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>javaEncoding</name>
                                                    =
                                                    <name>encoding</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fErrorReporter</name>.
                                                            <name>reportError</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLMessageFormatter</name>.
                                                                        <name>XML_DOMAIN</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>"EncodingDeclInvalid"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>encoding</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>XMLErrorReporter</name>.
                                                                        <name>SEVERITY_FATAL_ERROR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <comment type="line">// see comment above.</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>javaEncoding</name>
                                                    = "ISO8859_1"
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>javaEncoding</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"ASCII"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_ENCODINGS</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"$$$ creating ASCIIReader"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>ASCIIReader</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>inputStream</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fBufferSize</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>getMessageFormatter</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>XMLMessageFormatter</name>.
                                                                                    <name>XML_DOMAIN</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fErrorReporter</name>.
                                                                        <name>getLocale</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>


                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ENCODINGS</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"$$$ creating Java InputStreamReader: encoding="+
                                                        <name>javaEncoding</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>javaEncoding</name>
                                            ==
                                            <name>encoding</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" (IANA encoding)"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>new
                            <call>
                                <name>InputStreamReader</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>inputStream</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>javaEncoding</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// createReader(InputStream,String, Boolean): Reader</comment>

            <comment type="line">//</comment>
            <comment type="line">// Protected static methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Fixes a platform dependent filename to standard URI form.
                *
                * @param str The string to fix.
                *
                * @return Returns the fixed URI string.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>fixURI</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// handle platform dependent strings</comment>
                    <expr_stmt>
                        <expr>
                            <name>str</name>
                            =
                            <call>
                                <name><name>str</name>.
                                    <name>replace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>java</name>.<name>io</name>.<name>File</name>.
                                                <name>separatorChar</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'/'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>sb</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Windows fix</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>str</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt;= 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch1</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// change "C:blah" to "file:///C:blah"</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>ch1</name>
                                            == ':'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>char</name>
                                                    </type>
                                                    <name>ch0</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>Character</name>.
                                                                    <name>toUpperCase</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>charAt</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>0</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>ch0</name>
                                                        &gt;= 'A' &amp;&amp; <name>ch0</name> &lt;= 'Z'
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>sb</name>
                                                                = new
                                                                <call>
                                                                    <name>StringBuffer</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>str</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + 8
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>sb</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"file:///"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <comment type="line">// change "//blah" to "file://blah"</comment>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch1</name>
                                                    == '/' &amp;&amp;
                                                    <call>
                                                        <name><name>str</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == '/'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>sb</name>
                                                            = new
                                                            <call>
                                                                <name>StringBuffer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>str</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            + 5
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>sb</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"file:"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pos</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>indexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>' '</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// there is no space in the string</comment>
                    <comment type="line">// we just append "str" to the end of sb</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>pos</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>sb</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>sb</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>str</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>str</name>
                                                    =
                                                    <call>
                                                        <name><name>sb</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <comment type="line">// otherwise, convert all ' ' to "%20".</comment>
                        <comment type="line">// Note: the following algorithm might not be very performant,</comment>
                        <comment type="line">// but people who want to use invalid URI's have to pay the price.
                        </comment>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>sb</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>sb</name>
                                                = new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>str</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <comment type="line">// put characters before ' ' into the string buffer</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>pos</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>sb</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>str</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                <comment type="line">// and %20 for the space</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>sb</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"%20"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// for the remamining part, also convert ' ' to "%20".</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr><name>pos</name>+1
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>str</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>str</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == ' '
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"%20"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>str</name>.
                                                                                <name>charAt</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                <expr_stmt>
                                    <expr>
                                        <name>str</name>
                                        =
                                        <call>
                                            <name><name>sb</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// done</comment>
                    <return>return
                        <expr>
                            <name>str</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// fixURI(String):String</comment>

            <comment type="line">//</comment>
            <comment type="line">// Package visible methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns the hashtable of declared entities.
                * &lt;p&gt;
                * &lt;strong&gt;REVISIT:&lt;/strong&gt;
                * This should be done the "right" way by designing a better way to
                * enumerate the declared entities. For now, this method is needed
                * by the constructor that takes an XMLEntityManager parameter.
                */
            </comment>
            <function>
                <type>
                    <name>Hashtable</name>
                </type>
                <name>getDeclaredEntities</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fEntities</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getDeclaredEntities():Hashtable</comment>

            <comment type="javadoc">/** Prints the contents of the buffer. */</comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>void</name>
                </type>
                <name>print</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ScannedEntity</name>
                            </type>
                            <name>currentEntity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>currentEntity</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'['</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>currentEntity</name>.
                                                                        <name>count</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>' '</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>currentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>count</name>
                                                        </name>
                                                        &gt; 0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" \""</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>currentEntity</name>.
                                                                        <name>count</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>i</name>
                                                                            ==
                                                                            <name><name>currentEntity</name>.
                                                                                <name>position</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>System</name>.<name>
                                                                                            out</name>.
                                                                                            <name>print</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>'^'</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>char</name>
                                                                        </type>
                                                                        <name>c</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <name><name>currentEntity</name>.
                                                                                    <name>ch</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <switch>switch
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>c</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <block>{
                                                                        <case>case <expr>'\n'</expr>:
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>print</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"\\n"</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <break>break;</break>
                                                                                }
                                                                            </block>
                                                                        </case>
                                                                        <case>case <expr>'\r'</expr>:
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>print</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"\\r"</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <break>break;</break>
                                                                                }
                                                                            </block>
                                                                        </case>
                                                                        <case>case <expr>'\t'</expr>:
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>print</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"\\t"</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <break>break;</break>
                                                                                }
                                                                            </block>
                                                                        </case>
                                                                        <case>case <expr>'\\'</expr>:
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>print</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"\\\\"</expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <break>break;</break>
                                                                                }
                                                                            </block>
                                                                        </case>
                                                                        <default>default:
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>print</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>c</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </default>
                                                                        }
                                                                    </block>
                                                                </switch>
                                                                }
                                                            </block>
                                                        </for>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name><name>currentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    ==
                                                                    <name><name>currentEntity</name>.
                                                                        <name>count</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>'^'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>'"'</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>']'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" @ "</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>currentEntity</name>.
                                                                        <name>lineNumber</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>','</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>currentEntity</name>.
                                                                        <name>columnNumber</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"*NO CURRENT ENTITY*"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// print(ScannedEntity)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Entity information.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier>
                <specifier>abstract</specifier> class <name>Entity</name>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Entity name. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// whether this entity's declaration was found in the internal</comment>
                    <comment type="line">// or external subset</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>inExternalSubset</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Default constructor. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Entity</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>clear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;()</comment>

                    <comment type="javadoc">/** Constructs an entity. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Entity</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inExternalSubset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>name</name>
                                    </name>
                                    =
                                    <name>name</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>inExternalSubset</name>
                                    </name>
                                    =
                                    <name>inExternalSubset</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(String)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Public methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns true if this entity was declared in the external subset. */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEntityDeclInExternalSubset</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>inExternalSubset</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Returns true if this is an external entity. */</comment>
                    <function_decl>
                        <type>
                            <specifier>public</specifier>
                            <specifier>abstract</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isExternal</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="javadoc">/** Returns true if this is an unparsed entity. */</comment>
                    <function_decl>
                        <type>
                            <specifier>public</specifier>
                            <specifier>abstract</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isUnparsed</name>
                        <parameter_list>()</parameter_list>;
                    </function_decl>

                    <comment type="javadoc">/** Clears the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>name</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>inExternalSubset</name>
                                    = false
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// clear()</comment>

                    <comment type="javadoc">/** Sets the values of the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Entity</name>
                                    </type>
                                    <name>entity</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>name</name>
                                    =
                                    <name><name>entity</name>.
                                        <name>name</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>inExternalSubset</name>
                                    =
                                    <name><name>entity</name>.
                                        <name>inExternalSubset</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setValues(Entity)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Entity</comment>

            <comment type="javadoc">/**
                * Internal entity.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier> class
                <name>InternalEntity</name>
                <super>
                    <extends>extends
                        <name>Entity</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Text value of entity. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>text</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Default constructor. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>InternalEntity</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>clear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;()</comment>

                    <comment type="javadoc">/** Constructs an internal entity. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>InternalEntity</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>text</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inExternalSubset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>inExternalSubset</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>text</name>
                                    </name>
                                    =
                                    <name>text</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(String,String)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Entity methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns true if this is an external entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isExternal</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isExternal():boolean</comment>

                    <comment type="javadoc">/** Returns true if this is an unparsed entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isUnparsed</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isUnparsed():boolean</comment>

                    <comment type="javadoc">/** Clears the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>clear</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>text</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// clear()</comment>

                    <comment type="javadoc">/** Sets the values of the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Entity</name>
                                    </type>
                                    <name>entity</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entity</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>text</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setValues(Entity)</comment>

                    <comment type="javadoc">/** Sets the values of the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>InternalEntity</name>
                                    </type>
                                    <name>entity</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entity</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>text</name>
                                    =
                                    <name><name>entity</name>.
                                        <name>text</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setValues(InternalEntity)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class InternalEntity</comment>

            <comment type="javadoc">/**
                * External entity.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>static</specifier> class
                <name>ExternalEntity</name>
                <super>
                    <extends>extends
                        <name>Entity</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** container for all relevant entity location information. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>entityLocation</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Notation name for unparsed entity. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>notation</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Default constructor. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>ExternalEntity</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>clear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;()</comment>

                    <comment type="javadoc">/** Constructs an internal entity. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>ExternalEntity</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLResourceIdentifier</name>
                                    </type>
                                    <name>entityLocation</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>notation</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>inExternalSubset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>inExternalSubset</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>entityLocation</name>
                                    </name>
                                    =
                                    <name>entityLocation</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>notation</name>
                                    </name>
                                    =
                                    <name>notation</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(String,XMLResourceIdentifier, String)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Entity methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns true if this is an external entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isExternal</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isExternal():boolean</comment>

                    <comment type="javadoc">/** Returns true if this is an unparsed entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isUnparsed</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>notation</name>
                                    !=
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isUnparsed():boolean</comment>

                    <comment type="javadoc">/** Clears the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>clear</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>clear</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>entityLocation</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>notation</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// clear()</comment>

                    <comment type="javadoc">/** Sets the values of the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Entity</name>
                                    </type>
                                    <name>entity</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entity</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>entityLocation</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>notation</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setValues(Entity)</comment>

                    <comment type="javadoc">/** Sets the values of the entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setValues</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ExternalEntity</name>
                                    </type>
                                    <name>entity</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>entity</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>entityLocation</name>
                                    =
                                    <name><name>entity</name>.
                                        <name>entityLocation</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>notation</name>
                                    =
                                    <name><name>entity</name>.
                                        <name>notation</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// setValues(ExternalEntity)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class ExternalEntity</comment>

            <comment type="javadoc">/**
                * Entity state.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                class
                <name>ScannedEntity</name>
                <super>
                    <extends>extends
                        <name>Entity</name>
                    </extends>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="line">// i/o</comment>

                    <comment type="javadoc">/** Input stream. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>InputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Reader. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Reader</name>
                            </type>
                            <name>reader</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// locator information</comment>

                    <comment type="javadoc">/** entity location information */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>entityLocation</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Line number. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>lineNumber</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Column number. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>columnNumber</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// encoding</comment>

                    <comment type="javadoc">/** Auto-detected encoding. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Encoding has been set externally, for example
                        * using a SAX InputSource or a DOM LSInput.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>externallySpecifiedEncoding</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// version</comment>

                    <comment type="javadoc">/** XML version. **/</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>String</name>
                            </type>
                            <name>xmlVersion</name> =
                            <init>
                                <expr>"1.0"</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// status</comment>

                    <comment type="javadoc">/** True if in a literal. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>literal</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// whether this is an external or internal scanned entity</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>isExternal</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// buffer</comment>

                    <comment type="javadoc">/** Character buffer. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>ch</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Position in character buffer. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>position</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Base character offset for computing absolute character offset. */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>baseCharOffset</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Start position in character buffer. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>startPosition</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Count of characters in buffer. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>int</name>
                            </type>
                            <name>count</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// to allow the reader/inputStream to behave efficiently:</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>boolean</name>
                            </type>
                            <name>mayReadChunks</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Character buffer container. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>CharacterBuffer</name>
                            </type>
                            <name>fBuffer</name>
                        </decl>
                        ;
                    </decl_stmt>


                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs a scanned entity. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>ScannedEntity</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLResourceIdentifier</name>
                                    </type>
                                    <name>entityLocation</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>InputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Reader</name>
                                    </type>
                                    <name>reader</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>encoding</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>literal</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>mayReadChunks</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isExternal</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>XMLEntityManager</name>.<name>this</name>.
                                                        <name>fInExternalSubset</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>entityLocation</name>
                                    </name>
                                    =
                                    <name>entityLocation</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>stream</name>
                                    </name>
                                    =
                                    <name>stream</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>reader</name>
                                    </name>
                                    =
                                    <name>reader</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>encoding</name>
                                    </name>
                                    =
                                    <name>encoding</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>literal</name>
                                    </name>
                                    =
                                    <name>literal</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>mayReadChunks</name>
                                    </name>
                                    =
                                    <name>mayReadChunks</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>isExternal</name>
                                    </name>
                                    =
                                    <name>isExternal</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>fBuffer</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>fBufferPool</name>.
                                            <name>getBuffer</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>isExternal</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>ch</name>
                                    </name>
                                    =
                                    <name><name>fBuffer</name>.
                                        <name>ch</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(StringXMLResourceIdentifier,InputStream,Reader,String,boolean,
                        boolean)
                    </comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Entity methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns true if this is an external entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isExternal</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>isExternal</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isExternal():boolean</comment>

                    <comment type="javadoc">/** Returns true if this is an unparsed entity. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <specifier>final</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isUnparsed</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>false</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// isUnparsed():boolean</comment>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setReader</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>InputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>encoding</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Boolean</name>
                                    </type>
                                    <name>isBigEndian</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>reader</name>
                                    =
                                    <call>
                                        <name>createReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>encoding</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>isBigEndian</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="line">// return the expanded system ID of the</comment>
                    <comment type="line">// first external entity on the stack, null</comment>
                    <comment type="line">// otherwise.</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getExpandedSystemId</name>
                        <parameter_list>()</parameter_list>
                        <block>{

                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>
                                                <name>size</name>
                                                - 1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &gt;= 0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>externalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>externalEntity</name>.
                                                    <name>entityLocation</name>
                                                </name>
                                                != <name>null</name> &amp;&amp;
                                                <call>
                                                    <name><name>externalEntity</name>.<name>entityLocation</name>.
                                                        <name>getExpandedSystemId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>externalEntity</name>.<name>
                                                                entityLocation</name>.
                                                                <name>getExpandedSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return literal systemId of</comment>
                    <comment type="line">// nearest external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getLiteralSystemId</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>
                                                <name>size</name>
                                                - 1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &gt;= 0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>externalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>externalEntity</name>.
                                                    <name>entityLocation</name>
                                                </name>
                                                != <name>null</name> &amp;&amp;
                                                <call>
                                                    <name><name>externalEntity</name>.<name>entityLocation</name>.
                                                        <name>getLiteralSystemId</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <call>
                                                            <name><name>externalEntity</name>.<name>
                                                                entityLocation</name>.
                                                                <name>getLiteralSystemId</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return line number of position in most</comment>
                    <comment type="line">// recent external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getLineNumber</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr><name>size</name>-1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>firstExternalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>firstExternalEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>lineNumber</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return <expr>-1</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return column number of position in most</comment>
                    <comment type="line">// recent external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getColumnNumber</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr><name>size</name>-1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>firstExternalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>firstExternalEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>columnNumber</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return <expr>-1</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return character offset of position in most</comment>
                    <comment type="line">// recent external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>getCharacterOffset</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr><name>size</name>-1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>firstExternalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>firstExternalEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>baseCharOffset</name>
                                                        </name>
                                                        + (
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        -
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>startPosition</name>
                                                        </name>
                                                        )
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return <expr>-1</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return encoding of most recent external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getEncoding</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr><name>size</name>-1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>firstExternalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>firstExternalEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>encoding</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">// return xml version of most recent external entity</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getXMLVersion</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">// search for the first external entity on the stack</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityStack</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr><name>size</name>-1
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>ScannedEntity</name>
                                            </type>
                                            <name>firstExternalEntity</name> =
                                            <init>
                                                <expr>(<name>ScannedEntity</name>)
                                                    <call>
                                                        <name><name>fEntityStack</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>firstExternalEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>firstExternalEntity</name>.
                                                            <name>xmlVersion</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Returns whether the encoding of this entity was externally specified.
                        **/
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>isEncodingExternallySpecified</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>externallySpecifiedEncoding</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Sets whether the encoding of this entity was externally specified. **/
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setEncodingExternallySpecified</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>externallySpecifiedEncoding</name>
                                    =
                                    <name>value</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="line">//</comment>
                    <comment type="line">// Object methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns a string representation of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>str</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"name=\""+<name>name</name>+'"'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>",ch="</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>ch</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>",position=" +
                                                    <name>position</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>",count=" +
                                                    <name>count</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>",baseCharOffset=" +
                                                    <name>baseCharOffset</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>",startPosition=" +
                                                    <name>startPosition</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>

                            }
                        </block>
                    </function>
                    <comment type="line">// toString():String</comment>

                    }
                </block>
            </class>
            <comment type="line">// class ScannedEntity</comment>

            <comment type="javadoc">/**
                * Buffer used in entity manager to reuse character arrays instead
                * of creating new ones every time.
                *
                * @xerces.internal
                *
                * @author Ankit Pasricha, IBM
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>CharacterBuffer</name>
                <block>{

                    <comment type="javadoc">/** character buffer */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>char</name>
                                <index>[]</index>
                            </type>
                            <name>ch</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** whether the buffer is for an external or internal scanned entity */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>boolean</name>
                            </type>
                            <name>isExternal</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>CharacterBuffer</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isExternal</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>size</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>isExternal</name>
                                    </name>
                                    =
                                    <name>isExternal</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>ch</name>
                                    = new
                                    <name>
                                        <name>char</name>
                                        <index>[
                                            <expr>
                                                <name>size</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * Stores a number of character buffers and provides it to the entity
                * manager to use when an entity is seen.
                *
                * @xerces.internal
                *
                * @author Ankit Pasricha, IBM
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>CharacterBufferPool</name>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>DEFAULT_POOL_SIZE</name> =
                            <init>
                                <expr>3</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>CharacterBuffer</name>
                                <index>[]</index>
                            </type>
                            <name>fInternalBufferPool</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>CharacterBuffer</name>
                                <index>[]</index>
                            </type>
                            <name>fExternalBufferPool</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fExternalBufferSize</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fInternalBufferSize</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>poolSize</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fInternalTop</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fExternalTop</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>CharacterBufferPool</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>externalBufferSize</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>internalBufferSize</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>this</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_POOL_SIZE</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>externalBufferSize</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>internalBufferSize</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <constructor>
                        <specifier>public</specifier>
                        <name>CharacterBufferPool</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>poolSize</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>externalBufferSize</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>internalBufferSize</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fExternalBufferSize</name>
                                    =
                                    <name>externalBufferSize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fInternalBufferSize</name>
                                    =
                                    <name>internalBufferSize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>poolSize</name>
                                    </name>
                                    =
                                    <name>poolSize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>init</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/** Initializes buffer pool. **/</comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>init</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fInternalBufferPool</name>
                                    = new
                                    <name>
                                        <name>CharacterBuffer</name>
                                        <index>[
                                            <expr>
                                                <name>poolSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fExternalBufferPool</name>
                                    = new
                                    <name>
                                        <name>CharacterBuffer</name>
                                        <index>[
                                            <expr>
                                                <name>poolSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fInternalTop</name>
                                    = -1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fExternalTop</name>
                                    = -1
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Retrieves buffer from pool. **/</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>CharacterBuffer</name>
                        </type>
                        <name>getBuffer</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>external</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>external</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fExternalTop</name>
                                                    &gt; -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>(<name>CharacterBuffer</name>)
                                                            <name>
                                                                <name>fExternalBufferPool</name>
                                                                <index>[
                                                                    <expr><name>fExternalTop</name>--
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return
                                                        <expr>new
                                                            <call>
                                                                <name>CharacterBuffer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fExternalBufferSize</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fInternalTop</name>
                                                    &gt; -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>(<name>CharacterBuffer</name>)
                                                            <name>
                                                                <name>fInternalBufferPool</name>
                                                                <index>[
                                                                    <expr><name>fInternalTop</name>--
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return
                                                        <expr>new
                                                            <call>
                                                                <name>CharacterBuffer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>false</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fInternalBufferSize</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Returns buffer to pool. **/</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>returnToPool</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>CharacterBuffer</name>
                                    </type>
                                    <name>buffer</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>buffer</name>.
                                            <name>isExternal</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fExternalTop</name>
                                                    &lt;
                                                    <name><name>fExternalBufferPool</name>.
                                                        <name>length</name>
                                                    </name>
                                                    - 1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fExternalBufferPool</name>
                                                                <index>[
                                                                    <expr>++
                                                                        <name>fExternalTop</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>buffer</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fInternalTop</name>
                                                &lt;
                                                <name><name>fInternalBufferPool</name>.
                                                    <name>length</name>
                                                </name>
                                                - 1
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fInternalBufferPool</name>
                                                            <index>[
                                                                <expr>++
                                                                    <name>fInternalTop</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>buffer</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/** Sets the size of external buffers and dumps the old pool. **/</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setExternalBufferSize</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>bufferSize</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fExternalBufferSize</name>
                                    =
                                    <name>bufferSize</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fExternalBufferPool</name>
                                    = new
                                    <name>
                                        <name>CharacterBuffer</name>
                                        <index>[
                                            <expr>
                                                <name>poolSize</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fExternalTop</name>
                                    = -1
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * This class wraps the byte inputstreams we're presented with.
                * We need it because java.io.InputStreams don't provide
                * functionality to reread processed bytes, and they have a habit
                * of reading more than one character when you call their read()
                * methods. This means that, once we discover the true (declared)
                * encoding of a document, we can neither backtrack to read the
                * whole doc again nor start reading where we are with a new
                * reader.
                *
                * This class allows rewinding an inputStream by allowing a mark
                * to be set, and the stream reset to that position. &lt;strong&gt;The
                * class assumes that it needs to read one character per
                * invocation when it's read() method is inovked, but uses the
                * underlying InputStream's read(char[], offset length) method--it
                * won't buffer data read this way!&lt;/strong&gt;
                *
                * @xerces.internal
                *
                * @author Neil Graham, IBM
                * @author Glenn Marcy, IBM
                */
            </comment>
            <class>
                <specifier>protected</specifier>
                <specifier>final</specifier> class <name>RewindableInputStream</name>
                <super>
                    <extends>extends
                        <name>InputStream</name>
                    </extends>
                </super>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>InputStream</name>
                            </type>
                            <name>fInputStream</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>fData</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fStartOffset</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fEndOffset</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fOffset</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fLength</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fMark</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>public</specifier>
                        <name>RewindableInputStream</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>InputStream</name>
                                    </type>
                                    <name>is</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fData</name>
                                    = new
                                    <name>
                                        <name>byte</name>
                                        <index>[
                                            <expr>
                                                <name>DEFAULT_XMLDECL_BUFFER_SIZE</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fInputStream</name>
                                    =
                                    <name>is</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fStartOffset</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fEndOffset</name>
                                    = -1
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fOffset</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fLength</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fMark</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setStartOffset</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>offset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fStartOffset</name>
                                    =
                                    <name>offset</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>rewind</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fOffset</name>
                                    =
                                    <name>fStartOffset</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>read</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>b</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fOffset</name>
                                        &lt;
                                        <name>fLength</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>fData</name>
                                                    <index>[
                                                        <expr><name>fOffset</name>++
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                &amp; 0xff
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fOffset</name>
                                        ==
                                        <name>fEndOffset</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>-1</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fOffset</name>
                                        ==
                                        <name><name>fData</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>byte</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>newData</name> =
                                                <init>
                                                    <expr>new
                                                        <name>
                                                            <name>byte</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>fOffset</name>
                                                                    &lt;&lt; 1
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fData</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>newData</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fOffset</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fData</name>
                                                =
                                                <name>newData</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>b</name>
                                    =
                                    <call>
                                        <name><name>fInputStream</name>.
                                            <name>read</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>b</name>
                                        == -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fEndOffset</name>
                                                =
                                                <name>fOffset</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return <expr>-1</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fData</name>
                                        <index>[
                                            <expr><name>fLength</name>++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = (<name>byte</name>)
                                    <name>b</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr><name>fOffset</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>b</name>
                                    &amp; 0xff
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>read</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>byte</name>
                                            <index>[]</index>
                                        </name>
                                    </type>
                                    <name>b</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>off</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>len</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>bytesLeft</name> =
                                    <init>
                                        <expr>
                                            <name>fLength</name>
                                            -
                                            <name>fOffset</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>bytesLeft</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fOffset</name>
                                                    ==
                                                    <name>fEndOffset</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>-1</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// better get some more for the voracious reader...
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>mayReadChunks</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <call>
                                                                <name><name>fInputStream</name>.
                                                                    <name>read</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>b</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>off</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>len</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>returnedVal</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>read</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>returnedVal</name>
                                                    == -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fEndOffset</name>
                                                            =
                                                            <name>fOffset</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return <expr>-1</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>b</name>
                                                    <index>[
                                                        <expr>
                                                            <name>off</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = (<name>byte</name>)
                                                <name>returnedVal</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return <expr>1</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>len</name>
                                        &lt;
                                        <name>bytesLeft</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>len</name>
                                                    &lt;= 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>0</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>len</name>
                                                =
                                                <name>bytesLeft</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>b</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fData</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fOffset</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>b</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>off</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>len</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>fOffset</name>
                                    +=
                                    <name>len</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>len</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>long</name>
                        </type>
                        <name>skip</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>long</name>
                                    </type>
                                    <name>n</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>bytesLeft</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>n</name>
                                        &lt;= 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>0</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>bytesLeft</name>
                                    = <name>fLength</name> -
                                    <name>fOffset</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>bytesLeft</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fOffset</name>
                                                    ==
                                                    <name>fEndOffset</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>0</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>fInputStream</name>.
                                                        <name>skip</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>n</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>n</name>
                                        &lt;=
                                        <name>bytesLeft</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fOffset</name>
                                                +=
                                                <name>n</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <name>n</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>fOffset</name>
                                    +=
                                    <name>bytesLeft</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fOffset</name>
                                        ==
                                        <name>fEndOffset</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>bytesLeft</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>n</name>
                                    -=
                                    <name>bytesLeft</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="block">/*
                                * In a manner of speaking, when this class isn't permitting more
                                * than one byte at a time to be read, it is "blocking". The
                                * available() method should indicate how much can be read without
                                * blocking, so while we're in this mode, it should only indicate
                                * that bytes in its buffer are available; otherwise, the result of
                                * available() on the underlying InputStream is appropriate.
                                */
                            </comment>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fInputStream</name>.
                                            <name>skip</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>n</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    +
                                    <name>bytesLeft</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>available</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>bytesLeft</name> =
                                    <init>
                                        <expr>
                                            <name>fLength</name>
                                            -
                                            <name>fOffset</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>bytesLeft</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fOffset</name>
                                                    ==
                                                    <name>fEndOffset</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>-1</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>mayReadChunks</name>
                                                </name>
                                                ?
                                                <call>
                                                    <name><name>fInputStream</name>.
                                                        <name>available</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                : 0
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>bytesLeft</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>mark</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>howMuch</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fMark</name>
                                    =
                                    <name>fOffset</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>reset</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fOffset</name>
                                    =
                                    <name>fMark</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>markSupported</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>close</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fInputStream</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fInputStream</name>.
                                                        <name>close</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fInputStream</name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>
            <comment type="line">// end of RewindableInputStream class</comment>

            }
        </block>
    </class>
    <comment type="line">// class XMLEntityManager</comment>
</unit>
