<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xni\parser\XMLEntityResolver.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>parser</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This interface is used to resolve external parsed entities. The
        * application can register an object that implements this interface
        * with the parser configuration in order to intercept entities and
        * resolve them explicitly. If the registered entity resolver cannot
        * resolve the entity, it should return &lt;code&gt;null&lt;/code&gt; so that the
        * parser will try to resolve the entity using a default mechanism.
        *
        * @see XMLParserConfiguration
        *
        * @author Andy Clark, IBM
        *
        * @version $Id: XMLEntityResolver.java,v 1.6 2004/10/03 21:58:18 mrglavas Exp $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XMLEntityResolver</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// XMLEntityResolver methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Resolves an external parsed entity. If the entity cannot be
                * resolved, this method should return null.
                *
                * @param resourceIdentifier location of the XML resource to resolve
                *
                * @throws XNIException Thrown on general error.
                * @throws IOException Thrown if resolved entity stream cannot be
                * opened or some other i/o error occurs.
                * @see org.apache.xerces.xni.XMLResourceIdentifier
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XMLInputSource</name>
                </type>
                <name>resolveEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            }
        </block>
    </class>
    <comment type="line">// interface XMLEntityResolver</comment>
</unit>
