<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\XMLEntityScanner.java">
    <comment type="block">/*
        * Copyright 1999-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>impl</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>EOFException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>io</name>.
            <name>UCSReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLStringBuffer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Implements the entity scanner methods.
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        * @author Neil Graham, IBM
        * @version $Id: XMLEntityScanner.java,v 1.24 2004/10/25 16:09:07 mrglavas Exp $
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>XMLEntityScanner</name>
        <super>
            <implements>implements
                <name>XMLLocator</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// constants</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ENCODINGS</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_BUFFER</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLEntityManager</name>
                    </type>
                    <name>fEntityManager</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name><name>XMLEntityManager</name>.
                            <name>ScannedEntity</name>
                        </name>
                    </type>
                    <name>fCurrentEntity</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fBufferSize</name> =
                    <init>
                        <expr>
                            <name><name>XMLEntityManager</name>.
                                <name>DEFAULT_BUFFER_SIZE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Error reporter. This property identifier is:
                * http://apache.org/xml/properties/internal/error-reporter
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Default constructor. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLEntityScanner</name>
                <parameter_list>()</parameter_list>
                <block>{
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;()</comment>

            <comment type="line">//</comment>
            <comment type="line">// XMLEntityScanner methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns the base system identifier of the currently scanned
                * entity, or null if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getBaseSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fCurrentEntity</name> != <name>null</name> &amp;&amp;
                            <name><name>fCurrentEntity</name>.
                                <name>entityLocation</name>
                            </name>
                            != <name>null</name>) ?
                            <call>
                                <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                    <name>getExpandedSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getBaseSystemId():String</comment>

            <comment type="javadoc">/**
                * Sets the encoding of the scanner. This method is used by the
                * scanners if the XMLDecl or TextDecl line contains an encoding
                * pseudo-attribute.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The underlying character reader on the
                * current entity will be changed to accomodate the new encoding.
                * However, the new encoding is ignored if the current reader was
                * not constructed from an input stream (e.g. an external entity
                * that is resolved directly to the appropriate java.io.Reader
                * object).
                *
                * @param encoding The IANA encoding name of the new encoding.
                *
                * @throws IOException Thrown if the new encoding is not supported.
                *
                * @see org.apache.xerces.util.EncodingMap
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ENCODINGS</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"$$$ setEncoding: "+
                                                        <name>encoding</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>stream</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// if the encoding is the same, don't change the reader and
                                </comment>
                                <comment type="line">// re-use the original reader used by the OneCharReader</comment>
                                <comment type="line">// NOTE: Besides saving an object, this overcomes deficiencies
                                </comment>
                                <comment type="line">// in the UTF-16 reader supplied with the standard Java</comment>
                                <comment type="line">// distribution (up to and including 1.3). The UTF-16</comment>
                                <comment type="line">// decoder buffers 8K blocks even when only asked to read</comment>
                                <comment type="line">// a single char! -Ac</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>encoding</name>
                                            </name>
                                            == <name>null</name> ||
                                            !
                                            <call>
                                                <name><name>fCurrentEntity</name>.<name>encoding</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>encoding</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// UTF-16 is a bit of a special case. If the encoding
                                                is UTF-16,
                                            </comment>
                                            <comment type="line">// and we know the endian-ness, we shouldn't change
                                                readers.
                                            </comment>
                                            <comment type="line">// If it's ISO-10646-UCS-(2|4), then we'll have to
                                                deduce
                                            </comment>
                                            <comment type="line">// the endian-ness from the encoding we presently
                                                have.
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>encoding</name>
                                                        </name>
                                                        != <name>null</name> &amp;&amp;
                                                        <call>
                                                            <name><name>fCurrentEntity</name>.<name>encoding</name>.
                                                                <name>startsWith</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"UTF-16"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>ENCODING</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>encoding</name>.
                                                                                <name>toUpperCase</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Locale</name>.
                                                                                            <name>ENGLISH</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ENCODING</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"UTF-16"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <return>return;</return>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ENCODING</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"ISO-10646-UCS-4"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fCurrentEntity</name>
                                                                                        .<name>encoding</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"UTF-16BE"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>reader</name>
                                                                                        </name>
                                                                                        = new
                                                                                        <call>
                                                                                            <name>UCSReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fCurrentEntity</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                stream
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            UCSReader</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                UCS4BE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>reader</name>
                                                                                        </name>
                                                                                        = new
                                                                                        <call>
                                                                                            <name>UCSReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fCurrentEntity</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                stream
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            UCSReader</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                UCS4LE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                    <return>return;</return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>ENCODING</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"ISO-10646-UCS-2"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fCurrentEntity</name>
                                                                                        .<name>encoding</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"UTF-16BE"</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>reader</name>
                                                                                        </name>
                                                                                        = new
                                                                                        <call>
                                                                                            <name>UCSReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fCurrentEntity</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                stream
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            UCSReader</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                UCS2BE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>reader</name>
                                                                                        </name>
                                                                                        = new
                                                                                        <call>
                                                                                            <name>UCSReader</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            fCurrentEntity</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                stream
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            UCSReader</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                UCS2LE
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                    <return>return;</return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// wrap a new reader around the input stream,
                                                changing
                                            </comment>
                                            <comment type="line">// the encoding</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_ENCODINGS</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"$$$ creating new reader from stream:
                                                                                "+
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>stream</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">//fCurrentEntity.stream.reset();</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>setReader</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>stream</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>encoding</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>encoding</name>
                                                    </name>
                                                    =
                                                    <name>encoding</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_ENCODINGS</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"$$$ reusing old reader on stream"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// setEncoding(String)</comment>

            <comment type="javadoc">/**
                * Sets the XML version. This method is used by the
                * scanners to report the value of the version pseudo-attribute
                * in an XML or text declaration.
                *
                * @param xmlVersion the XML version of the current entity
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setXMLVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xmlVersion</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>xmlVersion</name>
                            </name>
                            =
                            <name>xmlVersion</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setXMLVersion(String)</comment>

            <comment type="javadoc">/** Returns true if the current entity being scanned is external. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isExternal</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>fCurrentEntity</name>.
                                    <name>isExternal</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isExternal():boolean</comment>

            <comment type="javadoc">/**
                * Returns the next character on the input.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The character is &lt;em&gt;not&lt;/em&gt; consumed.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>peekChar</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(peekChar: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// peek at character</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// return peeked character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")peekChar: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" -&gt; '"+(<name>c</name>!='\r'?(<name>
                                                                    char</name>)<name>c</name>:'\n')+"'"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" -&gt; '"+(<name>char</name>)<name>c</name>+"'"
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fCurrentEntity</name>.
                                        <name>isExternal</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>c</name>
                                        != '\r' ? <name>c</name> : '\n'
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// peekChar():int</comment>

            <comment type="javadoc">/**
                * Returns the next character on the input.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The character is consumed.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>scanChar</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanChar: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan character</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                ++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                == '\n' ||
                                (<name>c</name> == '\r' &amp;&amp; (<name>external</name> =
                                <call>
                                    <name><name>fCurrentEntity</name>.
                                        <name>isExternal</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ))
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>lineNumber</name>
                                        </name>
                                        ++
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>columnNumber</name>
                                        </name>
                                        = 1
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    = (<name>char</name>)
                                                    <name>c</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>load</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>1</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            == '\r' &amp;&amp;
                                            <name>external</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    ++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        != '\n'
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                --
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>c</name>
                                                    = '\n'
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// return character that was scanned</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanChar: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; '"+(<name>char</name>)<name>c</name>+"'"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            ++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanChar():int</comment>

            <comment type="javadoc">/**
                * Returns a string matching the NMTOKEN production appearing immediately
                * on the input as a symbol, or null if NMTOKEN Name string is present.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The NMTOKEN characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The string returned must be a symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.SymbolTable
                * @see org.apache.xerces.util.XMLChar#isName
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>scanNmtoken</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanNmtoken: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan nmtoken</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isName</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>++
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        ==
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>length</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        -
                                                        <name>offset</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>length</name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.<name>ch</name>.
                                                        <name>length</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// bad luck we have to resize our buffer
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>char</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>tmp</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>char</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.<name>
                                                                                    ch</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                                &lt;&lt; 1
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.
                                                                    <name>arraycopy</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>offset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>tmp</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>length</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                            </name>
                                                            =
                                                            <name>tmp</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.
                                                                    <name>arraycopy</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>offset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>length</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>offset</name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>load</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>length</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <break>break;</break>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            +=
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return nmtoken</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>symbol</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>symbol</name>
                                        =
                                        <call>
                                            <name><name>fSymbolTable</name>.
                                                <name>addSymbol</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanNmtoken: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; "+
                                                        <call>
                                                            <name><name>String</name>.
                                                                <name>valueOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>symbol</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>symbol</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanNmtoken():String</comment>

            <comment type="javadoc">/**
                * Returns a string matching the Name production appearing immediately
                * on the input as a symbol, or null if no Name string is present.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The Name characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The string returned must be a symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.SymbolTable
                * @see org.apache.xerces.util.XMLChar#isName
                * @see org.apache.xerces.util.XMLChar#isNameStart
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>scanName</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanName: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isNameStart</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>offset</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>++
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>offset</name>
                                                    = 0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>load</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>columnNumber</name>
                                                                </name>
                                                                ++
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>symbol</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fSymbolTable</name>.
                                                                                <name>addSymbol</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>1</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>DEBUG_BUFFER</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>")scanName: "</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>XMLEntityManager</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fCurrentEntity</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>println</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>" -&gt; "+
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    String</name>.
                                                                                                    <name>valueOf</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                symbol
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>
                                                                <name>symbol</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>length</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    -
                                                                    <name>offset</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>length</name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.<name>ch</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// bad luck we have to resize our
                                                                    buffer
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>char</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>tmp</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>char</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                fCurrentEntity</name>
                                                                                                .<name>ch</name>.
                                                                                                <name>length</name>
                                                                                            </name>
                                                                                            &lt;&lt; 1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tmp</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>ch</name>
                                                                        </name>
                                                                        =
                                                                        <name>tmp</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            = 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name>load</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>length</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            +=
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>symbol</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>symbol</name>
                                        =
                                        <call>
                                            <name><name>fSymbolTable</name>.
                                                <name>addSymbol</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanName: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; "+
                                                        <call>
                                                            <name><name>String</name>.
                                                                <name>valueOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>symbol</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>symbol</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanName():String</comment>

            <comment type="javadoc">/**
                * Returns a string matching the NCName production appearing immediately
                * on the input as a symbol, or null if no NCName string is present.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The NCName characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The string returned must be a symbol. The
                * SymbolTable can be used for this purpose.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.SymbolTable
                * @see org.apache.xerces.util.XMLChar#isNCName
                * @see org.apache.xerces.util.XMLChar#isNCNameStart
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>scanNCName</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanNCName: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isNCNameStart</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>offset</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>++
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>offset</name>
                                                    = 0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>load</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>columnNumber</name>
                                                                </name>
                                                                ++
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>symbol</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fSymbolTable</name>.
                                                                                <name>addSymbol</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>1</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>DEBUG_BUFFER</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>")scanNCName: "</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>XMLEntityManager</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fCurrentEntity</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>println</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>" -&gt; "+
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    String</name>.
                                                                                                    <name>valueOf</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                symbol
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>
                                                                <name>symbol</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isNCName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>length</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    -
                                                                    <name>offset</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>length</name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.<name>ch</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// bad luck we have to resize our
                                                                    buffer
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>char</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>tmp</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>char</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                fCurrentEntity</name>
                                                                                                .<name>ch</name>.
                                                                                                <name>length</name>
                                                                                            </name>
                                                                                            &lt;&lt; 1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tmp</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>ch</name>
                                                                        </name>
                                                                        =
                                                                        <name>tmp</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            = 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name>load</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>length</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            +=
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>symbol</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>symbol</name>
                                        =
                                        <call>
                                            <name><name>fSymbolTable</name>.
                                                <name>addSymbol</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>offset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanNCName: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; "+
                                                        <call>
                                                            <name><name>String</name>.
                                                                <name>valueOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>symbol</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>symbol</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanNCName():String</comment>

            <comment type="javadoc">/**
                * Scans a qualified name from the input, setting the fields of the
                * QName structure appropriately.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The qualified name characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The strings used to set the values of the
                * QName structure must be symbols. The SymbolTable can be used for
                * this purpose.
                *
                * @param qname The qualified name structure to fill.
                *
                * @return Returns true if a qualified name appeared immediately on
                * the input and was scanned, false otherwise.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.SymbolTable
                * @see org.apache.xerces.util.XMLChar#isName
                * @see org.apache.xerces.util.XMLChar#isNameStart
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>scanQName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>qname</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanQName, "+<name>qname</name>+": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan qualified name</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isNCNameStart</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>offset</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>++
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[
                                                            <expr>
                                                                <name>offset</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>offset</name>
                                                    = 0
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name>load</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>false</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>columnNumber</name>
                                                                </name>
                                                                ++
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>name</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fSymbolTable</name>.
                                                                                <name>addSymbol</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>1</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>qname</name>.
                                                                        <name>setValues</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>name</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>name</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>DEBUG_BUFFER</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>")scanQName, "+<name>
                                                                                            qname</name>+": "
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>XMLEntityManager</name>.
                                                                                    <name>print</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fCurrentEntity</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>System</name>.<name>
                                                                                    out</name>.
                                                                                    <name>println</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>" -&gt; true"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return <expr>true</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>index</name> =
                                        <init>
                                            <expr>-1</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>char</name>
                                                </type>
                                                <name>c</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == ':'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>index</name>
                                                                != -1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>index</name>
                                                            =
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>++
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>length</name> =
                                                            <init>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    -
                                                                    <name>offset</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>length</name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.<name>ch</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// bad luck we have to resize our
                                                                    buffer
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>char</name>
                                                                            <index>[]</index>
                                                                        </type>
                                                                        <name>tmp</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>char</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                fCurrentEntity</name>
                                                                                                .<name>ch</name>.
                                                                                                <name>length</name>
                                                                                            </name>
                                                                                            &lt;&lt; 1
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tmp</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>ch</name>
                                                                        </name>
                                                                        =
                                                                        <name>tmp</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.
                                                                                <name>arraycopy</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>offset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>ch</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>0</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>length</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>index</name>
                                                                != -1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>index</name>
                                                                        = <name>index</name> -
                                                                        <name>offset</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>offset</name>
                                                            = 0
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name>load</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>length</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                -
                                                <name>offset</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>columnNumber</name>
                                        </name>
                                        +=
                                        <name>length</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>length</name>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>prefix</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>localpart</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>rawname</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>fSymbolTable</name>.
                                                                    <name>addSymbol</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>offset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>length</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>index</name>
                                                        != -1
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>prefixLength</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>index</name>
                                                                        -
                                                                        <name>offset</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>prefix</name>
                                                                =
                                                                <call>
                                                                    <name><name>fSymbolTable</name>.
                                                                        <name>addSymbol</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>ch</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>prefixLength</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>len</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>length</name>
                                                                        - <name>prefixLength</name> - 1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>startLocal</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name>index</name>
                                                                        +1
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <call>
                                                                        <name><name>XMLChar</name>.
                                                                            <name>isNCNameStart</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>ch</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>startLocal</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fErrorReporter</name>.
                                                                                    <name>reportError</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLMessageFormatter</name>
                                                                                                .
                                                                                                <name>XML_DOMAIN</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>"IllegalQName"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                XMLErrorReporter</name>.
                                                                                                <name>
                                                                                                    SEVERITY_FATAL_ERROR
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>localpart</name>
                                                                =
                                                                <call>
                                                                    <name><name>fSymbolTable</name>.
                                                                        <name>addSymbol</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>ch</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>startLocal</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>len</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>localpart</name>
                                                                =
                                                                <name>rawname</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>qname</name>.
                                                            <name>setValues</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>prefix</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>localpart</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>rawname</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_BUFFER</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>")scanQName, "+<name>qname</name>+": "
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLEntityManager</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fCurrentEntity</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" -&gt; true"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// no qualified name found</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanQName, "+<name>qname</name>+": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; false"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanQName(QName):boolean</comment>

            <comment type="javadoc">/**
                * Scans a range of parsed character data, setting the fields of the
                * XMLString structure, appropriately.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method does not guarantee to return
                * the longest run of parsed character data. This method may return
                * before markup due to reaching the end of the input buffer or any
                * other reason.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The fields contained in the XMLString
                * structure are not guaranteed to remain valid upon subsequent calls
                * to the entity scanner. Therefore, the caller is responsible for
                * immediately using the returned character data or making a copy of
                * the character data.
                *
                * @param content The content structure to fill.
                *
                * @return Returns the next character on the input, if known. This
                * value may be -1 but this does &lt;em&gt;note&lt;/em&gt; designate
                * end of file.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>scanContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanContent: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        ==
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                        - 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>count</name>
                                                            </name>
                                                            - 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>load</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>startPosition</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// normalize newlines</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name>offset</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newlines</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fCurrentEntity</name>.
                                            <name>isExternal</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                == '\n' || (<name>c</name> == '\r' &amp;&amp; <name>external</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"[newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <do>do
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>c</name>
                                                =
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '\r' &amp;&amp;
                                                    <name>external</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr><name>newlines</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>lineNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            = 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>offset</name>
                                                                        = 0
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>baseCharOffset</name>
                                                                        </name>
                                                                        += (
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        -
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        )
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name>load</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>newlines</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>ch</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>position</name>
                                                                            </name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                == '\n'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr><name>offset</name>++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="javadoc">/*** NEWLINE NORMALIZATION ***/</comment>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>c</name>
                                                            == '\n'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>lineNumber</name>
                                                                    </name>
                                                                    ++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>columnNumber</name>
                                                                    </name>
                                                                    = 1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>count</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                                = 0
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>baseCharOffset</name>
                                                                                </name>
                                                                                += (
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                -
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                )
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>load</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>newlines
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>false</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <break>break;</break>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    --
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>offset</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = '\n'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                -
                                                <name>offset</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>setValues</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>ch</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>offset</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>length</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_BUFFER</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"]newline, "+<name>offset</name>+", "+
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                +": "
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLEntityManager</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fCurrentEntity</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return <expr>-1</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"]newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// inner loop, scanning for content</comment>
                    <while>while
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                &lt;
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                ++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isContent</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>c</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                --
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            += <name>length</name> -
                            <name>newlines</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>content</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>ch</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>offset</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return next character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                !=
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>c</name>
                                        =
                                        <name><name>fCurrentEntity</name>.
                                            <name>ch</name>
                                            <index>[
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// REVISIT: Does this need to be updated to fix the</comment>
                                <comment type="line">// #x0D ^#x0A newline normalization problem? -Ac</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            == '\r' &amp;&amp;
                                            <name>external</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>c</name>
                                                    = '\n'
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>c</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanContent: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; '"+(<name>char</name>)<name>c</name>+"'"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanContent(XMLString):int</comment>

            <comment type="javadoc">/**
                * Scans a range of attribute value data, setting the fields of the
                * XMLString structure, appropriately.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method does not guarantee to return
                * the longest run of attribute value data. This method may return
                * before the quote character due to reaching the end of the input
                * buffer or any other reason.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The fields contained in the XMLString
                * structure are not guaranteed to remain valid upon subsequent calls
                * to the entity scanner. Therefore, the caller is responsible for
                * immediately using the returned character data or making a copy of
                * the character data.
                *
                * @param quote The quote character that signifies the end of the
                * attribute value data.
                * @param content The content structure to fill.
                *
                * @return Returns the next character on the input, if known. This
                * value may be -1 but this does &lt;em&gt;note&lt;/em&gt; designate
                * end of file.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>scanLiteral</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>quote</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanLiteral, '"+(<name>char</name>)<name>quote</name>+"': "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        ==
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                        - 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>count</name>
                                                            </name>
                                                            - 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>load</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>false</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>startPosition</name>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// normalize newlines</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name>offset</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newlines</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fCurrentEntity</name>.
                                            <name>isExternal</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                == '\n' || (<name>c</name> == '\r' &amp;&amp; <name>external</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"[newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <do>do
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>c</name>
                                                =
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '\r' &amp;&amp;
                                                    <name>external</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr><name>newlines</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>lineNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            = 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>offset</name>
                                                                        = 0
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>baseCharOffset</name>
                                                                        </name>
                                                                        += (
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        -
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        )
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name>load</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>newlines</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>ch</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>position</name>
                                                                            </name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                == '\n'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr><name>offset</name>++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="javadoc">/*** NEWLINE NORMALIZATION ***/</comment>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                    <comment type="javadoc">/***/</comment>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>c</name>
                                                            == '\n'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>lineNumber</name>
                                                                    </name>
                                                                    ++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>columnNumber</name>
                                                                    </name>
                                                                    = 1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>count</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                                = 0
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>baseCharOffset</name>
                                                                                </name>
                                                                                += (
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                -
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                )
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>load</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>newlines
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>false</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <break>break;</break>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    --
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>offset</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = '\n'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                -
                                                <name>offset</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>content</name>.
                                                            <name>setValues</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>ch</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>offset</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>length</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_BUFFER</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"]newline, "+<name>offset</name>+", "+
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                +": "
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLEntityManager</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fCurrentEntity</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return <expr>-1</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"]newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan literal value</comment>
                    <while>while
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                &lt;
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                ++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>(<name>c</name> == <name>quote</name> &amp;&amp;
                                        (!
                                        <name><name>fCurrentEntity</name>.
                                            <name>literal</name>
                                        </name>
                                        || <name>external</name>))
                                        || <name>c</name> == '%' || !
                                        <call>
                                            <name><name>XMLChar</name>.
                                                <name>isContent</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>c</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                --
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            += <name>length</name> -
                            <name>newlines</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>content</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>ch</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>offset</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return next character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                !=
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>c</name>
                                        =
                                        <name><name>fCurrentEntity</name>.
                                            <name>ch</name>
                                            <index>[
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// NOTE: We don't want to accidentally signal the</comment>
                                <comment type="line">// end of the literal if we're expanding an</comment>
                                <comment type="line">// entity appearing in the literal. -Ac</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            == <name>quote</name> &amp;&amp;
                                            <name><name>fCurrentEntity</name>.
                                                <name>literal</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>c</name>
                                                    = -1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>c</name>
                                        = -1
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanLiteral, '"+(<name>char</name>)<name>quote</name>+"': "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; '"+(<name>char</name>)<name>c</name>+"'"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>c</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanLiteral(int,XMLString):int</comment>

            <comment type="javadoc">/**
                * Scans a range of character data up to the specified delimiter,
                * setting the fields of the XMLString structure, appropriately.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This assumes that the internal buffer is
                * at least the same size, or bigger, than the length of the delimiter
                * and that the delimiter contains at least one character.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method does not guarantee to return
                * the longest run of character data. This method may return before
                * the delimiter due to reaching the end of the input buffer or any
                * other reason.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The fields contained in the XMLString
                * structure are not guaranteed to remain valid upon subsequent calls
                * to the entity scanner. Therefore, the caller is responsible for
                * immediately using the returned character data or making a copy of
                * the character data.
                *
                * @param delimiter The string that signifies the end of the character
                * data to be scanned.
                * @param data The data structure to fill.
                *
                * @return Returns true if there is more data to scan, false otherwise.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>scanData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>delimiter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLStringBuffer</name>
                            </type>
                            <name>buffer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// REVISIT: This method does not need to use a string buffer.</comment>
                    <comment type="line">// The change would avoid the array copies and increase</comment>
                    <comment type="line">// performance. -Ac</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// Currently, this method is called for scanning CDATA</comment>
                    <comment type="line">// sections, comments, and processing instruction data.</comment>
                    <comment type="line">// So if this code is updated to NOT buffer, the scanning</comment>
                    <comment type="line">// code for comments and processing instructions will</comment>
                    <comment type="line">// need to be updated to do its own buffering. The code</comment>
                    <comment type="line">// for CDATA sections is safe as-is. -Ac</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>found</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>delimLen</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>delimiter</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>charAt0</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>delimiter</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>external</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fCurrentEntity</name>.
                                            <name>isExternal</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(scanData: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>bNextEntity</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr>(
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                &gt;
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                                - <name>delimLen</name>)
                                &amp;&amp; (!<name>bNextEntity</name>)
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.
                                            <name>arraycopy</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                    -
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <name>bNextEntity</name>
                                    =
                                    <call>
                                        <name>load</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                    -
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>startPosition</name>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                &gt;
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                                -
                                <name>delimLen</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// something must be wrong with the input: e.g., file ends in an
                                    unterminated comment
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>count</name>
                                                </name>
                                                -
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buffer</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>columnNumber</name>
                                        </name>
                                        +=
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>baseCharOffset</name>
                                        </name>
                                        += (
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        -
                                        <name><name>fCurrentEntity</name>.
                                            <name>startPosition</name>
                                        </name>
                                        )
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        =
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>startPosition</name>
                                        </name>
                                        =
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// normalize newlines</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name>offset</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newlines</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                == '\n' || (<name>c</name> == '\r' &amp;&amp; <name>external</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"[newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <do>do
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>c</name>
                                                =
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '\r' &amp;&amp;
                                                    <name>external</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr><name>newlines</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>lineNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            = 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>offset</name>
                                                                        = 0
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>baseCharOffset</name>
                                                                        </name>
                                                                        += (
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        -
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        )
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>startPosition</name>
                                                                        </name>
                                                                        =
                                                                        <name>newlines</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name>load</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>newlines</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>false</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>ch</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>position</name>
                                                                            </name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                == '\n'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr><name>offset</name>++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="javadoc">/*** NEWLINE NORMALIZATION ***/</comment>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>c</name>
                                                            == '\n'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>newlines</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>lineNumber</name>
                                                                    </name>
                                                                    ++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>columnNumber</name>
                                                                    </name>
                                                                    = 1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        ==
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>count</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                                = 0
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>baseCharOffset</name>
                                                                                </name>
                                                                                += (
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                -
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                )
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>startPosition</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>count</name>
                                                                                </name>
                                                                                =
                                                                                <name>newlines</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>load</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>newlines
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>false</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <break>break;</break>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    --
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>offset</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = '\n'
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>length</name> =
                                        <init>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                -
                                                <name>offset</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>position</name>
                                            </name>
                                            ==
                                            <name><name>fCurrentEntity</name>.
                                                <name>count</name>
                                            </name>
                                            - 1
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buffer</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>ch</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>offset</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>length</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>DEBUG_BUFFER</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"]newline, "+<name>offset</name>+", "+
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>position</name>
                                                                                </name>
                                                                                +": "
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLEntityManager</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fCurrentEntity</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>println</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return <expr>true</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"]newline, "+<name>offset</name>+", "+
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    +": "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// iterate over buffer looking for delimiter</comment>
                    <label><name>OUTER</name>:
                    </label>
                    <while>while
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                &lt;
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>c</name>
                                    =
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                ++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        ==
                                        <name>charAt0</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// looks like we just hit the delimiter</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>delimOffset</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        - 1
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>1</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name>delimLen</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            ==
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>count</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    -=
                                                                    <name>i</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break OUTER;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>c</name>
                                                        =
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>ch</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    ++
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>delimiter</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            !=
                                                            <name>c</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fCurrentEntity</name>.
                                                                        <name>position</name>
                                                                    </name>
                                                                    --
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    == <name>delimOffset</name> +
                                                    <name>delimLen</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>found</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>c</name>
                                                == '\n' || (<name>external</name> &amp;&amp; <name>c</name> == '\r')
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        --
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>isInvalid</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>c</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                --
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>length</name> =
                                                                <init>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                        -
                                                                        <name>offset</name>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>columnNumber</name>
                                                                </name>
                                                                += <name>length</name> -
                                                                <name>newlines</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>buffer</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>fCurrentEntity</name>.
                                                                                    <name>ch</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>length</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return <expr>true</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </while>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>position</name>
                                    </name>
                                    -
                                    <name>offset</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            += <name>length</name> -
                            <name>newlines</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>found</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>length</name>
                                        -=
                                        <name>delimLen</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>buffer</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>ch</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>offset</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// return true if string was skipped</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")scanData: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; " + !
                                                        <name>found</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>!
                            <name>found</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanData(String,XMLString):boolean</comment>

            <comment type="javadoc">/**
                * Skips a character appearing immediately on the input.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The character is consumed only if it matches
                * the specified character.
                *
                * @param c The character to skip.
                *
                * @return Returns true if the character was skipped.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>skipChar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(skipChar, '"+(<name>char</name>)<name>c</name>+"': "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// skip character</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cc</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>cc</name>
                                ==
                                <name>c</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        ++
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            == '\n'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>lineNumber</name>
                                                    </name>
                                                    ++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>columnNumber</name>
                                                    </name>
                                                    = 1
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>columnNumber</name>
                                                    </name>
                                                    ++
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>")skipChar, '"+(<name>char</name>)<name>c</name>+"':
                                                                    "
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" -&gt; true"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        == '\n' &amp;&amp; <name>cc</name> == '\r' &amp;&amp;
                                        <call>
                                            <name><name>fCurrentEntity</name>.
                                                <name>isExternal</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// handle newlines</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                            = (<name>char</name>)
                                                            <name>cc</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>load</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>false</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                ++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                        <index>[
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    == '\n'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>lineNumber</name>
                                                </name>
                                                ++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>columnNumber</name>
                                                </name>
                                                = 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_BUFFER</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>print</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>")skipChar, '"+(<name>char</name>)<name>
                                                                            c</name>+"': "
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>XMLEntityManager</name>.
                                                                    <name>print</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fCurrentEntity</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>" -&gt; true"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// character was not skipped</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")skipChar, '"+(<name>char</name>)<name>c</name>+"': "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; false"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// skipChar(int):boolean</comment>

            <comment type="javadoc">/**
                * Skips space characters appearing immediately on the input.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed only if they are
                * space characters.
                *
                * @return Returns true if at least one space character was skipped.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.XMLChar#isSpace
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>skipSpaces</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(skipSpaces: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// skip spaces</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isSpace</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>c</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>external</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <do>do
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>boolean</name>
                                                </type>
                                                <name>entityChanged</name> =
                                                <init>
                                                    <expr>false</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// handle newlines</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '\n' || (<name>external</name> &amp;&amp; <name>c</name> == '\r')
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>lineNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            = 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                - 1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>ch</name>
                                                                            <index>[<expr>0</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = (<name>char</name>)
                                                                        <name>c</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>entityChanged</name>
                                                                        =
                                                                        <call>
                                                                            <name>load</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>1</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>true</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <name>entityChanged</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <comment type="line">// the load change the
                                                                                position to be 1,
                                                                            </comment>
                                                                            <comment type="line">// need to restore it
                                                                                when entity not changed
                                                                            </comment>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>position</name>
                                                                                    </name>
                                                                                    = 0
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>startPosition</name>
                                                                                    </name>
                                                                                    = 0
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>c</name>
                                                                == '\r' &amp;&amp;
                                                                <name>external</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// REVISIT: Does this need to be
                                                                    updated to fix the
                                                                </comment>
                                                                <comment type="line">// #x0D ^#x0A newline normalization
                                                                    problem? -Ac
                                                                </comment>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                                <index>[
                                                                                    <expr>++
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>position</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            != '\n'
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>position</name>
                                                                                    </name>
                                                                                    --
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="javadoc">/*** NEWLINE NORMALIZATION ***
                                                        else {
                                                        if (fCurrentEntity.ch[fCurrentEntity.position + 1] == '\r'
                                                        &amp;&amp; external) {
                                                        fCurrentEntity.position++;
                                                        }
                                                        }
                                                        /***/
                                                    </comment>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <comment type="line">// load more characters, if needed</comment>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>entityChanged</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        ++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>load</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isSpace</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                            =
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>")skipSpaces: "</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" -&gt; true"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// no spaces were found</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")skipSpaces: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; false"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// skipSpaces():boolean</comment>

            <comment type="javadoc">/**
                * Skips space characters appearing immediately on the input that would
                * match non-terminal S (0x09, 0x0A, 0x0D, 0x20) before end of line
                * normalization is performed. This is useful when scanning structures
                * such as the XMLDecl and TextDecl that can only contain US-ASCII
                * characters.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed only if they would
                * match non-terminal S before end of line normalization is performed.
                *
                * @return Returns true if at least one space character was skipped.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                *
                * @see org.apache.xerces.util.XMLChar#isSpace
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>skipDeclSpaces</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(skipDeclSpaces: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// skip spaces</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>ch</name>
                                        <index>[
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isSpace</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>c</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>external</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>isExternal</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <do>do
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>boolean</name>
                                                </type>
                                                <name>entityChanged</name> =
                                                <init>
                                                    <expr>false</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// handle newlines</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '\n' || (<name>external</name> &amp;&amp; <name>c</name> == '\r')
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>lineNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            = 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>position</name>
                                                                </name>
                                                                ==
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                - 1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>ch</name>
                                                                            <index>[<expr>0</expr>]
                                                                            </index>
                                                                        </name>
                                                                        = (<name>char</name>)
                                                                        <name>c</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>entityChanged</name>
                                                                        =
                                                                        <call>
                                                                            <name>load</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>1</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>true</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <name>entityChanged</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <comment type="line">// the load change the
                                                                                position to be 1,
                                                                            </comment>
                                                                            <comment type="line">// need to restore it
                                                                                when entity not changed
                                                                            </comment>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>position</name>
                                                                                    </name>
                                                                                    = 0
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>startPosition</name>
                                                                                    </name>
                                                                                    = 0
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>c</name>
                                                                == '\r' &amp;&amp;
                                                                <name>external</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// REVISIT: Does this need to be
                                                                    updated to fix the
                                                                </comment>
                                                                <comment type="line">// #x0D ^#x0A newline normalization
                                                                    problem? -Ac
                                                                </comment>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name><name>fCurrentEntity</name>.
                                                                                <name>ch</name>
                                                                                <index>[
                                                                                    <expr>++
                                                                                        <name><name>
                                                                                            fCurrentEntity</name>.
                                                                                            <name>position</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            != '\n'
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name><name>fCurrentEntity</name>.
                                                                                        <name>position</name>
                                                                                    </name>
                                                                                    --
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <comment type="javadoc">/*** NEWLINE NORMALIZATION ***
                                                        else {
                                                        if (fCurrentEntity.ch[fCurrentEntity.position + 1] == '\r'
                                                        &amp;&amp; external) {
                                                        fCurrentEntity.position++;
                                                        }
                                                        }
                                                        /***/
                                                    </comment>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>columnNumber</name>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <comment type="line">// load more characters, if needed</comment>
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>entityChanged</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        ++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    ==
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>load</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>0</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>true</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>XMLChar</name>.
                                                    <name>isSpace</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>c</name>
                                                            =
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>ch</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name><name>fCurrentEntity</name>.
                                                                            <name>position</name>
                                                                        </name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_BUFFER</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>")skipDeclSpaces: "</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>XMLEntityManager</name>.
                                                            <name>print</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fCurrentEntity</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>" -&gt; true"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// no spaces were found</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")skipDeclSpaces: "</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; false"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// skipDeclSpaces():boolean</comment>

            <comment type="javadoc">/**
                * Skips the specified string appearing immediately on the input.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; The characters are consumed only if they are
                * space characters.
                *
                * @param s The string to skip.
                *
                * @return Returns true if the string was skipped.
                *
                * @throws IOException Thrown if i/o error occurs.
                * @throws EOFException Thrown on end of file.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>skipString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(skipString, \""+<name>s</name>+"\": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// load more characters, if needed</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fCurrentEntity</name>.
                                    <name>position</name>
                                </name>
                                ==
                                <name><name>fCurrentEntity</name>.
                                    <name>count</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>load</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// skip string</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>ch</name>
                                                <index>[
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        ++
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        !=
                                        <call>
                                            <name><name>s</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>position</name>
                                                </name>
                                                -= <name>i</name> + 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_BUFFER</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>print</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>")skipString, \""+<name>s</name>+"\": "
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>XMLEntityManager</name>.
                                                                    <name>print</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fCurrentEntity</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>" -&gt; false"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>i</name>
                                        &lt; <name>length</name> - 1 &amp;&amp;
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        ==
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>count</name>
                                                                </name>
                                                                - <name>i</name> - 1
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>fCurrentEntity</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                                + 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// REVISIT: Can a string to be skipped cross an</comment>
                                        <comment type="line">// entity boundary? -Ac</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>load</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                    + 1
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>startPosition</name>
                                                            </name>
                                                            -= <name>i</name> + 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name><name>fCurrentEntity</name>.
                                                                <name>position</name>
                                                            </name>
                                                            -= <name>i</name> + 1
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>DEBUG_BUFFER</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.<name>out</name>.
                                                                                <name>print</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>")skipString, \""+<name>
                                                                                        s</name>+"\": "
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>XMLEntityManager</name>.
                                                                                <name>print</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fCurrentEntity</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.<name>out</name>.
                                                                                <name>println</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>" -&gt; false"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")skipString, \""+<name>s</name>+"\": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>" -&gt; true"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            +=
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// skipString(String):boolean</comment>

            <comment type="line">//</comment>
            <comment type="line">// Locator methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Return the public identifier for the current document event.
                * &lt;p&gt;
                * The return value is the public identifier of the document
                * entity or of the external parsed entity in which the markup
                * triggering the event appears.
                *
                * @return A string containing the public identifier, or
                * null if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPublicId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fCurrentEntity</name> != <name>null</name> &amp;&amp;
                            <name><name>fCurrentEntity</name>.
                                <name>entityLocation</name>
                            </name>
                            != <name>null</name>) ?
                            <call>
                                <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                    <name>getPublicId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            :
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPublicId():String</comment>

            <comment type="javadoc">/**
                * Return the expanded system identifier for the current document event.
                * &lt;p&gt;
                * The return value is the expanded system identifier of the document
                * entity or of the external parsed entity in which the markup
                * triggering the event appears.
                * &lt;p&gt;
                * If the system identifier is a URL, the parser must resolve it
                * fully before passing it to the application.
                *
                * @return A string containing the expanded system identifier, or null
                * if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getExpandedSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>entityLocation</name>
                                            </name>
                                            != <name>null</name> &amp;&amp;
                                            <call>
                                                <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                                    <name>getExpandedSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                                            <name>getExpandedSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// get the current entity to return something
                                                appropriate:
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getExpandedSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getExpandedSystemId():String</comment>

            <comment type="javadoc">/**
                * Return the literal system identifier for the current document event.
                * &lt;p&gt;
                * The return value is the literal system identifier of the document
                * entity or of the external parsed entity in which the markup
                * triggering the event appears.
                * &lt;p&gt;
                * @return A string containing the literal system identifier, or null
                * if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLiteralSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>fCurrentEntity</name>.
                                                <name>entityLocation</name>
                                            </name>
                                            != <name>null</name> &amp;&amp;
                                            <call>
                                                <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                                    <name>getLiteralSystemId</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.<name>entityLocation</name>.
                                                            <name>getLiteralSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// get the current entity to do it:</comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getLiteralSystemId</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLiteralSystemId():String</comment>

            <comment type="javadoc">/**
                * Returns the line number where the current document event ends.
                * &lt;p&gt;
                * &lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method
                * is intended only as an approximation for the sake of error
                * reporting; it is not intended to provide sufficient information
                * to edit the character content of the original XML document.
                * &lt;p&gt;
                * The return value is an approximation of the line number
                * in the document entity or external parsed entity where the
                * markup triggering the event appears.
                * &lt;p&gt;
                * If possible, the line position of the first character after the
                * text associated with the document event should be provided.
                * The first line in the document is line 1.
                *
                * @return The line number, or -1 if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getLineNumber</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>lineNumber</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// ask the current entity to return something
                                                appropriate:
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getLineNumber</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>-1</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// getLineNumber():int</comment>

            <comment type="javadoc">/**
                * Returns the column number where the current document event ends.
                * &lt;p&gt;
                * &lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method
                * is intended only as an approximation for the sake of error
                * reporting; it is not intended to provide sufficient information
                * to edit the character content of the original XML document.
                * &lt;p&gt;
                * The return value is an approximation of the column number
                * in the document entity or external parsed entity where the
                * markup triggering the event appears.
                * &lt;p&gt;
                * If possible, the line position of the first character after the
                * text associated with the document event should be provided.
                * The first column in each line is column 1.
                *
                * @return The column number, or -1 if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getColumnNumber</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>columnNumber</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// ask current entity to find appropriate column
                                                number
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getColumnNumber</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getColumnNumber():int</comment>

            <comment type="javadoc">/**
                * Returns the character offset where the current document event ends.
                * &lt;p&gt;
                * &lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method
                * is intended only as an approximation for the sake of error
                * reporting; it is not intended to provide sufficient information
                * to edit the character content of the original XML document.
                * &lt;p&gt;
                * The return value is an approximation of the character offset
                * in the document entity or external parsed entity where the
                * markup triggering the event appears.
                * &lt;p&gt;
                * If possible, the character offset of the first character after the
                * text associated with the document event should be provided.
                *
                * @return The character offset, or -1 if none is available.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getCharacterOffset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>baseCharOffset</name>
                                                    </name>
                                                    + (
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    -
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>startPosition</name>
                                                    </name>
                                                    )
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// ask current entity to find appropriate character
                                                offset
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getCharacterOffset</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getCharacterOffset():int</comment>

            <comment type="javadoc">/**
                * Returns the encoding of the current entity.
                * Note that, for a given entity, this value can only be
                * considered final once the encoding declaration has been read (or once it
                * has been determined that there is no such declaration) since, no encoding
                * having been specified on the XMLInputSource, the parser
                * will make an initial "guess" which could be in error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>encoding</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// ask current entity to find appropriate encoding
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getEncoding</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEncoding():String</comment>

            <comment type="javadoc">/**
                * Returns the XML version of the current entity. This will normally be the
                * value from the XML or text declaration or defaulted by the parser. Note that
                * that this value may be different than the version of the processing rules
                * applied to the current entity. For instance, an XML 1.1 document may refer to
                * XML 1.0 entities. In such a case the rules of XML 1.1 are applied to the entire
                * document. Also note that, for a given entity, this value can only be considered
                * final once the XML or text declaration has been read or once it has been
                * determined that there is no such declaration.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getXMLVersion</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fCurrentEntity</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fCurrentEntity</name>.
                                                    <name>isExternal</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>xmlVersion</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// ask current entity to find the appropriate XML
                                                version
                                            </comment>
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>getXMLVersion</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getXMLVersion():String</comment>

            <comment type="line">// allow entity manager to tell us what the current entityis:</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCurrentEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>XMLEntityManager</name>.
                                    <name>ScannedEntity</name>
                                </name>
                            </type>
                            <name>ent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCurrentEntity</name>
                            =
                            <name>ent</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// set buffer size:</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBufferSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// REVISIT: Buffer size passed to entity scanner</comment>
                    <comment type="line">// was not being kept in synch with the actual size</comment>
                    <comment type="line">// of the buffers in each scanned entity. If any</comment>
                    <comment type="line">// of the buffers were actually resized, it was possible</comment>
                    <comment type="line">// that the parser would throw an ArrayIndexOutOfBoundsException</comment>
                    <comment type="line">// for documents which contained names which are longer than</comment>
                    <comment type="line">// the current buffer size. Conceivably the buffer size passed</comment>
                    <comment type="line">// to entity scanner could be used to determine a minimum size</comment>
                    <comment type="line">// for resizing, if doubling its size is smaller than this</comment>
                    <comment type="line">// minimum. -- mrglavas</comment>
                    <expr_stmt>
                        <expr>
                            <name>fBufferSize</name>
                            =
                            <name>size</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// reset what little state we have...</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityManager</name>
                            </type>
                            <name>entityManager</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>reporter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCurrentEntity</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEntityManager</name>
                            =
                            <name>entityManager</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            =
                            <name>reporter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Loads a chunk of text.
                *
                * @param offset The offset into the character buffer to
                * read the next batch of characters.
                * @param changeEntity True if the load should change entities
                * at the end of the entity, otherwise leave
                * the current entity in place and the entity
                * boundary will be signaled by the return
                * value.
                *
                * @returns Returns true if the entity changed as a result of this
                * load operation.
                */
            </comment>
            <function>
                <type>
                    <specifier>final</specifier>
                    <name>boolean</name>
                </type>
                <name>load</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>changeEntity</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"(load, "+<name>offset</name>+": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name><name>fCurrentEntity</name>.
                                <name>baseCharOffset</name>
                            </name>
                            += (
                            <name><name>fCurrentEntity</name>.
                                <name>position</name>
                            </name>
                            -
                            <name><name>fCurrentEntity</name>.
                                <name>startPosition</name>
                            </name>
                            )
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// read characters</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>fCurrentEntity</name>.
                                        <name>mayReadChunks</name>
                                    </name>
                                    ?
                                    (
                                    <name><name>fCurrentEntity</name>.<name>ch</name>.
                                        <name>length</name>
                                    </name>
                                    - <name>offset</name>):
                                    (
                                    <name><name>XMLEntityManager</name>.
                                        <name>DEFAULT_XMLDECL_BUFFER_SIZE</name>
                                    </name>
                                    )
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>" length to try to read: "+
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fCurrentEntity</name>.<name>reader</name>.
                                            <name>read</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>ch</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>offset</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>" length actually read: "+
                                                    <name>count</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// reset count and position</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>entityChanged</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>count</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>count</name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                    = <name>count</name> +
                                                    <name>offset</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    =
                                                    <name>offset</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>fCurrentEntity</name>.
                                                        <name>startPosition</name>
                                                    </name>
                                                    =
                                                    <name>offset</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>

                        <comment type="line">// end of this entity</comment>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>count</name>
                                        </name>
                                        =
                                        <name>offset</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>position</name>
                                        </name>
                                        =
                                        <name>offset</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>fCurrentEntity</name>.
                                            <name>startPosition</name>
                                        </name>
                                        =
                                        <name>offset</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>entityChanged</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>changeEntity</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityManager</name>.
                                                            <name>endEntity</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>EOFException</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <comment type="line">// handle the trailing edges</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                        ==
                                                        <name><name>fCurrentEntity</name>.
                                                            <name>count</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>load</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>true</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_BUFFER</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>")load, "+<name>offset</name>+": "
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>XMLEntityManager</name>.
                                                <name>print</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCurrentEntity</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>entityChanged</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// load(int, boolean):boolean</comment>


            }
        </block>
    </class>
    <comment type="line">// class XMLEntityScanner</comment>

</unit>
