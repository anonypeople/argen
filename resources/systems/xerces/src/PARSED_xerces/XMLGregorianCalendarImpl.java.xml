<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\jaxp\datatype\XMLGregorianCalendarImpl.java">
    <comment type="block">/*
        * Copyright 2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>jaxp</name>.
            <name>datatype</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigDecimal</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>math</name>.
            <name>BigInteger</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Calendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>GregorianCalendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Locale</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TimeZone</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>DatatypeConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>Duration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>XMLGregorianCalendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>namespace</name>.
            <name>QName</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>DatatypeMessageFormatter</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Representation for W3C XML Schema 1.0 date/time datatypes.
        * Specifically, these date/time datatypes are
        * {@link DatatypeConstants#DATETIME dateTime},
        * {@link DatatypeConstants#TIME time},
        * {@link DatatypeConstants#DATE date},
        * {@link DatatypeConstants#GYEARMONTH gYearMonth},
        * {@link DatatypeConstants#GMONTHDAY gMonthDay},
        * {@link DatatypeConstants#GYEAR gYear},
        * {@link DatatypeConstants#GMONTH gMonth} and
        * {@link DatatypeConstants#GDAY gDay}
        * defined in the XML Namespace
        * &lt;code&gt;"http://www.w3.org/2001/XMLSchema"&lt;/code&gt;.
        * These datatypes are normatively defined in
        * &lt;a href="http://www.w3.org/TR/xmlschema-2/#dateTime"&gt;W3C XML Schema 1.0 Part 2, Section 3.2.7-14&lt;/a&gt;.&lt;/p&gt;
        *
        * &lt;p&gt;The table below defines the mapping between XML Schema 1.0
        * date/time datatype fields and this class' fields. It also summarizes
        * the value constraints for the date and time fields defined in
        * &lt;a href="http://www.w3.org/TR/xmlschema-2/#isoformats"&gt;W3C XML Schema 1.0 Part 2, Appendix D,
        * &lt;i&gt;ISO 8601 Date and Time Formats&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
        *
        * &lt;a name="datetimefieldsmapping"/&gt;
        * &lt;table border="2" rules="all" cellpadding="2"&gt;
        * &lt;thead&gt;
        * &lt;tr&gt;
        * &lt;th align="center" colspan="3"&gt;
        * Date/time datatype field mapping between XML Schema 1.0 and Java representation
        * &lt;/th&gt;
        * &lt;/tr&gt;
        * &lt;/thead&gt;
        * &lt;tbody&gt;
        * &lt;tr&gt;
        * &lt;th&gt;XML Schema 1.0&lt;br/&gt;
        * datatype&lt;br/&gt;
        * field&lt;/th&gt;
        * &lt;th&gt;Related&lt;br/&gt;XMLGregorianCalendar&lt;br/&gt;Accessor(s)&lt;/th&gt;
        * &lt;th&gt;Value Range&lt;/th&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-year"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; year &lt;/td&gt;
        * &lt;td&gt; {@link #getYear()} + {@link #getEon()} or&lt;br/&gt;
        * {@link #getEonAndYear}
        * &lt;/td&gt;
        * &lt;td&gt; &lt;code&gt;getYear()&lt;/code&gt; is a value between -(10^9-1) to (10^9)-1
        * or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;br/&gt;
        * {@link #getEon()} is high order year value in billion of years.&lt;br/&gt;
        * &lt;code&gt;getEon()&lt;/code&gt; has values greater than or equal to (10^9) or less than or equal to -(10^9).
        * A value of null indicates field is undefined.&lt;/br&gt;
        * Given that &lt;a href="http://www.w3.org/2001/05/xmlschema-errata#e2-63"&gt;XML Schema 1.0 errata&lt;/a&gt;
        states that the year zero
        * will be a valid lexical value in a future version of XML Schema,
        * this class allows the year field to be set to zero. Otherwise,
        * the year field value is handled exactly as described
        * in the errata and [ISO-8601-1988]. Note that W3C XML Schema 1.0
        * validation does not allow for the year field to have a value of zero.
        * &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-month"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; month &lt;/td&gt;
        * &lt;td&gt; {@link #getMonth()} &lt;/td&gt;
        * &lt;td&gt; 1 to 12 or {@link DatatypeConstants#FIELD_UNDEFINED} &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-day"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; day &lt;/td&gt;
        * &lt;td&gt; {@link #getDay()} &lt;/td&gt;
        * &lt;td&gt; Independent of month, max range is 1 to 31 or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;br/&gt;
        * The normative value constraint stated relative to month
        * field's value is in &lt;a href="http://www.w3.org/TR/xmlschema-2/#isoformats"&gt;W3C XML Schema 1.0 Part 2,
        Appendix D&lt;/a&gt;.
        * &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-hour"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; hour &lt;/td&gt;
        * &lt;td&gt; {@link #getHour()} &lt;/td&gt;
        * &lt;td&gt;
        * 0 to 24 or {@link DatatypeConstants#FIELD_UNDEFINED}
        * &lt;a href="http://www.w3.org/2001/05/xmlschema-errata#e2-45"&gt;For a value of 24, the minute and second
        field must be zero.&lt;/a&gt;
        * &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-minute"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; minute &lt;/td&gt;
        * &lt;td&gt; {@link #getMinute()} &lt;/td&gt;
        * &lt;td&gt; 0 to 59 or {@link DatatypeConstants#FIELD_UNDEFINED} &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;a name="datetimefield-second"/&gt;
        * &lt;tr&gt;
        * &lt;td&gt;second&lt;/td&gt;
        * &lt;td&gt;
        * {@link #getSecond()} + {@link #getMillisecond()}/1000 or&lt;br/&gt;
        * {@link #getSecond()} + {@link #getFractionalSecond()}
        * &lt;/td&gt;
        * &lt;td&gt;
        * {@link #getSecond()} from 0 to 60 or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;br/&gt;
        * &lt;i&gt;(Note: 60 only allowable for leap second.)&lt;/i&gt;&lt;br/&gt;
        * {@link #getFractionalSecond()} allows for infinite precision over the range from 0.0 to 1.0 when
        * the {@link #getSecond()} is defined.&lt;br/&gt;
        * &lt;code&gt;FractionalSecond&lt;/code&gt; is optional and has a value of &lt;code&gt;null&lt;/code&gt; when it
        is undefined.&lt;br /&gt;
        * {@link #getMillisecond()} is the convenience
        * millisecond precision of value of {@link #getFractionalSecond()}.
        * &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr id="datetimefield-timezone"&gt;
        * &lt;td&gt; timezone &lt;/td&gt;
        * &lt;td&gt; {@link #getTimezone()} &lt;/td&gt;
        * &lt;td&gt; Number of minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.
        * Value range from -14 hours (-14 * 60 minutes) to 14 hours (14 * 60 minutes).
        * &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;/tbody&gt;
        * &lt;/table&gt;
        *
        * &lt;p&gt;All maximum value space constraints listed for the fields in the table
        * above are checked by factory methods, setter methods and parse methods of
        * this class. &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown when
        * parameter's value is outside the maximum value constraint for the field.
        * Validation checks, for example, whether days in month should be
        * limited to 29, 30 or 31 days, that are dependent on the values of other
        * fields are not checked by these methods.
        * &lt;/p&gt;
        *
        * &lt;p&gt;The following operations are defined for this class:
        * &lt;ul&gt;
        * &lt;li&gt;factory methods to create instances&lt;/li&gt;
        * &lt;li&gt;accessors/mutators for independent date/time fields&lt;/li&gt;
        * &lt;li&gt;conversion between this class and W3C XML Schema 1.0 lexical representation&lt;/li&gt;
        * &lt;li&gt;conversion between this class and &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;&lt;/li&gt;
        * &lt;li&gt;partial order relation comparator method, {@link #compare(XMLGregorianCalendar)}&lt;/li&gt;
        * &lt;li&gt;{@link #equals(Object)} defined relative to {@link #compare(XMLGregorianCalendar)}.&lt;/li&gt;
        * &lt;li&gt; addition operation with {@link javax.xml.datatype.Duration}.
        * instance as defined in &lt;a href="http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes"&gt;
        * W3C XML Schema 1.0 Part 2, Appendix E, &lt;i&gt;Adding durations to dateTimes&lt;/i&gt;&lt;/a&gt;.&lt;/li&gt;
        * &lt;/ul&gt;
        * &lt;/p&gt;
        *
        * @author &lt;a href="mailto:Kohsuke.Kawaguchi@Sun.com"&gt;Kohsuke Kawaguchi&lt;/a&gt;
        * @author &lt;a href="mailto:Joseph.Fialli@Sun.com"&gt;Joseph Fialli&lt;/a&gt;
        * @version $Id: XMLGregorianCalendarImpl.java,v 1.4 2005/05/17 20:59:48 mrglavas Exp $
        * @see javax.xml.datatype.Duration
        */
    </comment>

    <class>class
        <name>XMLGregorianCalendarImpl</name>
        <super>
            <extends>extends
                <name>XMLGregorianCalendar</name>
            </extends>
            <implements>implements <name>Serializable</name>,
                <name>Cloneable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** Backup values **/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>orig_eon</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_year</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_month</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_day</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_hour</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_minute</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_second</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>orig_fracSeconds</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>orig_timezone</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Eon of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>eon</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Year of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>year</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Month of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>month</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Day of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>day</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Timezone of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; in minutes.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>timezone</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Hour of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>hour</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Minute of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>minute</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Second of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>second</name> =
                    <init>
                        <expr>
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Fractional second of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>fractionalSecond</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Constant to represent a billion.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>BILLION</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BigInteger</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"1000000000"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Obtain a pure Gregorian Calendar by calling
                * GregorianCalendar.setChange(PURE_GREGORIAN_CHANGE). &lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Date</name>
                    </type>
                    <name>PURE_GREGORIAN_CHANGE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Date</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Long</name>.
                                                <name>MIN_VALUE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Year index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>YEAR</name>   =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Month index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MONTH</name>  =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Day index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DAY</name>    =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Hour index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>HOUR</name>   =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Minute index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MINUTE</name> =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Second index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>SECOND</name> =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Second index for MIN_ and MAX_FIELD_VALUES.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MILLISECOND</name> =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Timezone index for MIN_ and MAX_FIELD_VALUES
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>TIMEZONE</name> =
                    <init>
                        <expr>7</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Minimum field values indexed by YEAR..TIMEZONE.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>MIN_FIELD_VALUE</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name><name>Integer</name>.
                                        <name>MIN_VALUE</name>
                                    </name>
                                </expr>
                                ,
                                <comment type="line">//Year field can be smaller than this,</comment>
                                <comment type="line">// only constraint on integer value of year.</comment>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>JANUARY</name>
                                    </name>
                                </expr>
                                ,
                                <expr>1</expr>,
                                <comment type="line">//day of month</comment>
                                <expr>0</expr>,
                                <comment type="line">//hour</comment>
                                <expr>0</expr>,
                                <comment type="line">//minute</comment>
                                <expr>0</expr>,
                                <comment type="line">//second</comment>
                                <expr>0</expr>,
                                <comment type="line">//millisecond</comment>
                                <expr>-14 * 60</expr>
                                <comment type="line">//timezone</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Maximum field values indexed by YEAR..TIMEZONE.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>MAX_FIELD_VALUE</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{
                                <expr>
                                    <name><name>Integer</name>.
                                        <name>MAX_VALUE</name>
                                    </name>
                                </expr>
                                ,
                                <comment type="line">// Year field can be bigger than this,</comment>
                                <comment type="line">// only constraint on integer value of year.</comment>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>DECEMBER</name>
                                    </name>
                                </expr>
                                ,
                                <expr>31</expr>,
                                <comment type="line">//day of month</comment>
                                <expr>23</expr>,
                                <comment type="line">//hour</comment>
                                <expr>59</expr>,
                                <comment type="line">//minute</comment>
                                <expr>60</expr>,
                                <comment type="line">//second (leap second allows for 60)</comment>
                                <expr>999</expr>,
                                <comment type="line">//millisecond</comment>
                                <expr>14 * 60</expr>
                                <comment type="line">//timezone</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * field names indexed by YEAR..TIMEZONE.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>
                        <name>FIELD_NAME</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{
                                <expr>"Year"</expr>,
                                <expr>"Month"</expr>,
                                <expr>"Day"</expr>,
                                <expr>"Hour"</expr>,
                                <expr>"Minute"</expr>,
                                <expr>"Second"</expr>,
                                <expr>"Millisecond"</expr>,
                                <expr>"Timezone"</expr>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Stream Unique Identifier.&lt;/p&gt;
                *
                * &lt;p&gt;TODO: Serialization should use the XML string representation as
                * the serialization format to ensure future compatibility.&lt;/p&gt;
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>1L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * &lt;p&gt;Use as a template for default field values when
                * converting to a {@link GregorianCalendar}, set to a leap
                * year date of January 1, 0400 at midnight.&lt;/p&gt;
                *
                * &lt;p&gt;Fields that are optional for an &lt;code&gt;xsd:dateTime&lt;/code&gt; instances are defaulted
                to not being set to any value.
                * &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; fields millisecond, fractional second and timezone
                return the value indicating
                * that the field is not set, {@link DatatypeConstants#FIELD_UNDEFINED} for millisecond and timezone
                * and &lt;code&gt;null&lt;/code&gt; for fractional second.&lt;/p&gt;
                *
                * @see #toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XMLGregorianCalendar</name>
                    </type>
                    <name>LEAP_YEAR_DEFAULT</name> =
                    <init>
                        <expr>
                            <call>
                                <name>createDateTime</name>
                                <argument_list>(
                                    <argument>
                                        <expr>400</expr>
                                    </argument>
                                    ,
                                    <comment type="line">//year</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>JANUARY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">//month</comment>
                                    <argument>
                                        <expr>1</expr>
                                    </argument>
                                    ,
                                    <comment type="line">// day</comment>
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <comment type="line">// hour</comment>
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <comment type="line">// minute</comment>
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <comment type="line">// second</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// milliseconds</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    <comment type="line">// timezone</comment>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Constructors</comment>

            <comment type="javadoc">/**
                * Constructs a new XMLGregorianCalendar object.
                *
                * String parsing documented by {@link #parse(String)}.
                *
                * Returns a non-null valid XMLGregorianCalendar object that holds the
                * value indicated by the lexicalRepresentation parameter.
                *
                * @param lexicalRepresentation
                * Lexical representation of one the eight
                * XML Schema date/time datatypes.
                * @throws IllegalArgumentException
                * If the given string does not conform as documented in
                * {@link #parse(String)}.
                * @throws NullPointerException
                * If the given string is null.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XMLGregorianCalendarImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lexicalRepresentation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// compute format string for this lexical representation.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>format</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lexRep</name> =
                            <init>
                                <expr>
                                    <name>lexicalRepresentation</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>NOT_FOUND</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lexRepLength</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>lexRep</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>


                    <comment type="line">// current parser needs a format string,</comment>
                    <comment type="line">// use following heuristics to figure out what xml schema date/time</comment>
                    <comment type="line">// datatype this lexical string could represent.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>lexRep</name>.
                                        <name>indexOf</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'T'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                !=
                                <name>NOT_FOUND</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// found Date Time separater, must be xsd:DateTime</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>format</name>
                                        = "%Y-%M-%DT%h:%m:%s" + "%z"
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>lexRepLength</name>
                                        &gt;= 3 &amp;&amp;
                                        <call>
                                            <name><name>lexRep</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>2</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        == ':'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// found ":", must be xsd:Time</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>format</name>
                                                = "%h:%m:%s" +"%z"
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>lexRep</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"--"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// check for GDay || GMonth || GMonthDay</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>lexRepLength</name>
                                                            &gt;= 3 &amp;&amp;
                                                            <call>
                                                                <name><name>lexRep</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>2</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == '-'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// GDAY</comment>
                                                            <comment type="line">// Fix 4971612: invalid SCCS macro
                                                                substitution in data string
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>format</name>
                                                                    = "---%D" + "%z"
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>lexRepLength</name>
                                                                    == 4 || (<name>lexRepLength</name> &gt;= 6 &amp;&amp;
                                                                    (
                                                                    <call>
                                                                        <name><name>lexRep</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>4</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    == '+' || (
                                                                    <call>
                                                                        <name><name>lexRep</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>4</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    == '-' &amp;&amp; (
                                                                    <call>
                                                                        <name><name>lexRep</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>5</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    == '-' || <name>lexRepLength</name> == 10))))
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// GMonth</comment>
                                                                    <comment type="line">// Fix 4971612: invalid SCCS
                                                                        macro substitution in data string
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>format</name>
                                                                            = "--%M--%z"
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>Parser</name>
                                                                            </type>
                                                                            <name>p</name> =
                                                                            <init>
                                                                                <expr>new
                                                                                    <call>
                                                                                        <name>Parser</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>format</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>lexRep</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <try>try
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>p</name>.
                                                                                            <name>parse</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <comment type="line">// check for validity
                                                                            </comment>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>!
                                                                                        <call>
                                                                                            <name>isValid</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <throw>throw
                                                                                            <expr>new
                                                                                                <call>
                                                                                                    <name>
                                                                                                        IllegalArgumentException
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            DatatypeMessageFormatter</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            formatMessage
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    null
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                "InvalidXGCRepresentation"
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                new
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        Object
                                                                                                                                    </name>
                                                                                                                                    <index>
                                                                                                                                        []
                                                                                                                                    </index>
                                                                                                                                </name>
                                                                                                                                <block>
                                                                                                                                    {
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            lexicalRepresentation
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                    }
                                                                                                                                </block>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        <comment
                                                                                                                type="line">
                                                                                                            //"\"" +
                                                                                                            lexicalRepresentation
                                                                                                            + "\" is not
                                                                                                            a valid
                                                                                                            representation
                                                                                                            of an XML
                                                                                                            Gregorian
                                                                                                            Calendar
                                                                                                            value."
                                                                                                        </comment>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </throw>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>save</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <return>return;</return>
                                                                            }
                                                                        </block>
                                                                        <catch>catch(
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>IllegalArgumentException
                                                                                        </name>
                                                                                    </type>
                                                                                    <name>e</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>format</name>
                                                                                        = "--%M%z"
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </catch>
                                                                    </try>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <comment type="line">// GMonthDay or invalid
                                                                        lexicalRepresentation
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>format</name>
                                                                            = "--%M-%D" + "%z"
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// check for Date || GYear | GYearMonth</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>countSeparator</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>

                                                <comment type="line">// start at index 1 to skip potential negative sign
                                                    for year.
                                                </comment>


                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>timezoneOffset</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>lexRep</name>.
                                                                        <name>indexOf</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>':'</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>timezoneOffset</name>
                                                            !=
                                                            <name>NOT_FOUND</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{

                                                            <comment type="line">// found timezone, strip it off for
                                                                distinguishing
                                                            </comment>
                                                            <comment type="line">// between Date, GYear and GYearMonth
                                                                so possible
                                                            </comment>
                                                            <comment type="line">// negative sign in timezone is not
                                                                mistaken as
                                                            </comment>
                                                            <comment type="line">// a separator.</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>lexRepLength</name>
                                                                    -= 6
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <for>for (
                                                    <init>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>i</name>=
                                                            <init>
                                                                <expr>1</expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </init>
                                                    <condition>
                                                        <expr>
                                                            <name>i</name>
                                                            &lt;
                                                            <name>lexRepLength</name>
                                                        </expr>
                                                        ;
                                                    </condition>
                                                    <incr>
                                                        <expr><name>i</name>++
                                                        </expr>
                                                    </incr>
                                                    )
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>lexRep</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    == '-'
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr><name>countSeparator</name>++
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </for>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>countSeparator</name>
                                                            == 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// GYear</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>format</name>
                                                                    = "%Y" + "%z"
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>countSeparator</name>
                                                                    == 1
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// GYearMonth</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>format</name>
                                                                            = "%Y-%M" + "%z"
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <comment type="line">// Date or invalid
                                                                        lexicalRepresentation
                                                                    </comment>
                                                                    <comment type="line">// Fix 4971612: invalid SCCS
                                                                        macro substitution in data string
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>format</name>
                                                                            = "%Y-%M-%D" + "%z"
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Parser</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Parser</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>format</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>lexRep</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p</name>.
                                    <name>parse</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// check for validity</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isValid</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"InvalidXGCRepresentation"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>lexicalRepresentation</name>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                <comment type="line">//"\"" + lexicalRepresentation + "\" is not a valid
                                                    representation of an XML Gregorian Calendar value."
                                                </comment>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>save</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>save</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>orig_eon</name>
                            =
                            <name>eon</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_year</name>
                            =
                            <name>year</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_month</name>
                            =
                            <name>month</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_day</name>
                            =
                            <name>day</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_hour</name>
                            =
                            <name>hour</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_minute</name>
                            =
                            <name>minute</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_second</name>
                            =
                            <name>second</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_fracSeconds</name>
                            =
                            <name>fractionalSecond</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>orig_timezone</name>
                            =
                            <name>timezone</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create an instance with all date/time datatype fields set to
                * {@link DatatypeConstants#FIELD_UNDEFINED} or null respectively.&lt;/p&gt;
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLGregorianCalendarImpl</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// field initializers already do the correct initialization.</comment>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Private constructor allowing for complete value spaces allowed by
                * W3C XML Schema 1.0 recommendation for xsd:dateTime and related
                * builtin datatypes. Note that &lt;code&gt;year&lt;/code&gt; parameter supports
                * arbitrarily large numbers and fractionalSecond has infinite
                * precision.&lt;/p&gt;
                *
                * @param year of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param month of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param day of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param hour of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param minute of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param second of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param fractionalSecond of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param timezone of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                *
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>XMLGregorianCalendarImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fractionalSecond</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setYear</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMonth</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setDay</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setTime</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractionalSecond</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setTimezone</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// check for validity</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isValid</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"InvalidXGCValue-fractional"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>year</name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>month</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>day</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>hour</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>minute</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>second</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <name>fractionalSecond</name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>timezone</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>

                                <comment type="javadoc">/**
                                    String yearString = "null";
                                    if (year != null) {
                                    yearString = year.toString();
                                    }
                                    String fractionalSecondString = "null";
                                    if (fractionalSecond != null) {
                                    fractionalSecondString = fractionalSecond.toString();
                                    }

                                    throw new IllegalArgumentException(
                                    "year = " + yearString
                                    + ", month = " + month
                                    + ", day = " + day
                                    + ", hour = " + hour
                                    + ", minute = " + minute
                                    + ", second = " + second
                                    + ", fractionalSecond = " + fractionalSecondString
                                    + ", timezone = " + timezone
                                    + ", is not a valid representation of an XML Gregorian Calendar value."
                                    );
                                    */
                                </comment>

                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>save</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Private constructor of value spaces that a
                * &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; instance would need to convert to an
                * &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; instance.&lt;/p&gt;
                *
                * &lt;p&gt;&lt;code&gt;XMLGregorianCalendar eon&lt;/code&gt; and
                * &lt;code&gt;fractionalSecond&lt;/code&gt; are set to &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;
                *
                * @param year of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param month of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param day of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param hour of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param minute of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param second of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param millisecond of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param timezone of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                */
            </comment>
            <constructor>
                <specifier>private</specifier>
                <name>XMLGregorianCalendarImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>millisecond</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setYear</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMonth</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setDay</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setTime</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setTimezone</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMillisecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>millisecond</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isValid</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"InvalidXGCValue-milli"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>year</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>month</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>day</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>hour</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>minute</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>second</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>millisecond</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>timezone</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                <comment type="block">/*
                                    throw new IllegalArgumentException(
                                    "year = " + year
                                    + ", month = " + month
                                    + ", day = " + day
                                    + ", hour = " + hour
                                    + ", minute = " + minute
                                    + ", second = " + second
                                    + ", millisecond = " + millisecond
                                    + ", timezone = " + timezone
                                    + ", is not a valid representation of an XML Gregorian Calendar value."
                                    );
                                    */
                                </comment>

                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>save</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * &lt;p&gt;Convert a &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; to XML Schema 1.0
                * representation.&lt;/p&gt;
                *
                * &lt;table border="2" rules="all" cellpadding="2"&gt;
                * &lt;thead&gt;
                * &lt;tr&gt;
                * &lt;th align="center" colspan="2"&gt;
                * Field by Field Conversion from
                * &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; to this class
                * &lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;/thead&gt;
                * &lt;tbody&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;javax.xml.datatype.XMLGregorianCalendar&lt;/code&gt; field&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; field&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;{@link #setYear(int)}&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;ERA == GregorianCalendar.BC ? -YEAR : YEAR&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;{@link #setMonth(int)}&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;MONTH + 1&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;{@link #setDay(int)}&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;{@link #setTime(int,int,int, BigDecimal)}&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;{@link #setTimezone(int)}&lt;i&gt;*&lt;/i&gt;&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;(ZONE_OFFSET + DST_OFFSET) / (60*1000)&lt;/code&gt;&lt;br/&gt;
                * &lt;i&gt;(in minutes)&lt;/i&gt;
                * &lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;/tbody&gt;
                * &lt;/table&gt;
                * &lt;p&gt;&lt;i&gt;*&lt;/i&gt;conversion loss of information. It is not possible to represent
                * a &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; daylight savings timezone id in the
                * XML Schema 1.0 date/time datatype representation.&lt;/p&gt;
                *
                * &lt;p&gt;To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,
                * &lt;ul&gt;
                * &lt;li&gt;when &lt;code&gt;this.getTimezone() != DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;,
                * create a &lt;code&gt;java.util.TimeZone&lt;/code&gt; with a custom timezone id
                * using the &lt;code&gt;this.getTimezone()&lt;/code&gt;.&lt;/li&gt;
                * &lt;li&gt;else use the &lt;code&gt;GregorianCalendar&lt;/code&gt; default timezone value
                * for the host is defined as specified by
                * &lt;code&gt;java.util.TimeZone.getDefault()&lt;/code&gt;.&lt;/li&gt;&lt;/p&gt;
                *
                * @param cal &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; used to create &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLGregorianCalendarImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>GregorianCalendar</name>
                            </type>
                            <name>cal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>cal</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>YEAR</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>cal</name>.
                                        <name>get</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Calendar</name>.
                                                    <name>ERA</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name><name>GregorianCalendar</name>.
                                    <name>BC</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>year</name>
                                        = -
                                        <name>year</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>setYear</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Calendar.MONTH is zero based, XSD Date datatype's month field starts
                    </comment>
                    <comment type="line">// with JANUARY as 1.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>setMonth</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>MONTH</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            + 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>setDay</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>DAY_OF_MONTH</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>setTime</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>HOUR_OF_DAY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>MINUTE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>SECOND</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>cal</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Calendar</name>.
                                                                <name>MILLISECOND</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Calendar ZONE_OFFSET and DST_OFFSET fields are in milliseconds.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offsetInMinutes</name> =
                            <init>
                                <expr>(
                                    <call>
                                        <name><name>cal</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>ZONE_OFFSET</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    +
                                    <call>
                                        <name><name>cal</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Calendar</name>.
                                                        <name>DST_OFFSET</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    ) / (60 * 1000)
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>setTimezone</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>offsetInMinutes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>save</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="line">// Factories</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java representation of XML Schema builtin datatype &lt;code&gt;dateTime&lt;/code&gt;.
                * All possible fields are specified for this factory method.&lt;/p&gt;
                *
                * @param year represents both high-order eons and low-order year.
                * @param month of &lt;code&gt;dateTime&lt;/code&gt;
                * @param day of &lt;code&gt;dateTime&lt;/code&gt;
                * @param hours of &lt;code&gt;dateTime&lt;/code&gt;
                * @param minutes of &lt;code&gt;dateTime&lt;/code&gt;
                * @param seconds of &lt;code&gt;dateTime&lt;/code&gt;
                * @param fractionalSecond value of null indicates optional field is absent.
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                *
                * @throws IllegalArgumentException if any parameter is outside value
                * constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createDateTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fractionalSecond</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractionalSecond</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java instance of XML Schema builtin datatype dateTime.&lt;/p&gt;
                *
                * @param year represents both high-order eons and low-order year.
                * @param month of &lt;code&gt;dateTime&lt;/code&gt;
                * @param day of &lt;code&gt;dateTime&lt;/code&gt;
                * @param hour of &lt;code&gt;dateTime&lt;/code&gt;
                * @param minute of &lt;code&gt;dateTime&lt;/code&gt;
                * @param second of &lt;code&gt;dateTime&lt;/code&gt;
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @throws IllegalArgumentException if any parameter is outside value constraints for the field as
                specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createDateTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">//millisecond</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    <comment type="line">//timezone</comment>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java representation of XML Schema builtin datatype &lt;code&gt;dateTime&lt;/code&gt;.
                * All possible fields are specified for this factory method.&lt;/p&gt;
                *
                * @param year represents low-order year.
                * @param month of &lt;code&gt;dateTime&lt;/code&gt;
                * @param day of &lt;code&gt;dateTime&lt;/code&gt;
                * @param hours of &lt;code&gt;dateTime&lt;/code&gt;
                * @param minutes of &lt;code&gt;dateTime&lt;/code&gt;
                * @param seconds of &lt;code&gt;dateTime&lt;/code&gt;
                * @param milliseconds of &lt;code&gt;dateTime&lt;/code&gt;. {@link DatatypeConstants#FIELD_UNDEFINED}
                indicates optional field is not set.
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @throws IllegalArgumentException if any parameter is outside value constraints for the field as
                specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createDateTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>milliseconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>milliseconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java representation of XML Schema builtin datatype &lt;code&gt;date&lt;/code&gt; or
                &lt;code&gt;g*&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;For example, an instance of &lt;code&gt;gYear&lt;/code&gt; can be created invoking this
                factory
                * with &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt; parameters set to
                * {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * @param year of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param month of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param day of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to be created.
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                *
                * @throws IllegalArgumentException if any parameter is outside value
                * constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createDate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>year</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// hour</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// minute</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// second</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// millisecond</comment>
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Create a Java instance of XML Schema builtin datatype &lt;code&gt;time&lt;/code&gt;.
                * @param hours number of hours
                * @param minutes number of minutes
                * @param seconds number of seconds
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                *
                * @throws IllegalArgumentException if any parameter is outside value
                * constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// Year</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// Month</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// Day</comment>
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">//Millisecond</comment>
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java instance of XML Schema builtin datatype time.&lt;/p&gt;
                *
                * @param hours number of hours
                * @param minutes number of minutes
                * @param seconds number of seconds
                * @param fractionalSecond value of &lt;code&gt;null&lt;/code&gt; indicates that this optional field is
                not set.
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                *
                * @throws IllegalArgumentException if any parameter is outside value
                * constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fractionalSecond</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// Year</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// month</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// day</comment>
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fractionalSecond</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Create a Java instance of XML Schema builtin datatype time.&lt;/p&gt;
                *
                * @param hours number of hours
                * @param minutes number of minutes
                * @param seconds number of seconds
                * @param milliseconds number of milliseconds
                * @param timezone offset in minutes. {@link DatatypeConstants#FIELD_UNDEFINED} indicates optional field
                is not set.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.
                *
                * @see DatatypeConstants#FIELD_UNDEFINED
                *
                * @throws IllegalArgumentException if any parameter is outside value
                * constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>createTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hours</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>seconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>milliseconds</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// year</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// month</comment>
                                    <argument>
                                        <expr>
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <comment type="line">// day</comment>
                                    <argument>
                                        <expr>
                                            <name>hours</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minutes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>seconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>milliseconds</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>timezone</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// Accessors</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Return high order component for XML Schema 1.0 dateTime datatype field for
                * &lt;code&gt;year&lt;/code&gt;.
                * &lt;code&gt;null&lt;/code&gt; if this optional part of the year field is not defined.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-year"&gt;year field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                * @return eon of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;. The value
                * returned is an integer multiple of 10^9.
                *
                * @see #getYear()
                * @see #getEonAndYear()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>BigInteger</name>
                </type>
                <name>getEon</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>eon</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return low order component for XML Schema 1.0 dateTime datatype field for
                * &lt;code&gt;year&lt;/code&gt; or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-year"&gt;year field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @return year of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                * @see #getEon()
                * @see #getEonAndYear()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getYear</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>year</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return XML Schema 1.0 dateTime datatype field for
                * &lt;code&gt;year&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-year"&gt;year field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @return sum of &lt;code&gt;eon&lt;/code&gt; and &lt;code&gt;BigInteger.valueOf(year)&lt;/code&gt;
                * when both fields are defined. When only &lt;code&gt;year&lt;/code&gt; is defined,
                * return it. When both &lt;code&gt;eon&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt; are not
                * defined, return &lt;code&gt;null&lt;/code&gt;.
                *
                * @see #getEon()
                * @see #getYear()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>BigInteger</name>
                </type>
                <name>getEonAndYear</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// both are defined</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>eon</name> !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>eon</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>BigInteger</name>.
                                                                <name>valueOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>long</name>)
                                                                        <name>year</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only year is defined</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>eon</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>BigInteger</name>.
                                                <name>valueOf</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>long</name>)
                                                        <name>year</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// neither are defined</comment>
                    <comment type="line">// or only eon is defined which is not valid without a year</comment>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return number of month or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-month"&gt;month field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @return year of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMonth</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>month</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return day in month or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-day"&gt;day field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @see #setDay(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDay</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>day</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return timezone offset in minutes or
                * {@link DatatypeConstants#FIELD_UNDEFINED} if this optional field is not defined.
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-timezone"&gt;timezone field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @see #setTimezone(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTimezone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>timezone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return hours or {@link DatatypeConstants#FIELD_UNDEFINED}.
                * Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-hour"&gt;hour field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                * @see #setTime(int, int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getHour</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>hour</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Return minutes or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;\p&gt;
                * Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-minute"&gt;minute field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                * @see #setTime(int, int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMinute</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>minute</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return seconds or {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;\p&gt;
                *
                * &lt;p&gt;Returns {@link DatatypeConstants#FIELD_UNDEFINED} if this field is not defined.
                * When this field is not defined, the optional xs:dateTime
                * fractional seconds field, represented by
                * {@link #getFractionalSecond()} and {@link #getMillisecond()},
                * must not be defined.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @return Second of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                * @see #getFractionalSecond()
                * @see #getMillisecond()
                * @see #setTime(int, int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getSecond</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>second</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * @return result of adding second and fractional second field
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>getSeconds</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>second</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>DECIMAL_ZERO</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>BigDecimal</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>long</name>)
                                                    <name>second</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fractionalSecond</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fractionalSecond</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * &lt;p&gt;Return millisecond precision of {@link #getFractionalSecond()}.&lt;\p&gt;
                *
                * &lt;p&gt;This method represents a convenience accessor to infinite
                * precision fractional second value returned by
                * {@link #getFractionalSecond()}. The returned value is the rounded
                * down to milliseconds value of
                * {@link #getFractionalSecond()}. When {@link #getFractionalSecond()}
                * returns &lt;code&gt;null&lt;/code&gt;, this method must return
                * {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints for this value are summarized in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @return Millisecond of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                * @see #getFractionalSecond()
                * @see #setTime(int, int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMillisecond</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fractionalSecond</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>FIELD_UNDEFINED</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// TODO: Non-optimal solution for now.</comment>
                                <comment type="line">// Efficient implementation would only store as BigDecimal
                                </comment>
                                <comment type="line">// when needed and millisecond otherwise.</comment>
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>fractionalSecond</name>.
                                                <name>movePointRight</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>3</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>intValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return fractional seconds.&lt;/p&gt;
                *
                * &lt;p&gt;&lt;code&gt;null&lt;/code&gt; is returned when this optional field is not defined.&lt;/p&gt;
                *
                * &lt;p&gt;Value constraints are detailed in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;This optional field can only have a defined value when the
                * xs:dateTime second field, represented by ({@link #getSecond()},
                * does not return {@link DatatypeConstants#FIELD_UNDEFINED}).&lt;/p&gt;
                *
                * @return fractional seconds of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                * @see #getSecond()
                * @see #setTime(int, int, int, BigDecimal)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>BigDecimal</name>
                </type>
                <name>getFractionalSecond</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fractionalSecond</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// setters</comment>

            <comment type="javadoc">/**
                * &lt;p&gt;Set low and high order component of XSD &lt;code&gt;dateTime&lt;/code&gt; year field.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
                *
                * @param year value constraints summarized in &lt;a href="#datetimefield-year"&gt;year field of
                date/time field mapping table&lt;/a&gt;.
                *
                * @throws IllegalArgumentException if &lt;code&gt;year&lt;/code&gt; parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setYear</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>eon</name>
                                        </name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>year</name>
                                        </name>
                                        =
                                        <name><name>DatatypeConstants</name>.
                                            <name>FIELD_UNDEFINED</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigInteger</name>
                                        </type>
                                        <name>temp</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>year</name>.
                                                        <name>remainder</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>BILLION</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>year</name>
                                        </name>
                                        =
                                        <call>
                                            <name><name>temp</name>.
                                                <name>intValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setEon</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>year</name>.
                                                                <name>subtract</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>temp</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set year of XSD &lt;code&gt;dateTime&lt;/code&gt; year field.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of
                * {@link DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * &lt;p&gt;Note: if the absolute value of the &lt;code&gt;year&lt;/code&gt; parameter
                * is less than 10^9, the eon component of the XSD year field is set to
                * &lt;code&gt;null&lt;/code&gt; by this method.&lt;/p&gt;
                *
                * @param year value constraints are summarized in &lt;a href="#datetimefield-year"&gt;year field of
                date/time field mapping table&lt;/a&gt;.
                * If year is {@link DatatypeConstants#FIELD_UNDEFINED}, then eon is set to &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setYear</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>year</name>
                                        </name>
                                        =
                                        <name><name>DatatypeConstants</name>.
                                            <name>FIELD_UNDEFINED</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>eon</name>
                                        </name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>Math</name>.
                                                <name>abs</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>year</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &lt;
                                        <call>
                                            <name><name>BILLION</name>.
                                                <name>intValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>year</name>
                                                </name>
                                                =
                                                <name>year</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>eon</name>
                                                </name>
                                                =
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>BigInteger</name>
                                                </type>
                                                <name>theYear</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>BigInteger</name>.
                                                                <name>valueOf</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>long</name>)
                                                                        <name>year</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>BigInteger</name>
                                                </type>
                                                <name>remainder</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>theYear</name>.
                                                                <name>remainder</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>BILLION</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>year</name>
                                                </name>
                                                =
                                                <call>
                                                    <name><name>remainder</name>.
                                                        <name>intValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>setEon</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>theYear</name>.
                                                                        <name>subtract</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>remainder</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set high order part of XSD &lt;code&gt;dateTime&lt;/code&gt; year field.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of
                * &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
                *
                * @param eon value constraints summarized in &lt;a href="#datetimefield-year"&gt;year field of date/time
                field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>setEon</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>eon</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>eon</name>
                                != <name>null</name> &amp;&amp;
                                <call>
                                    <name><name>eon</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>BigInteger</name>.
                                                    <name>ZERO</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Treat ZERO as field being undefined.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>eon</name>
                                        </name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>eon</name>
                                        </name>
                                        =
                                        <name>eon</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set month.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of {@link
                DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * @param month value constraints summarized in &lt;a href="#datetimefield-month"&gt;month field of
                date/time field mapping table&lt;/a&gt;.
                *
                * @throws IllegalArgumentException if &lt;code&gt;month&lt;/code&gt; parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setMonth</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>MONTH</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>month</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>month</name>
                            </name>
                            =
                            <name>month</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set days in month.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of {@link
                DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * @param day value constraints summarized in &lt;a href="#datetimefield-day"&gt;day field of date/time
                field mapping table&lt;/a&gt;.
                *
                * @throws IllegalArgumentException if &lt;code&gt;day&lt;/code&gt; parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDay</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>day</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DAY</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>day</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>day</name>
                            </name>
                            =
                            <name>day</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set the number of minutes in the timezone offset.&lt;/p&gt;
                *
                * &lt;p&gt;Unset this field by invoking the setter with a parameter value of {@link
                DatatypeConstants#FIELD_UNDEFINED}.&lt;/p&gt;
                *
                * @param offset value constraints summarized in &lt;a href="#datetimefield-timezone"&gt;
                * timezone field of date/time field mapping table&lt;/a&gt;.
                *
                * @throws IllegalArgumentException if &lt;code&gt;offset&lt;/code&gt; parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTimezone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>TIMEZONE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>offset</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>timezone</name>
                            </name>
                            =
                            <name>offset</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set time as one unit.&lt;/p&gt;
                *
                * @param hour value constraints are summarized in
                * &lt;a href="#datetimefield-hour"&gt;hour field of date/time field mapping table&lt;/a&gt;.
                * @param minute value constraints are summarized in
                * &lt;a href="#datetimefield-minute"&gt;minute field of date/time field mapping table&lt;/a&gt;.
                * @param second value constraints are summarized in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.
                *
                * @see #setTime(int, int, int, BigDecimal)
                *
                * @throws IllegalArgumentException if any parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setTime</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>checkFieldValueConstraint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>field</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IllegalArgumentException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>(<name>value</name> &lt;
                                <name>
                                    <name>MIN_FIELD_VALUE</name>
                                    <index>[
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                &amp;&amp; <name>value</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                ) ||
                                <name>value</name>
                                &gt;
                                <name>
                                    <name>MAX_FIELD_VALUE</name>
                                    <index>[
                                        <expr>
                                            <name>field</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="javadoc">/**
                                    throw new IllegalArgumentException("invalid value " + value +
                                    " for " + FIELD_NAME[field] +
                                    " field");
                                    */
                                </comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DatatypeMessageFormatter</name>.
                                                                <name>formatMessage</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>"InvalidFieldValue"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>Integer</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>value</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <name>
                                                                                    <name>FIELD_NAME</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>field</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setHour</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>HOUR</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>hour</name>
                            </name>
                            =
                            <name>hour</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setMinute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>MINUTE</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>minute</name>
                            </name>
                            =
                            <name>minute</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkFieldValueConstraint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SECOND</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>second</name>
                            </name>
                            =
                            <name>second</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Set time as one unit, including the optional infinite precison
                * fractional seconds.&lt;/p&gt;
                *
                * @param hour value constraints are summarized in
                * &lt;a href="#datetimefield-hour"&gt;hour field of date/time field mapping table&lt;/a&gt;.
                * @param minute value constraints are summarized in
                * &lt;a href="#datetimefield-minute"&gt;minute field of date/time field mapping table&lt;/a&gt;.
                * @param second value constraints are summarized in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.
                * @param fractional value of &lt;code&gt;null&lt;/code&gt; indicates this optional
                * field is not set.
                *
                * @throws IllegalArgumentException if any parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fractional</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setHour</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMinute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setFractionalSecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fractional</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * &lt;p&gt;Set time as one unit, including optional milliseconds.&lt;/p&gt;
                *
                * @param hour value constraints are summarized in
                * &lt;a href="#datetimefield-hour"&gt;hour field of date/time field mapping table&lt;/a&gt;.
                * @param minute value constraints are summarized in
                * &lt;a href="#datetimefield-minute"&gt;minute field of date/time field mapping table&lt;/a&gt;.
                * @param second value constraints are summarized in
                * &lt;a href="#datetimefield-second"&gt;second field of date/time field mapping table&lt;/a&gt;.
                * @param millisecond value of {@link DatatypeConstants#FIELD_UNDEFINED} indicates this
                * optional field is not set.
                *
                * @throws IllegalArgumentException if any parameter is
                * outside value constraints for the field as specified in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTime</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>hour</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minute</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>second</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>millisecond</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setHour</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>hour</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMinute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>minute</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>second</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMillisecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>millisecond</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// comparisons</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;Compare two instances of W3C XML Schema 1.0 date/time datatypes
                * according to partial order relation defined in
                * &lt;a href="http://www.w3.org/TR/xmlschema-2/#dateTime-order"&gt;W3C XML Schema 1.0 Part 2, Section
                3.2.7.3,
                * &lt;i&gt;Order relation on dateTime&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;&lt;code&gt;xsd:dateTime&lt;/code&gt; datatype field mapping to accessors of
                * this class are defined in
                * &lt;a href="#datetimefieldmapping"&gt;date/time field mapping table&lt;/a&gt;.&lt;/p&gt;
                *
                * @param rhs instance of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; to compare
                *
                * @return the relationship between &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; as
                * {@link DatatypeConstants#LESSER},
                * {@link DatatypeConstants#EQUAL},
                * {@link DatatypeConstants#GREATER} or
                * {@link DatatypeConstants#INDETERMINATE}.
                *
                * @throws NullPointerException if &lt;code&gt;lhs&lt;/code&gt; or &lt;code&gt;rhs&lt;/code&gt;
                * parameters are null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>compare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>rhs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//MLGregorianCalendar lhs = this;</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>INDETERMINATE</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>P</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>Q</name> =
                            <init>
                                <expr>
                                    <name>rhs</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>P</name>.
                                        <name>getTimezone</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name><name>Q</name>.
                                        <name>getTimezone</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Optimization:</comment>
                                <comment type="line">// both instances are in same timezone or</comment>
                                <comment type="line">// both are FIELD_UNDEFINED.</comment>
                                <comment type="line">// Avoid costly normalization of timezone to 'Z' time.</comment>
                                <return>return
                                    <expr>
                                        <call>
                                            <name>internalCompare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>P</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>Q</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>

                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>P</name>.
                                                <name>getTimezone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name><name>DatatypeConstants</name>.
                                            <name>FIELD_UNDEFINED</name>
                                        </name>
                                        &amp;&amp;
                                        <call>
                                            <name><name>Q</name>.
                                                <name>getTimezone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name><name>DatatypeConstants</name>.
                                            <name>FIELD_UNDEFINED</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{

                                        <comment type="line">// Both instances have different timezones.</comment>
                                        <comment type="line">// Normalize to UTC time and compare.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>P</name>
                                                = (<name>XMLGregorianCalendarImpl</name>)
                                                <call>
                                                    <name><name>P</name>.
                                                        <name>normalize</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>Q</name>
                                                = (<name>XMLGregorianCalendarImpl</name>)
                                                <call>
                                                    <name><name>Q</name>.
                                                        <name>normalize</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name>internalCompare</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>P</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>Q</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>P</name>.
                                                        <name>getTimezone</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                !=
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>P</name>.
                                                                    <name>getTimezone</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            != 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>P</name>
                                                                    = (<name>XMLGregorianCalendarImpl</name>)
                                                                    <call>
                                                                        <name><name>P</name>.
                                                                            <name>normalize</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// C. step 1</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLGregorianCalendar</name>
                                                        </type>
                                                        <name>MinQ</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>normalizeToTimezone</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>Q</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>DatatypeConstants</name>.
                                                                                    <name>MIN_TIMEZONE_OFFSET</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>result</name>
                                                        =
                                                        <call>
                                                            <name>internalCompare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>P</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>MinQ</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>result</name>
                                                            ==
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>LESSER</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// C. step 2</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLGregorianCalendar</name>
                                                        </type>
                                                        <name>MaxQ</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>normalizeToTimezone</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>Q</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>DatatypeConstants</name>.
                                                                                    <name>MAX_TIMEZONE_OFFSET</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>result</name>
                                                        =
                                                        <call>
                                                            <name>internalCompare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>P</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>MaxQ</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>result</name>
                                                            ==
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>GREATER</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <comment type="line">// C. step 3</comment>
                                                            <return>return
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>INDETERMINATE</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <comment type="line">// Q.getTimezone() !=
                                                    DatatypeConstants.FIELD_UNDEFINED
                                                </comment>
                                                <comment type="line">// P has no timezone and Q does.</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>Q</name>.
                                                                    <name>getTimezone</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            != 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>Q</name>
                                                                    = (<name>XMLGregorianCalendarImpl</name>)
                                                                    <call>
                                                                        <name>normalizeToTimezone</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>Q</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>Q</name>.
                                                                                            <name>getTimezone</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// D. step 1</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLGregorianCalendar</name>
                                                        </type>
                                                        <name>MaxP</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>normalizeToTimezone</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>P</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>DatatypeConstants</name>.
                                                                                    <name>MAX_TIMEZONE_OFFSET</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>result</name>
                                                        =
                                                        <call>
                                                            <name>internalCompare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>MaxP</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>Q</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>result</name>
                                                            ==
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>LESSER</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <comment type="line">// D. step 2</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XMLGregorianCalendar</name>
                                                        </type>
                                                        <name>MinP</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>normalizeToTimezone</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>P</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>DatatypeConstants</name>.
                                                                                    <name>MIN_TIMEZONE_OFFSET</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>result</name>
                                                        =
                                                        <call>
                                                            <name>internalCompare</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>MinP</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>Q</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>result</name>
                                                            ==
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>GREATER</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <comment type="line">// D. step 3</comment>
                                                            <return>return
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>INDETERMINATE</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Normalize this instance to UTC.&lt;/p&gt;
                *
                * &lt;p&gt;2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z&lt;/p&gt;
                * &lt;p&gt;Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>normalize</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>normalized</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>normalizeToTimezone</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>timezone</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// if timezone was undefined, leave it undefined</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getTimezone</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>normalized</name>.
                                                <name>setTimezone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DatatypeConstants</name>.
                                                            <name>FIELD_UNDEFINED</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// if milliseconds was undefined, leave it undefined</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getMillisecond</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>normalized</name>.
                                                <name>setMillisecond</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>DatatypeConstants</name>.
                                                            <name>FIELD_UNDEFINED</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>normalized</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Normalize this instance to UTC.&lt;/p&gt;
                *
                * &lt;p&gt;2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z&lt;/p&gt;
                * &lt;p&gt;Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>normalizeToTimezone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>cal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>minutes</name> =
                            <init>
                                <expr>
                                    <name>timezone</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>(<name>XMLGregorianCalendar</name>)
                                    <call>
                                        <name><name>cal</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// normalizing to UTC time negates the timezone offset before</comment>
                    <comment type="line">// addition.</comment>
                    <expr_stmt>
                        <expr>
                            <name>minutes</name>
                            = -
                            <name>minutes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>d</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DurationImpl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>minutes</name>
                                                    &gt;= 0
                                                </expr>
                                            </argument>
                                            ,
                                            <comment type="line">// isPositive</comment>
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <comment type="line">//years</comment>
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <comment type="line">//months</comment>
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <comment type="line">//days</comment>
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <comment type="line">//hours</comment>
                                            <argument>
                                                <expr>
                                                    <name>minutes</name>
                                                    &lt; 0 ? -<name>minutes</name> :
                                                    <name>minutes</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <comment type="line">// absolute</comment>
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            <comment type="line">//seconds</comment>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>d</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// set to zulu UTC time.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>setTimezone</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * &lt;p&gt;Implements Step B from http://www.w3.org/TR/xmlschema-2/#dateTime-order &lt;/p&gt;
                * @param P calendar instance with normalized timezone offset or
                * having same timezone as Q
                * @param Q calendar instance with normalized timezone offset or
                * having same timezone as P
                *
                * @return result of comparing P and Q, value of
                * {@link DatatypeConstants#EQUAL},
                * {@link DatatypeConstants#LESSER},
                * {@link DatatypeConstants#GREATER} or
                * {@link DatatypeConstants#INDETERMINATE}.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>internalCompare</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>P</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>Q</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// compare Year.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>P</name>.
                                        <name>getEon</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <call>
                                    <name><name>Q</name>.
                                        <name>getEon</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// Eon field is only equal when null.</comment>
                                <comment type="line">// optimized case for comparing year not requiring eon field.
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>compareField</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>P</name>.
                                                                <name>getYear</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>Q</name>.
                                                                <name>getYear</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>result</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>EQUAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>compareField</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>P</name>.
                                                                <name>getEonAndYear</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>Q</name>.
                                                                <name>getEonAndYear</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>result</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>EQUAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getMonth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getMonth</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>EQUAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getDay</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getDay</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>EQUAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getHour</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getHour</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>EQUAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getMinute</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getMinute</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>EQUAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getSecond</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getSecond</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>EQUAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>result</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name>compareField</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>P</name>.
                                                    <name>getFractionalSecond</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Q</name>.
                                                    <name>getFractionalSecond</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Implement Step B from
                * http://www.w3.org/TR/xmlschema-2/#dateTime-order.&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>compareField</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>Pfield</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>Qfield</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>Pfield</name>
                                ==
                                <name>Qfield</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">//fields are either equal in value or both undefined.</comment>
                                <comment type="line">// Step B. 1.1 AND optimized result of performing 1.1-1.4.
                                </comment>
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>EQUAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>Pfield</name>
                                            ==
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                            || <name>Qfield</name> ==
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Step B. 1.2</comment>
                                            <return>return
                                                <expr>
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>INDETERMINATE</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// Step B. 1.3-4.</comment>
                                            <return>return
                                                <expr>(<name>Pfield</name> &lt; <name>Qfield</name> ?
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>LESSER</name>
                                                    </name>
                                                    :
                                                    <name><name>DatatypeConstants</name>.
                                                        <name>GREATER</name>
                                                    </name>
                                                    )
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>compareField</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>Pfield</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>Qfield</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>Pfield</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>(<name>Qfield</name> == <name>null</name> ?
                                        <name><name>DatatypeConstants</name>.
                                            <name>EQUAL</name>
                                        </name>
                                        :
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                        )
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>Qfield</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>INDETERMINATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Pfield</name>.
                                    <name>compareTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>Qfield</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>compareField</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>Pfield</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>Qfield</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// optimization. especially when both arguments are null.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>Pfield</name>
                                ==
                                <name>Qfield</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>EQUAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>Pfield</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>Pfield</name>
                                        =
                                        <name>DECIMAL_ZERO</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>Qfield</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>Qfield</name>
                                        =
                                        <name>DECIMAL_ZERO</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>Pfield</name>.
                                    <name>compareTo</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>Qfield</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Indicates whether parameter &lt;code&gt;obj&lt;/code&gt; is "equal to" this one.&lt;/p&gt;
                *
                * @param obj to compare.
                *
                * @return &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;compare(this,(XMLGregorianCalendar)obj) ==
                EQUAL.&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                <name>instanceof</name>
                                <name>XMLGregorianCalendar</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>compare</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XMLGregorianCalendar</name>)
                                                        <name>obj</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ==
                                        <name><name>DatatypeConstants</name>.
                                            <name>EQUAL</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns a hash code consistent with the definition of the equals method.&lt;/p&gt;
                *
                * @return hash code of this object.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// Following two dates compare to EQUALS since in different timezones.
                    </comment>
                    <comment type="line">// 2000-01-15T12:00:00-05:00 == 2000-01-15T13:00:00-04:00</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// Must ensure both instances generate same hashcode by normalizing</comment>
                    <comment type="line">// this to UTC timezone.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>timezone</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTimezone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>timezone</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>timezone</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>gc</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>timezone</name>
                                != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>gc</name>
                                        =
                                        <call>
                                            <name>normalizeToTimezone</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>this</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getTimezone</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>gc</name>.
                                    <name>getYear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            <call>
                                <name><name>gc</name>.
                                    <name>getMonth</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            <call>
                                <name><name>gc</name>.
                                    <name>getDay</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            <call>
                                <name><name>gc</name>.
                                    <name>getHour</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            <call>
                                <name><name>gc</name>.
                                    <name>getMinute</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                            +
                            <call>
                                <name><name>gc</name>.
                                    <name>getSecond</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * &lt;p&gt;Constructs a new XMLGregorianCalendar object by
                * parsing its lexical string representation as defined in
                * &lt;a href="http://www.w3.org/TR/xmlschema-2/#dateTime-order"&gt;XML Schema 1.0 Part 2, Section
                3.2.[7-14].1,
                * &lt;i&gt;Lexical Representation&lt;/i&gt;.&lt;/a&gt;&lt;/p&gt;
                *
                * &lt;p&gt;The string representation may not have any leading and trailing whitespaces.&lt;/p&gt;
                *
                * &lt;p&gt;The parsing is done field by field so that
                * the following holds for any lexically correct string x:&lt;/p&gt;
                * &lt;pre&gt;
                * new XMLGregorianCalendar(x).toXMLFormat().equals(x)
                * &lt;/pre&gt;
                * Except for the noted lexical/canonical representation mismatches
                * listed in &lt;a href="http://www.w3.org/2001/05/xmlschema-errata#e2-45"&gt;
                * XML Schema 1.0 errata, Section 3.2.7.2&lt;/a&gt;.
                *
                * &lt;p&gt;Returns a non-null valid XMLGregorianCalendar object that holds the value
                * indicated by the lexicalRepresentation parameter.&lt;/p&gt;
                *
                * @param lexicalRepresentation Lexical representation of one the 8 XML Schema calendar datatypes.
                *
                * @return &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parsing &lt;code&gt;lexicalRepresentation&lt;/code&gt;
                parameter.
                *
                * @throws IllegalArgumentException
                * If the given string does not conform to the aforementioned
                * specification.
                * @throws NullPointerException
                * If the given string is null.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>parse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lexicalRepresentation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>lexicalRepresentation</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return the lexical representation of &lt;code&gt;this&lt;/code&gt; instance.
                * The format is specified in
                * &lt;a href="http://www.w3.org/TR/xmlschema-2/#dateTime-order"&gt;XML Schema 1.0 Part 2, Section
                3.2.[7-14].1,
                * &lt;i&gt;Lexical Representation&lt;/i&gt;".&lt;/a&gt;&lt;/p&gt;
                *
                * &lt;p&gt;Specific target lexical representation format is determined by
                * {@link #getXMLSchemaType()}.&lt;/p&gt;
                *
                * @return XML, as &lt;code&gt;String&lt;/code&gt;, representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;
                *
                * @throws java.lang.IllegalStateException if the combination of set fields
                * does not match one of the eight defined XML Schema builtin date/time datatypes.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toXMLFormat</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>typekind</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getXMLSchemaType</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>formatString</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>typekind</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>DATETIME</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>formatString</name>
                                        = "%Y-%M-%DT%h:%m:%s"+ "%z"
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>typekind</name>
                                        ==
                                        <name><name>DatatypeConstants</name>.
                                            <name>DATE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// Fix 4971612: invalid SCCS macro substitution in data
                                            string
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>formatString</name>
                                                = "%Y-%M-%D" +"%z"
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>typekind</name>
                                                ==
                                                <name><name>DatatypeConstants</name>.
                                                    <name>TIME</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>formatString</name>
                                                        = "%h:%m:%s"+ "%z"
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>typekind</name>
                                                        ==
                                                        <name><name>DatatypeConstants</name>.
                                                            <name>GMONTH</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>formatString</name>
                                                                = "--%M--%z"
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>typekind</name>
                                                                ==
                                                                <name><name>DatatypeConstants</name>.
                                                                    <name>GDAY</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// Fix 4971612: invalid SCCS macro
                                                                    substitution in data string
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>formatString</name>
                                                                        = "---%D" + "%z"
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>typekind</name>
                                                                        ==
                                                                        <name><name>DatatypeConstants</name>.
                                                                            <name>GYEAR</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>formatString</name>
                                                                                = "%Y" + "%z"
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>typekind</name>
                                                                                ==
                                                                                <name><name>DatatypeConstants</name>.
                                                                                    <name>GYEARMONTH</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">// Fix 4971612:
                                                                                    invalid SCCS macro substitution in
                                                                                    data string
                                                                                </comment>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>formatString</name>
                                                                                        = "%Y-%M" + "%z"
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>typekind</name>
                                                                                        ==
                                                                                        <name><name>
                                                                                            DatatypeConstants</name>.
                                                                                            <name>GMONTHDAY</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <comment type="line">// Fix
                                                                                            4971612: invalid SCCS macro
                                                                                            substitution in data string
                                                                                        </comment>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>formatString
                                                                                                </name>
                                                                                                = "--%M-%D" +"%z"
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>format</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>formatString</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Return the name of the XML Schema date/time type that this instance
                * maps to. Type is computed based on fields that are set.&lt;/p&gt;
                *
                * &lt;table border="2" rules="all" cellpadding="2"&gt;
                * &lt;thead&gt;
                * &lt;tr&gt;
                * &lt;th align="center" colspan="7"&gt;
                * Required fields for XML Schema 1.0 Date/Time Datatypes.&lt;br/&gt;
                * &lt;i&gt;(timezone is optional for all date/time datatypes)&lt;/i&gt;
                * &lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;/thead&gt;
                * &lt;tbody&gt;
                * &lt;tr&gt;
                * &lt;td&gt;Datatype&lt;/td&gt;
                * &lt;td&gt;year&lt;/td&gt;
                * &lt;td&gt;month&lt;/td&gt;
                * &lt;td&gt;day&lt;/td&gt;
                * &lt;td&gt;hour&lt;/td&gt;
                * &lt;td&gt;minute&lt;/td&gt;
                * &lt;td&gt;second&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#DATETIME}&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#DATE}&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#TIME}&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#GYEARMONTH}&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#GMONTHDAY}&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#GYEAR}&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#GMONTH}&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;td&gt;{@link DatatypeConstants#GDAY}&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;X&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;td&gt;&lt;/td&gt;
                * &lt;/tr&gt;
                * &lt;/tbody&gt;
                * &lt;/table&gt;
                *
                * @throws java.lang.IllegalStateException if the combination of set fields
                * does not match one of the eight defined XML Schema builtin
                * date/time datatypes.
                * @return One of the following class constants:
                * {@link DatatypeConstants#DATETIME},
                * {@link DatatypeConstants#TIME},
                * {@link DatatypeConstants#DATE},
                * {@link DatatypeConstants#GYEARMONTH},
                * {@link DatatypeConstants#GMONTHDAY},
                * {@link DatatypeConstants#GYEAR},
                * {@link DatatypeConstants#GMONTH} or
                * {@link DatatypeConstants#GDAY}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>getXMLSchemaType</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// DATETIME</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>DATETIME</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// DATE</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>DATE</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// TIME</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>TIME</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>


                    <comment type="line">// GYEARMONTH</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>GYEARMONTH</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// GMONTHDAY</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>GMONTHDAY</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// GYEAR</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>GYEAR</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// GMONTH</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>GMONTH</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// GDAY</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>month</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>day</name> !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>hour</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>minute</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                                &amp;&amp; <name>second</name> ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>DatatypeConstants</name>.
                                            <name>GDAY</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// unknown</comment>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>IllegalStateException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>getName</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            + "#getXMLSchemaType() :"
                                            +
                                            <call>
                                                <name><name>DatatypeMessageFormatter</name>.
                                                    <name>formatMessage</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>"InvalidXGCFields"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Validate instance by &lt;code&gt;getXMLSchemaType()&lt;/code&gt; constraints.
                * @return true if data values are valid.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isValid</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// since setters do not allow for invalid values,</comment>
                    <comment type="line">// (except for exceptional case of year field of zero),</comment>
                    <comment type="line">// no need to check for anything except for constraints</comment>
                    <comment type="line">// between fields.</comment>

                    <comment type="line">//check if days in month is valid. Can be dependent on leap year.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getMonth</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FEBRUARY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// years could not be set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>maxDays</name> =
                                        <init>
                                            <expr>
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigInteger</name>
                                        </type>
                                        <name>years</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getEonAndYear</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>years</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>maxDays</name>
                                                    =
                                                    <call>
                                                        <name>maximumDayInMonthFor</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getEonAndYear</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>FEBRUARY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// year is undefined, allow 29 days</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>maxDays</name>
                                                    = 29
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getDay</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt;
                                            <name>maxDays</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// http://www.w3.org/2001/05/xmlschema-errata#e2-45</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getHour</name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 24
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getMinute</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>getSecond</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// XML Schema 1.0 specification defines year value of zero as</comment>
                    <comment type="line">// invalid. Allow this class to set year field to zero</comment>
                    <comment type="line">// since XML Schema 1.0 errata states that lexical zero will</comment>
                    <comment type="line">// be allowed in next version and treated as 1 B.C.E.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>eon</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// optimize check.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>year</name>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return <expr>false</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigInteger</name>
                                        </type>
                                        <name>yearField</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getEonAndYear</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>yearField</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>result</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>compareField</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>yearField</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>BigInteger</name>.
                                                                                <name>ZERO</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>result</name>
                                                        ==
                                                        <name><name>DatatypeConstants</name>.
                                                            <name>EQUAL</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return <expr>false</expr>;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Add &lt;code&gt;duration&lt;/code&gt; to this instance.&lt;\p&gt;
                *
                * &lt;p&gt;The computation is specified in
                * &lt;a href="http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes"&gt;XML Schema 1.0 Part 2,
                Appendix E,
                * &lt;i&gt;Adding durations to dateTimes&lt;/i&gt;&gt;&lt;/a&gt;.
                * &lt;a href="#datetimefieldsmapping"&gt;date/time field mapping table&lt;/a&gt;
                * defines the mapping from XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; fields
                * to this class' representation of those fields.&lt;/p&gt;
                *
                * @param duration Duration to add to this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.
                *
                * @throws NullPointerException when &lt;code&gt;duration&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Duration</name>
                            </type>
                            <name>duration</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="block">/*
                        * Extracted from
                        * http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes
                        * to ensure implemented properly. See spec for definitions of methods
                        * used in algorithm.
                        *
                        * Given a dateTime S and a duration D, specifies how to compute a
                        * dateTime E where E is the end of the time period with start S and
                        * duration D i.e. E = S + D.
                        *
                        * The following is the precise specification.
                        * These steps must be followed in the same order.
                        * If a field in D is not specified, it is treated as if it were zero.
                        * If a field in S is not specified, it is treated in the calculation
                        * as if it were the minimum allowed value in that field, however,
                        * after the calculation is concluded, the corresponding field in
                        * E is removed (set to unspecified).
                        *
                        * Months (may be modified additionally below)
                        * temp := S[month] + D[month]
                        * E[month] := modulo(temp, 1, 13)
                        * carry := fQuotient(temp, 1, 13)
                        */
                    </comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>
                                <name>fieldUndefined</name>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>false</expr>,
                                        <expr>false</expr>,
                                        <expr>false</expr>,
                                        <expr>false</expr>,
                                        <expr>false</expr>,
                                        <expr>false</expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>signum</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>duration</name>.
                                            <name>getSign</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startMonth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getMonth</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startMonth</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>startMonth</name>
                                        =
                                        <name>
                                            <name>MIN_FIELD_VALUE</name>
                                            <index>[
                                                <expr>
                                                    <name>MONTH</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>MONTH</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>dMonths</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>sanitize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>MONTHS</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>temp</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>BigInteger</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>long</name>)
                                                    <name>startMonth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>add</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dMonths</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMonth</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>temp</name>.
                                                    <name>subtract</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>BigInteger</name>.
                                                                <name>ONE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>mod</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>TWELVE</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>intValue</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            + 1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>carry</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BigDecimal</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>temp</name>.
                                                            <name>subtract</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>BigInteger</name>.
                                                                        <name>ONE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>divide</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BigDecimal</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>TWELVE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>BigDecimal</name>.
                                                        <name>ROUND_FLOOR</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>toBigInteger</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="block">/* Years (may be modified additionally below)
                        * E[year] := S[year] + D[year] + carry
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>startYear</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEonAndYear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startYear</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>YEAR</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>startYear</name>
                                        =
                                        <name><name>BigInteger</name>.
                                            <name>ZERO</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>dYears</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>sanitize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>YEARS</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>endYear</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>startYear</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dYears</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>add</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>carry</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setYear</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>endYear</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Zone
                        * E[zone] := S[zone]
                        *
                        * no-op since adding to this, not to a new end point.
                        */
                    </comment>

                    <comment type="block">/* Seconds
                        * temp := S[second] + D[second]
                        * E[second] := modulo(temp, 60)
                        * carry := fQuotient(temp, 60)
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>startSeconds</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getSecond</name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>SECOND</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>startSeconds</name>
                                        =
                                        <name>DECIMAL_ZERO</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// seconds + fractionalSeconds</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>startSeconds</name>
                                        =
                                        <call>
                                            <name>getSeconds</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// Duration seconds is SECONDS + FRACTIONALSECONDS.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>dSeconds</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DurationImpl</name>.
                                            <name>sanitize</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>BigDecimal</name>)
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>SECONDS</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>tempBD</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>startSeconds</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dSeconds</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fQuotient</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BigDecimal</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BigDecimal</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>tempBD</name>.
                                                                            <name>toBigInteger</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>divide</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>DECIMAL_SIXTY</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>BigDecimal</name>.
                                                                        <name>ROUND_FLOOR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    .
                                                    <call>
                                                        <name>toBigInteger</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>endSeconds</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>tempBD</name>.
                                            <name>subtract</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fQuotient</name>.
                                                            <name>multiply</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>DECIMAL_SIXTY</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            =
                            <call>
                                <name><name>fQuotient</name>.
                                    <name>toBigInteger</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>endSeconds</name>.
                                                    <name>intValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>tempFracSeconds</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>endSeconds</name>.
                                            <name>subtract</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BigDecimal</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>BigInteger</name>.
                                                                            <name>valueOf</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>long</name>)
                                                                                    <call>
                                                                                        <name>getSecond</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>tempFracSeconds</name>.
                                        <name>compareTo</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>DECIMAL_ZERO</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setFractionalSecond</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>DECIMAL_ONE</name>.
                                                                <name>add</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tempFracSeconds</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name>getSecond</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            == 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSecond</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>59</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>carry</name>
                                                    =
                                                    <call>
                                                        <name><name>carry</name>.
                                                            <name>subtract</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>BigInteger</name>.
                                                                        <name>ONE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSecond</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>getSecond</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    - 1
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setFractionalSecond</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tempFracSeconds</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="block">/* Minutes
                        * temp := S[minute] + D[minute] + carry
                        * E[minute] := modulo(temp, 60)
                        * carry := fQuotient(temp, 60)
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startMinutes</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getMinute</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startMinutes</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>MINUTE</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>startMinutes</name>
                                        =
                                        <name>
                                            <name>MIN_FIELD_VALUE</name>
                                            <index>[
                                                <expr>
                                                    <name>MINUTE</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>dMinutes</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>sanitize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>MINUTES</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>temp</name>
                            =
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startMinutes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dMinutes</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setMinute</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>temp</name>.
                                                    <name>mod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>SIXTY</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>intValue</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            = new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>divide</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DECIMAL_SIXTY</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BigDecimal</name>.
                                                <name>ROUND_FLOOR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>toBigInteger</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Hours
                        * temp := S[hour] + D[hour] + carry
                        * E[hour] := modulo(temp, 24)
                        * carry := fQuotient(temp, 24)
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startHours</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getHour</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startHours</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>HOUR</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>startHours</name>
                                        =
                                        <name>
                                            <name>MIN_FIELD_VALUE</name>
                                            <index>[
                                                <expr>
                                                    <name>HOUR</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>dHours</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>sanitize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>HOURS</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>temp</name>
                            =
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>startHours</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dHours</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>add</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>carry</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setHour</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>temp</name>.
                                                    <name>mod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>TWENTY_FOUR</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>intValue</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>carry</name>
                            = new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>temp</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>divide</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>BigDecimal</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>TWENTY_FOUR</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>BigDecimal</name>.
                                                <name>ROUND_FLOOR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            .
                            <call>
                                <name>toBigInteger</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="block">/* Days
                        * if S[day] &gt; maximumDayInMonthFor(E[year], E[month])
                        * + tempDays := maximumDayInMonthFor(E[year], E[month])
                        * else if S[day] &lt; 1
                        * + tempDays := 1
                        * else
                        * + tempDays := S[day]
                        * E[day] := tempDays + D[day] + carry
                        * START LOOP
                        * + IF E[day] &lt; 1
                        * # E[day] := E[day] +
                        * maximumDayInMonthFor(E[year], E[month] - 1)
                        * # carry := -1
                        * + ELSE IF E[day] &gt; maximumDayInMonthFor(E[year], E[month])
                        * # E[day] :=
                        * E[day] - maximumDayInMonthFor(E[year], E[month])
                        * # carry := 1
                        * + ELSE EXIT LOOP
                        * + temp := E[month] + carry
                        * + E[month] := modulo(temp, 1, 13)
                        * + E[year] := E[year] + fQuotient(temp, 1, 13)
                        * + GOTO START LOOP
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>tempDays</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>startDay</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getDay</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startDay</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>DAY</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>startDay</name>
                                        =
                                        <name>
                                            <name>MIN_FIELD_VALUE</name>
                                            <index>[
                                                <expr>
                                                    <name>DAY</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>dDays</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>sanitize</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>duration</name>.
                                                            <name>getField</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>DatatypeConstants</name>.
                                                                        <name>DAYS</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>signum</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>maxDayInMonth</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>maximumDayInMonthFor</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getEonAndYear</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>getMonth</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>startDay</name>
                                &gt;
                                <name>maxDayInMonth</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>tempDays</name>
                                        =
                                        <call>
                                            <name><name>BigInteger</name>.
                                                <name>valueOf</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>maxDayInMonth</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>startDay</name>
                                        &lt; 1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>tempDays</name>
                                                =
                                                <name><name>BigInteger</name>.
                                                    <name>ONE</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>tempDays</name>
                                                =
                                                <call>
                                                    <name><name>BigInteger</name>.
                                                        <name>valueOf</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>startDay</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                        </else>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>endDays</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>tempDays</name>.
                                            <name>add</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dDays</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                    .
                                    <call>
                                        <name>add</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>carry</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>monthCarry</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>intTemp</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(<expr>true</expr>)
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>endDays</name>.
                                                <name>compareTo</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>BigInteger</name>.
                                                            <name>ONE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// calculate days in previous month, watch for month roll
                                            over
                                        </comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>BigInteger</name>
                                                </type>
                                                <name>mdimf</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>month</name>
                                                    &gt;= 2
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>mdimf</name>
                                                            =
                                                            <call>
                                                                <name><name>BigInteger</name>.
                                                                    <name>valueOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>maximumDayInMonthFor</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>getEonAndYear
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>getMonth</name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                            - 1
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// roll over to December of previous year
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>mdimf</name>
                                                            =
                                                            <call>
                                                                <name><name>BigInteger</name>.
                                                                    <name>valueOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>maximumDayInMonthFor</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>getEonAndYear
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                            .
                                                                                            <call>
                                                                                                <name>subtract</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        BigInteger</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        valueOf
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            (<name>
                                                                                                                            long</name>)
                                                                                                                            1
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>12</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>endDays</name>
                                                =
                                                <call>
                                                    <name><name>endDays</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>mdimf</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>monthCarry</name>
                                                = -1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>endDays</name>.
                                                        <name>compareTo</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>BigInteger</name>.
                                                                        <name>valueOf</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>maximumDayInMonthFor</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>
                                                                                                        getEonAndYear
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>getMonth
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                &gt; 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>endDays</name>
                                                        =
                                                        <call>
                                                            <name><name>endDays</name>.
                                                                <name>add</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>BigInteger</name>.
                                                                                <name>valueOf</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>-
                                                                                        <call>
                                                                                            <name>maximumDayInMonthFor
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                getEonAndYear
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                getMonth
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>monthCarry</name>
                                                        = 1
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                </else>
                            </if>

                            <expr_stmt>
                                <expr>
                                    <name>intTemp</name>
                                    =
                                    <call>
                                        <name>getMonth</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    +
                                    <name>monthCarry</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endMonth</name> =
                                    <init>
                                        <expr>(<name>intTemp</name> - 1) % (13 - 1)
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>quotient</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>endMonth</name>
                                        &lt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>endMonth</name>
                                                = (13 - 1) + <name>endMonth</name> + 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>quotient</name>
                                                = new
                                                <call>
                                                    <name>BigDecimal</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>intTemp</name>
                                                                - 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>divide</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>BigDecimal</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>TWELVE</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>BigDecimal</name>.
                                                                    <name>ROUND_UP</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                .
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>quotient</name>
                                                = (<name>intTemp</name> - 1) / (13 - 1)
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>endMonth</name>
                                                += 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>setMonth</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>endMonth</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>quotient</name>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>setYear</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getEonAndYear</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                .
                                                                <call>
                                                                    <name>add</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>BigInteger</name>.
                                                                                        <name>valueOf</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>quotient</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setDay</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>endDays</name>.
                                                    <name>intValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// set fields that where undefined before this addition, back to undefined.
                    </comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name>YEAR</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;=
                                <name>SECOND</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fieldUndefined</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <switch>switch
                                            <condition>(
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <case>case
                                                    <expr>
                                                        <name>YEAR</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setYear</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name>MONTH</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setMonth</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name>DAY</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setDay</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name>HOUR</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setHour</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name>MINUTE</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setMinute</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name>SECOND</name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setSecond</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>DatatypeConstants</name>.
                                                                                <name>FIELD_UNDEFINED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>setFractionalSecond</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                }
                                            </block>
                                        </switch>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>FOUR</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>4</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>HUNDRED</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>100</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>FOUR_HUNDRED</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>400</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>SIXTY</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>60</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>TWENTY_FOUR</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>24</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigInteger</name>
                    </type>
                    <name>TWELVE</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>BigInteger</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>12</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>DECIMAL_ZERO</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"0"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>DECIMAL_ONE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"1"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>BigDecimal</name>
                    </type>
                    <name>DECIMAL_SIXTY</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BigDecimal</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"60"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>
                        <name>daysInMonth</name>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>
                            <block>{ <expr>0</expr>,
                                <comment type="line">// XML Schema months start at 1.</comment>
                                <expr>31</expr>, <expr>28</expr>, <expr>31</expr>, <expr>30</expr>, <expr>
                                    31</expr>, <expr>30</expr>,
                                <expr>31</expr>, <expr>31</expr>, <expr>30</expr>, <expr>31</expr>, <expr>
                                    30</expr>, <expr>31</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>maximumDayInMonthFor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>month</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FEBRUARY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>
                                            <name>daysInMonth</name>
                                            <index>[
                                                <expr>
                                                    <name>month</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>year</name>.
                                                    <name>mod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>FOUR_HUNDRED</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>BigInteger</name>.
                                                                <name>ZERO</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ||
                                            (!
                                            <call>
                                                <name><name>year</name>.
                                                    <name>mod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>HUNDRED</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>BigInteger</name>.
                                                                <name>ZERO</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>year</name>.
                                                    <name>mod</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>FOUR</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>BigInteger</name>.
                                                                <name>ZERO</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            )
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// is a leap year.</comment>
                                            <return>return <expr>29</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>
                                                        <name>daysInMonth</name>
                                                        <index>[
                                                            <expr>
                                                                <name>month</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>int</name>
                </type>
                <name>maximumDayInMonthFor</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>year</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>month</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>month</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FEBRUARY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>
                                            <name>daysInMonth</name>
                                            <index>[
                                                <expr>
                                                    <name>month</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>((<name>year</name> %400) == 0) ||
                                            ( ((<name>year</name> % 100) != 0) &amp;&amp; ((<name>year</name> % 4) ==
                                            0))
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// is a leap year.</comment>
                                            <return>return <expr>29</expr>;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>
                                                        <name>daysInMonth</name>
                                                        <index>[
                                                            <expr>
                                                                <name><name>DatatypeConstants</name>.
                                                                    <name>FEBRUARY</name>
                                                                </name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Convert &lt;code&gt;this&lt;/code&gt; to &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                *
                * &lt;p&gt;When &lt;code&gt;this&lt;/code&gt; instance has an undefined field, this
                * conversion relies on the &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; default
                * for its corresponding field. A notable difference between
                * XML Schema 1.0 date/time datatypes and &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;
                * is that Timezone value is optional for date/time datatypes and it is
                * a required field for &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;. See javadoc
                * for &lt;code&gt;java.util.TimeZone.getDefault()&lt;/code&gt; on how the default
                * is determined. To explicitly specify the &lt;code&gt;TimeZone&lt;/code&gt;
                * instance, see
                * {@link #toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)}.&lt;/p&gt;
                *
                * &lt;table border="2" rules="all" cellpadding="2"&gt;
                * &lt;thead&gt;
                * &lt;tr&gt;
                * &lt;th align="center" colspan="2"&gt;
                * Field by Field Conversion from this class to
                * &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;
                * &lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;/thead&gt;
                * &lt;tbody&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; field&lt;/th&gt;
                * &lt;th&gt;&lt;code&gt;javax.xml.datatype.XMLGregorianCalendar&lt;/code&gt; field&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;ERA&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getEonAndYear()}&lt;code&gt;.signum() &lt; 0 ? GregorianCalendar.BC :
                GregorianCalendar.AD&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getEonAndYear()}&lt;code&gt;.abs().intValue()&lt;/code&gt;&lt;i&gt;*&lt;/i&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getMonth()}&lt;code&gt; - 1&lt;/code&gt;&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getDay()}&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getHour()} &lt; 12 : Calendar.AM : Calendar.PM&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getHour()}&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;MINUTE&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getMinute()}&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;SECOND&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getSecond()}&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;MILLISECOND&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;get millisecond order from {@link #getFractionalSecond()}&lt;i&gt;*&lt;/i&gt; &lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;tr&gt;
                * &lt;th&gt;&lt;code&gt;GregorianCalendar.setTimeZone(TimeZone)&lt;/code&gt;&lt;/th&gt;
                * &lt;th&gt;{@link #getTimezone()} formatted into Custom timezone id&lt;/th&gt;
                * &lt;/tr&gt;
                * &lt;/tbody&gt;
                * &lt;/table&gt;
                * &lt;i&gt;*&lt;/i&gt; designates possible loss of precision during the conversion due
                * to source datatype having higer precison than target datatype.
                *
                * &lt;p&gt;To ensure consistency in conversion implementations, the new
                * &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following
                * manner.
                * &lt;ul&gt;
                * &lt;li&gt;Using &lt;code&gt;timeZone&lt;/code&gt; value as defined above, create a new
                * &lt;code&gt;java.util.GregorianCalendar(timeZone,Locale.getDefault())&lt;/code&gt;.
                * &lt;/li&gt;
                * &lt;li&gt;Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}.&lt;/li&gt;
                * &lt;li&gt;Obtain a pure Gregorian Calendar by invoking
                * &lt;code&gt;GregorianCalendar.setGregorianChange(
                * new Date(Long.MIN_VALUE))&lt;/code&gt;.&lt;/li&gt;
                * &lt;li&gt;Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
                * MINUTE, SECOND and MILLISECOND are set using the method
                * &lt;code&gt;Calendar.set(int,int)&lt;/code&gt;&lt;/li&gt;
                * &lt;/ul&gt;
                * &lt;/p&gt;
                *
                * @see #toGregorianCalendar(java.util.TimeZone, java.util.Locale, XMLGregorianCalendar)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name><name>java</name>.<name>util</name>.
                        <name>GregorianCalendar</name>
                    </name>
                </type>
                <name>toGregorianCalendar</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GregorianCalendar</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>DEFAULT_TIMEZONE_OFFSET</name> =
                            <init>
                                <expr>
                                    <name><name>DatatypeConstants</name>.
                                        <name>FIELD_UNDEFINED</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>tz</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTimeZone</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>DEFAULT_TIMEZONE_OFFSET</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Locale</name>
                            </type>
                            <name>locale</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>java</name>.<name>util</name>.<name>Locale</name>.
                                            <name>getDefault</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            = new
                            <call>
                                <name>GregorianCalendar</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tz</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>locale</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>setGregorianChange</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>PURE_GREGORIAN_CHANGE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// if year( and eon) are undefined, leave default Calendar values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEonAndYear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>ERA</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>year</name>.
                                                                <name>signum</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        == -1 ?
                                                        <name><name>GregorianCalendar</name>.
                                                            <name>BC</name>
                                                        </name>
                                                        :
                                                        <name><name>GregorianCalendar</name>.
                                                            <name>AD</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>YEAR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>year</name>.
                                                                <name>abs</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>intValue</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set month if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>month</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Calendar.MONTH is zero based while XMLGregorianCalendar month
                                    field is not.
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>month</name>
                                                        - 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set day if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>day</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DAY_OF_MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>day</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set hour if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>hour</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>HOUR_OF_DAY</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>hour</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set minute if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>minute</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MINUTE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>minute</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set second if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>second</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>SECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>second</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// only set millisend if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fractionalSecond</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MILLISECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getMillisecond</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Convert &lt;code&gt;this&lt;/code&gt; along with provided parameters
                * to &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; instance.&lt;/p&gt;
                *
                * &lt;p&gt; Since XML Schema 1.0 date/time datetypes has no concept of
                * timezone ids or daylight savings timezone ids, this conversion operation
                * allows the user to explicitly specify one with
                * &lt;code&gt;timezone&lt;/code&gt; parameter.&lt;/p&gt;
                *
                * &lt;p&gt;To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,
                * &lt;ul&gt;
                * &lt;li&gt;when parameter &lt;code&gt;timeZone&lt;/code&gt; is non-null,
                * it is the timezone field.&lt;/li&gt;
                * &lt;li&gt;else when &lt;code&gt;this.getTimezone() != DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;,
                * create a &lt;code&gt;java.util.TimeZone&lt;/code&gt; with a custom timezone id
                * using the &lt;code&gt;this.getTimezone()&lt;/code&gt;.&lt;/li&gt;
                * &lt;li&gt;else when &lt;code&gt;defaults.getTimezone() != DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;,
                * create a &lt;code&gt;java.util.TimeZone&lt;/code&gt; with a custom timezone id
                * using &lt;code&gt;defaults.getTimezone()&lt;/code&gt;.&lt;/li&gt;
                * &lt;li&gt;else use the &lt;code&gt;GregorianCalendar&lt;/code&gt; default timezone value
                * for the host is definedas specified by
                * &lt;code&gt;java.util.TimeZone.getDefault()&lt;/code&gt;.&lt;/li&gt;&lt;/p&gt;
                *
                * &lt;p&gt;To ensure consistency in conversion implementations, the new
                * &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following
                * manner.
                * &lt;ul&gt;
                * &lt;li&gt;Create a new &lt;code&gt;java.util.GregorianCalendar(TimeZone,
                * Locale)&lt;/code&gt; with TimeZone set as specified above and the
                * &lt;code&gt;Locale&lt;/code&gt; parameter.
                * &lt;/li&gt;
                * &lt;li&gt;Initialize all GregorianCalendar fields by calling {(@link GegorianCalendar#clear()}.&lt;/li&gt;
                * &lt;li&gt;Obtain a pure Gregorian Calendar by invoking
                * &lt;code&gt;GregorianCalendar.setGregorianChange(
                * new Date(Long.MIN_VALUE))&lt;/code&gt;.&lt;/li&gt;
                * &lt;li&gt;Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY,
                * MINUTE, SECOND and MILLISECOND are set using the method
                * &lt;code&gt;Calendar.set(int,int)&lt;/code&gt;&lt;/li&gt;
                * &lt;/ul&gt;
                *
                * @param timezone provide Timezone. &lt;code&gt;null&lt;/code&gt; is a legal value.
                * @param aLocale provide explicit Locale. Use default GregorianCalendar locale if
                * value is &lt;code&gt;null&lt;/code&gt;.
                * @param defaults provide default field values to use when corresponding
                * field for this instance is DatatypeConstants.FIELD_UNDEFINED or null.
                * If &lt;code&gt;defaults&lt;/code&gt;is &lt;code&gt;null&lt;/code&gt; or a field
                * within the specified &lt;code&gt;defaults&lt;/code&gt; is undefined,
                * just use &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; defaults.
                * @return a java.util.GregorianCalendar conversion of this instance.
                *
                * @see #LEAP_YEAR_DEFAULT
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>GregorianCalendar</name>
                </type>
                <name>toGregorianCalendar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name><name>java</name>.<name>util</name>.
                                    <name>TimeZone</name>
                                </name>
                            </type>
                            <name>timezone</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name><name>java</name>.<name>util</name>.
                                    <name>Locale</name>
                                </name>
                            </type>
                            <name>aLocale</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLGregorianCalendar</name>
                            </type>
                            <name>defaults</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>GregorianCalendar</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>tz</name> =
                            <init>
                                <expr>
                                    <name>timezone</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>tz</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultZoneoffset</name> =
                                        <init>
                                            <expr>
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaults</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>defaultZoneoffset</name>
                                                    =
                                                    <call>
                                                        <name><name>defaults</name>.
                                                            <name>getTimezone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>tz</name>
                                        =
                                        <call>
                                            <name>getTimeZone</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>defaultZoneoffset</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>aLocale</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>aLocale</name>
                                        =
                                        <call>
                                            <name><name>java</name>.<name>util</name>.<name>Locale</name>.
                                                <name>getDefault</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            = new
                            <call>
                                <name>GregorianCalendar</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>tz</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>aLocale</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>result</name>.
                                    <name>setGregorianChange</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>PURE_GREGORIAN_CHANGE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// if year( and eon) are undefined, leave default Calendar values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>year</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getEonAndYear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>year</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>ERA</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>year</name>.
                                                                <name>signum</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        == -1 ?
                                                        <name><name>GregorianCalendar</name>.
                                                            <name>BC</name>
                                                        </name>
                                                        :
                                                        <name><name>GregorianCalendar</name>.
                                                            <name>AD</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>YEAR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>year</name>.
                                                                <name>abs</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        .
                                                        <call>
                                                            <name>intValue</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigInteger</name>
                                        </type>
                                        <name>defaultYear</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getEonAndYear</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultYear</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>ERA</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>defaultYear</name>.
                                                                            <name>signum</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    == -1 ?
                                                                    <name><name>GregorianCalendar</name>.
                                                                        <name>BC</name>
                                                                    </name>
                                                                    :
                                                                    <name><name>GregorianCalendar</name>.
                                                                        <name>AD</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>YEAR</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>defaultYear</name>.
                                                                            <name>abs</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>intValue</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set month if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>month</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// Calendar.MONTH is zero based while XMLGregorianCalendar month
                                    field is not.
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>month</name>
                                                        - 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultMonth</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getMonth</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultMonth</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Calendar.MONTH is zero based while
                                                XMLGregorianCalendar month field is not.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>MONTH</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultMonth</name>
                                                                    - 1
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set day if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>day</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>DAY_OF_MONTH</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>day</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultDay</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getDay</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultDay</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>DAY_OF_MONTH</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultDay</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set hour if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>hour</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>HOUR_OF_DAY</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>hour</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultHour</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getHour</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultHour</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>HOUR_OF_DAY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultHour</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set minute if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>minute</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MINUTE</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>minute</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultMinute</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getMinute</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultMinute</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>MINUTE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultMinute</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set second if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>second</name>
                                !=
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>SECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>second</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>defaultSecond</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getSecond</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name><name>DatatypeConstants</name>.
                                                    <name>FIELD_UNDEFINED</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultSecond</name>
                                            !=
                                            <name><name>DatatypeConstants</name>.
                                                <name>FIELD_UNDEFINED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>SECOND</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>defaultSecond</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// only set millisend if it is set</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fractionalSecond</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>result</name>.
                                                <name>set</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Calendar</name>.
                                                            <name>MILLISECOND</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getMillisecond</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// use default if set</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>BigDecimal</name>
                                        </type>
                                        <name>defaultFractionalSecond</name> =
                                        <init>
                                            <expr>(<name>defaults</name> != <name>null</name>) ?
                                                <call>
                                                    <name><name>defaults</name>.
                                                        <name>getFractionalSecond</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                :
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>defaultFractionalSecond</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>result</name>.
                                                            <name>set</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Calendar</name>.
                                                                        <name>MILLISECOND</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>defaults</name>.
                                                                            <name>getMillisecond</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Returns a &lt;code&gt;java.util.TimeZone&lt;/code&gt; for this class.&lt;/p&gt;
                *
                * &lt;p&gt;If timezone field is defined for this instance,
                * returns TimeZone initialized with custom timezone id
                * of zoneoffset. If timezone field is undefined,
                * try the defaultZoneoffset that was passed in.
                * If defaultZoneoffset is DatatypeConstants.FIELD_UNDEFINED, return
                * default timezone for this host.
                * (Same default as java.util.GregorianCalendar).&lt;/p&gt;
                *
                * @param defaultZoneoffset default zoneoffset if this zoneoffset is
                * {@link DatatypeConstants#FIELD_UNDEFINED}.
                *
                * @return TimeZone for this.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TimeZone</name>
                </type>
                <name>getTimeZone</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>defaultZoneoffset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>zoneoffset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTimezone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>zoneoffset</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>zoneoffset</name>
                                        =
                                        <name>defaultZoneoffset</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>zoneoffset</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>TimeZone</name>.
                                                <name>getDefault</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// zoneoffset is in minutes. Convert to custom timezone id
                                    format.
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>sign</name> =
                                        <init>
                                            <expr>
                                                <name>zoneoffset</name>
                                                &lt; 0 ? '-' : '+'
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>sign</name>
                                            == '-'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>zoneoffset</name>
                                                    = -
                                                    <name>zoneoffset</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>hour</name> =
                                        <init>
                                            <expr>
                                                <name>zoneoffset</name>
                                                / 60
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>minutes</name> =
                                        <init>
                                            <expr>
                                                <name>zoneoffset</name>
                                                - (<name>hour</name> * 60)
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <comment type="line">// Javadoc for java.util.TimeZone documents max length</comment>
                                <comment type="line">// for customTimezoneId is 8 when optional ':' is not used.
                                </comment>
                                <comment type="line">// Format is</comment>
                                <comment type="line">// "GMT" ('-'|''+') (digit digit?) (digit digit)?</comment>
                                <comment type="line">// hour minutes</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>StringBuffer</name>
                                        </type>
                                        <name>customTimezoneId</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>8</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>customTimezoneId</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"GMT"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>customTimezoneId</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>sign</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>customTimezoneId</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>hour</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>minutes</name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>customTimezoneId</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>minutes</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>TimeZone</name>.
                                                <name>getTimeZone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>customTimezoneId</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Creates and returns a copy of this object.&lt;/p&gt;
                *
                * @return copy of this &lt;code&gt;Object&lt;/code&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// Both this.eon and this.fractionalSecond are instances</comment>
                    <comment type="line">// of immutable classes, so they do not need to be cloned.</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>XMLGregorianCalendarImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getEonAndYear</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>month</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>day</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>hour</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>minute</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>second</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>fractionalSecond</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>timezone</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * &lt;p&gt;Unset all fields to undefined.&lt;/p&gt;
                *
                * &lt;p&gt;Set all int fields to {@link DatatypeConstants#FIELD_UNDEFINED} and reference fields
                * to null.&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>clear</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>eon</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>year</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>month</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>day</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>timezone</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// in minutes</comment>
                    <expr_stmt>
                        <expr>
                            <name>hour</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minute</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>second</name>
                            =
                            <name><name>DatatypeConstants</name>.
                                <name>FIELD_UNDEFINED</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fractionalSecond</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>millisecond</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>millisecond</name>
                                ==
                                <name><name>DatatypeConstants</name>.
                                    <name>FIELD_UNDEFINED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fractionalSecond</name>
                                        =
                                        <name>null</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>checkFieldValueConstraint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>MILLISECOND</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>millisecond</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fractionalSecond</name>
                                        = new
                                        <call>
                                            <name>BigDecimal</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>long</name>)
                                                        <name>millisecond</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>movePointLeft</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>3</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFractionalSecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>BigDecimal</name>
                            </type>
                            <name>fractional</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fractional</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>(
                                            <call>
                                                <name><name>fractional</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>DECIMAL_ZERO</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &lt; 0) ||
                                            (
                                            <call>
                                                <name><name>fractional</name>.
                                                    <name>compareTo</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>DECIMAL_ONE</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            &gt; 0)
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>IllegalArgumentException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>DatatypeMessageFormatter</name>.
                                                                            <name>formatMessage</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>null</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"InvalidFractional"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>fractional</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fractionalSecond</name>
                            </name>
                            =
                            <name>fractional</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>Parser</name>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>format</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>flen</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>vlen</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fidx</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>vidx</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <constructor>
                        <specifier>private</specifier>
                        <name>Parser</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>format</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>value</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>format</name>
                                    </name>
                                    =
                                    <name>format</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>value</name>
                                    </name>
                                    =
                                    <name>value</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>flen</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>format</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>vlen</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>value</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * &lt;p&gt;Parse a formated &lt;code&gt;String&lt;/code&gt; into an &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.&lt;/p&gt;
                        *
                        * &lt;p&gt;If &lt;code&gt;String&lt;/code&gt; is not formated as a legal &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;
                        value,
                        * an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.&lt;/p&gt;
                        *
                        * @throws IllegalArgumentException If &lt;code&gt;String&lt;/code&gt; is not formated as a legal
                        &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; value.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>parse</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>fidx</name>
                                        &lt;
                                        <name>flen</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>char</name>
                                            </type>
                                            <name>fch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>format</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr><name>fidx</name>++
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>fch</name>
                                                != '%'
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// not a meta character</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>skip</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <continue>continue;</continue>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// seen meta character. we don't do error check against the
                                        format
                                    </comment>
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>format</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr><name>fidx</name>++
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <case>case <expr>'Y'</expr> :
                                                <comment type="line">// year</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setYear</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseBigInteger</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>4</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'M'</expr> :
                                                <comment type="line">// month</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setMonth</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseInt</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'D'</expr> :
                                                <comment type="line">// days</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setDay</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseInt</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'h'</expr> :
                                                <comment type="line">// hours</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setHour</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseInt</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'m'</expr> :
                                                <comment type="line">// minutes</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setMinute</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseInt</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'s'</expr> :
                                                <comment type="line">// parse seconds.</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>setSecond</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>parseInt</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>peek</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            == '.'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setFractionalSecond</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>parseBigDecimal</name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>

                                            </case>
                                            <case>case <expr>'z'</expr> :
                                                <comment type="line">// time zone. missing, 'Z', or [+-]nn:nn</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>char</name>
                                                        </type>
                                                        <name>vch</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name>peek</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>vch</name>
                                                            == 'Z'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr><name>vidx</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>setTimezone</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>vch</name>
                                                                    == '+' || <name>vch</name> == '-'
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr><name>vidx</name>++
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>h</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>parseInt</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>2</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>2</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>skip</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>':'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <decl_stmt>
                                                                        <decl>
                                                                            <type>
                                                                                <name>int</name>
                                                                            </type>
                                                                            <name>m</name> =
                                                                            <init>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>parseInt</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>2</expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>2</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </init>
                                                                        </decl>
                                                                        ;
                                                                    </decl_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>setTimezone</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>(<name>h</name> * 60
                                                                                            + <name>m</name>) * (<name>
                                                                                                vch
                                                                                            </name> == '+' ? 1 : -1)
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                    </else>
                                                </if>

                                                <break>break;</break>

                                            </case>
                                            <default>default :
                                                <comment type="line">// illegal meta character. impossible.</comment>
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>InternalError</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>
                            </while>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>vidx</name>
                                        !=
                                        <name>vlen</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// some tokens are left in the input</comment>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">//,vidx);</comment>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>char</name>
                        </type>
                        <name>peek</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>vidx</name>
                                        ==
                                        <name>vlen</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>(<name>char</name>) -1
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>value</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>vidx</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>char</name>
                        </type>
                        <name>read</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>vidx</name>
                                        ==
                                        <name>vlen</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">//,vidx);</comment>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>value</name>.
                                            <name>charAt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr><name>vidx</name>++
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>skip</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>read</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        !=
                                        <name>ch</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">//,vidx-1);</comment>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>parseInt</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>minDigits</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>maxDigits</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>vstart</name> =
                                    <init>
                                        <expr>
                                            <name>vidx</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isDigit</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>peek</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp; (<name>vidx</name> - <name>vstart</name>) &lt;=
                                        <name>maxDigits</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr><name>vidx</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>(<name>vidx</name> - <name>vstart</name>) &lt;
                                        <name>minDigits</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// we are expecting more digits</comment>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">//,vidx);</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// NumberFormatException is IllegalArgumentException</comment>
                            <comment type="line">// try {</comment>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>Integer</name>.
                                            <name>parseInt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>vstart</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>vidx</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            <comment type="line">// } catch( NumberFormatException e ) {</comment>
                            <comment type="line">// // if the value is too long for int, NumberFormatException is
                                thrown
                            </comment>
                            <comment type="line">// throw new IllegalArgumentException(value,vstart);</comment>
                            <comment type="line">// }</comment>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>BigInteger</name>
                        </type>
                        <name>parseBigInteger</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>minDigits</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>vstart</name> =
                                    <init>
                                        <expr>
                                            <name>vidx</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// skip leading negative, if it exists</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>peek</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == '-'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr><name>vidx</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isDigit</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>peek</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr><name>vidx</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>(<name>vidx</name> - <name>vstart</name>) &lt;
                                        <name>minDigits</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// we are expecting more digits</comment>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">//,vidx);</comment>
                                        }
                                    </block>
                                </then>
                            </if>

                            <return>return
                                <expr>new
                                    <call>
                                        <name>BigInteger</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>vstart</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>vidx</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>BigDecimal</name>
                        </type>
                        <name>parseBigDecimal</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IllegalArgumentException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>vstart</name> =
                                    <init>
                                        <expr>
                                            <name>vidx</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>peek</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        == '.'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr><name>vidx</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </else>
                            </if>
                            <while>while
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isDigit</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>peek</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr><name>vidx</name>++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>BigDecimal</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>substring</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>vstart</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>vidx</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>isDigit</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>'0' &lt;= <name>ch</name> &amp;&amp; <name>ch</name> &lt;= '9'
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>format</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>format</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buf</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fidx</name>=
                            <init>
                                <expr>0</expr>
                            </init>
                            ,<name>flen</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>format</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr><name>fidx</name>&lt;
                                <name>flen</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>fch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>format</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr><name>fidx</name>++
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr><name>fch</name>!='%'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// not a meta char</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fch</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>format</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr><name>fidx</name>++
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case <expr>'Y'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getEonAndYear</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>4</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'M'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getMonth</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>2</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'D'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getDay</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>2</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'h'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getHour</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>2</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'m'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getMinute</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>2</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'s'</expr>:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>printNumber</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>buf</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getSecond</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>2</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>getFractionalSecond</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>frac</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name>getFractionalSecond</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    .
                                                                    <call>
                                                                        <name>toString</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <comment type="line">//skip leading zero.</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buf</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>frac</name>.
                                                                                    <name>substring</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>1</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>frac</name>.
                                                                                                    <name>length</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <break>break;</break>
                                    </case>
                                    <case>case <expr>'z'</expr>:
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>offset</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>getTimezone</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>offset</name>
                                                    == 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>buf</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>'Z'</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>offset</name>
                                                            !=
                                                            <name><name>DatatypeConstants</name>.
                                                                <name>FIELD_UNDEFINED</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr><name>offset</name>&lt;0
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>buf</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>'-'</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>offset</name>
                                                                                *= -1
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>buf</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>'+'</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>printNumber</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>buf</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr><name>offset</name>/60
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>2</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>buf</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>':'</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>printNumber</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>buf</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr><name>offset</name>%60
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>2</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        <break>break;</break>
                                    </case>
                                    <default>default:
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InternalError</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        <comment type="line">// impossible</comment>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </while>

                    <return>return
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Prints an integer as a String.
                *
                * @param out
                * The formatted string will be appended into this buffer.
                * @param number
                * The integer to be printed.
                * @param nDigits
                * The field will be printed by using at least this
                * number of digits. For example, 5 will be printed as "0005"
                * if nDigits==4.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>printNumber</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>number</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nDigits</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>String</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>number</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>s</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>nDigits</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <call>
                                    <name><name>out</name>.
                                        <name>append</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'0'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Prints an BigInteger as a String.
                *
                * @param out
                * The formatted string will be appended into this buffer.
                * @param number
                * The integer to be printed.
                * @param nDigits
                * The field will be printed by using at least this
                * number of digits. For example, 5 will be printed as "0005"
                * if nDigits==4.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>printNumber</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>out</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>BigInteger</name>
                            </type>
                            <name>number</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>nDigits</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>number</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>
                                        <call>
                                            <name><name>s</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>nDigits</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <call>
                                    <name><name>out</name>.
                                        <name>append</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'0'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>out</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compute &lt;code&gt;value*signum&lt;/code&gt; where value==null is treated as
                * value==0.
                * @return non-null {@link BigInteger}.
                */
            </comment>
            <function>
                <type>
                    <specifier>static</specifier>
                    <name>BigInteger</name>
                </type>
                <name>sanitize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Number</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>signum</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>signum</name>
                                == 0 || <name>value</name> ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>BigInteger</name>.
                                            <name>ZERO</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>signum</name> &lt; 0)? ((<name>BigInteger</name>)<name>value</name>).
                            <call>
                                <name>negate</name>
                                <argument_list>()</argument_list>
                            </call>
                            : (<name>BigInteger</name>)
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/** &lt;p&gt;&lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of
                existing
                * &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;s thus saving resources associated
                * with the creation of new &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;s.&lt;/p&gt;
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>eon</name>
                            =
                            <name>orig_eon</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>year</name>
                            =
                            <name>orig_year</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>month</name>
                            =
                            <name>orig_month</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>day</name>
                            =
                            <name>orig_day</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>hour</name>
                            =
                            <name>orig_hour</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>minute</name>
                            =
                            <name>orig_minute</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>second</name>
                            =
                            <name>orig_second</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fractionalSecond</name>
                            =
                            <name>orig_fracSeconds</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>timezone</name>
                            =
                            <name>orig_timezone</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            }
        </block>
    </class>

</unit>
