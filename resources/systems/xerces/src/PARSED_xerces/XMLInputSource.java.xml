<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xni\parser\XMLInputSource.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>parser</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>InputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class represents an input source for an XML document. The
        * basic properties of an input source are the following:
        * &lt;ul&gt;
        * &lt;li&gt;public identifier&lt;/li&gt;
        * &lt;li&gt;system identifier&lt;/li&gt;
        * &lt;li&gt;byte stream or character stream&lt;/li&gt;
        * &lt;li&gt;
        * &lt;/ul&gt;
        *
        * @author Andy Clark, IBM
        *
        * @version $Id: XMLInputSource.java,v 1.5 2004/02/24 23:15:56 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XMLInputSource</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Public identifier. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fPublicId</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** System identifier. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fSystemId</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Base system identifier. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fBaseSystemId</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Byte stream. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>InputStream</name>
                    </type>
                    <name>fByteStream</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Character stream. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Reader</name>
                    </type>
                    <name>fCharStream</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Encoding. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fEncoding</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Constructs an input source from just the public and system
                * identifiers, leaving resolution of the entity and opening of
                * the input stream up to the caller.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fPublicId</name>
                            =
                            <name>publicId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSystemId</name>
                            =
                            <name>systemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBaseSystemId</name>
                            =
                            <name>baseSystemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a XMLResourceIdentifier
                * object, leaving resolution of the entity and opening of
                * the input stream up to the caller.
                *
                * @param resourceIdentifier the XMLResourceIdentifier containing the information
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>resourceIdentifier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name>fPublicId</name>
                            =
                            <call>
                                <name><name>resourceIdentifier</name>.
                                    <name>getPublicId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSystemId</name>
                            =
                            <call>
                                <name><name>resourceIdentifier</name>.
                                    <name>getLiteralSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBaseSystemId</name>
                            =
                            <call>
                                <name><name>resourceIdentifier</name>.
                                    <name>getBaseSystemId</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(XMLResourceIdentifier)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a byte stream.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                * @param byteStream The byte stream.
                * @param encoding The encoding of the byte stream, if known.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>byteStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fPublicId</name>
                            =
                            <name>publicId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSystemId</name>
                            =
                            <name>systemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBaseSystemId</name>
                            =
                            <name>baseSystemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fByteStream</name>
                            =
                            <name>byteStream</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEncoding</name>
                            =
                            <name>encoding</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String,InputStream,String)</comment>

            <comment type="javadoc">/**
                * Constructs an input source from a character stream.
                *
                * @param publicId The public identifier, if known.
                * @param systemId The system identifier. This value should
                * always be set, if possible, and can be
                * relative or absolute. If the system identifier
                * is relative, then the base system identifier
                * should be set.
                * @param baseSystemId The base system identifier. This value should
                * always be set to the fully expanded URI of the
                * base system identifier, if possible.
                * @param charStream The character stream.
                * @param encoding The original encoding of the byte stream
                * used by the reader, if known.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XMLInputSource</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Reader</name>
                            </type>
                            <name>charStream</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fPublicId</name>
                            =
                            <name>publicId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSystemId</name>
                            =
                            <name>systemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fBaseSystemId</name>
                            =
                            <name>baseSystemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCharStream</name>
                            =
                            <name>charStream</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEncoding</name>
                            =
                            <name>encoding</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,String,String,Reader,String)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Sets the public identifier.
                *
                * @param publicId The new public identifier.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPublicId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fPublicId</name>
                            =
                            <name>publicId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setPublicId(String)</comment>

            <comment type="javadoc">/** Returns the public identifier. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getPublicId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fPublicId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getPublicId():String</comment>

            <comment type="javadoc">/**
                * Sets the system identifier.
                *
                * @param systemId The new system identifier.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSystemId</name>
                            =
                            <name>systemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setSystemId(String)</comment>

            <comment type="javadoc">/** Returns the system identifier. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fSystemId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getSystemId():String</comment>

            <comment type="javadoc">/**
                * Sets the base system identifier.
                *
                * @param baseSystemId The new base system identifier.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSystemId</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>baseSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fBaseSystemId</name>
                            =
                            <name>baseSystemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setBaseSystemId(String)</comment>

            <comment type="javadoc">/** Returns the base system identifier. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getBaseSystemId</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fBaseSystemId</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getBaseSystemId():String</comment>

            <comment type="javadoc">/**
                * Sets the byte stream. If the byte stream is not already opened
                * when this object is instantiated, then the code that opens the
                * stream should also set the byte stream on this object. Also, if
                * the encoding is auto-detected, then the encoding should also be
                * set on this object.
                *
                * @param byteStream The new byte stream.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setByteStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>InputStream</name>
                            </type>
                            <name>byteStream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fByteStream</name>
                            =
                            <name>byteStream</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setByteStream(InputSource)</comment>

            <comment type="javadoc">/** Returns the byte stream. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>InputStream</name>
                </type>
                <name>getByteStream</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fByteStream</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getByteStream():InputStream</comment>

            <comment type="javadoc">/**
                * Sets the character stream. If the character stream is not already
                * opened when this object is instantiated, then the code that opens
                * the stream should also set the character stream on this object.
                * Also, the encoding of the byte stream used by the reader should
                * also be set on this object, if known.
                *
                * @param charStream The new character stream.
                *
                * @see #setEncoding
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCharacterStream</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Reader</name>
                            </type>
                            <name>charStream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fCharStream</name>
                            =
                            <name>charStream</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setCharacterStream(Reader)</comment>

            <comment type="javadoc">/** Returns the character stream. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Reader</name>
                </type>
                <name>getCharacterStream</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fCharStream</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getCharacterStream():Reader</comment>

            <comment type="javadoc">/**
                * Sets the encoding of the stream.
                *
                * @param encoding The new encoding.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEncoding</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEncoding</name>
                            =
                            <name>encoding</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <comment type="line">// setEncoding(String)</comment>

            <comment type="javadoc">/** Returns the encoding of the stream, or null if not known. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getEncoding</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fEncoding</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getEncoding():String</comment>

            }
        </block>
    </class>
    <comment type="line">// class XMLInputSource</comment>
</unit>
