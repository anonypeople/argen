<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\XMLScanner.java">
    <comment type="block">/*
        * Copyright 1999-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>impl</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLResourceIdentifierImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLStringBuffer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLResourceIdentifier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class is responsible for holding scanning methods common to
        * scanning the XML document structure and content as well as the DTD
        * structure and content. Both XMLDocumentScanner and XMLDTDScanner inherit
        * from this base class.
        *
        * &lt;p&gt;
        * This component requires the following features and properties from the
        * component manager that uses it:
        * &lt;ul&gt;
        * &lt;li&gt;http://xml.org/sax/features/validation&lt;/li&gt;
        * &lt;li&gt;http://xml.org/sax/features/namespaces&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/features/scanner/notify-char-refs&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/symbol-table&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/error-reporter&lt;/li&gt;
        * &lt;li&gt;http://apache.org/xml/properties/internal/entity-manager&lt;/li&gt;
        * &lt;/ul&gt;
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        * @author Arnaud Le Hors, IBM
        * @author Eric Ye, IBM
        *
        * @version $Id: XMLScanner.java,v 1.51 2004/10/04 21:45:48 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class
        <name>XMLScanner</name>
        <super>
            <implements>implements
                <name>XMLComponent</name>
            </implements>
        </super>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="line">// feature identifiers</comment>

            <comment type="javadoc">/** Feature identifier: validation. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>VALIDATION</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>VALIDATION_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NAMESPACES</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>SAX_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NAMESPACES_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Feature identifier: notify character references. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>NOTIFY_CHAR_REFS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>NOTIFY_CHAR_REFS_FEATURE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>PARSER_SETTINGS</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_FEATURE_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>PARSER_SETTINGS</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENTITY_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ENTITY_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// debugging</comment>

            <comment type="javadoc">/** Debug attribute normalization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ATTR_NORMALIZATION</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>


            <comment type="line">// features</comment>

            <comment type="javadoc">/**
                * Validation. This feature identifier is:
                * http://xml.org/sax/features/validation
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fValidation</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Namespaces. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNamespaces</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Character references notification. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fNotifyCharRefs</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Internal parser-settings feature */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fParserSettings</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// properties</comment>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityManager</name>
                    </type>
                    <name>fEntityManager</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// protected data</comment>

            <comment type="javadoc">/** Entity scanner. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityScanner</name>
                    </type>
                    <name>fEntityScanner</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity depth. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                    </type>
                    <name>fEntityDepth</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Literal value of the last character refence scanned. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fCharRefLiteral</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Scanning attribute. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fScanningAttribute</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Report entity boundary. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fReportEntity</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// symbols</comment>

            <comment type="javadoc">/** Symbol: "version". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fVersionSymbol</name> =
                    <init>
                        <expr>"version".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "encoding". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fEncodingSymbol</name> =
                    <init>
                        <expr>"encoding".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "standalone". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fStandaloneSymbol</name> =
                    <init>
                        <expr>"standalone".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "amp". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fAmpSymbol</name> =
                    <init>
                        <expr>"amp".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "lt". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fLtSymbol</name> =
                    <init>
                        <expr>"lt".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "gt". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fGtSymbol</name> =
                    <init>
                        <expr>"gt".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "quot". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fQuotSymbol</name> =
                    <init>
                        <expr>"quot".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol: "apos". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fAposSymbol</name> =
                    <init>
                        <expr>"apos".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temporary variables</comment>

            <comment type="line">// NOTE: These objects are private to help prevent accidental modification</comment>
            <comment type="line">// of values by a subclass. If there were protected *and* the sub-</comment>
            <comment type="line">// modified the values, it would be difficult to track down the real</comment>
            <comment type="line">// cause of the bug. By making these private, we avoid this</comment>
            <comment type="line">// possibility.</comment>

            <comment type="javadoc">/** String. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLString</name>
                    </type>
                    <name>fString</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLString</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** String buffer. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLStringBuffer</name>
                    </type>
                    <name>fStringBuffer</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLStringBuffer</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** String buffer. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLStringBuffer</name>
                    </type>
                    <name>fStringBuffer2</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLStringBuffer</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** String buffer. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLStringBuffer</name>
                    </type>
                    <name>fStringBuffer3</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLStringBuffer</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temporary location for Resource identification information.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLResourceIdentifierImpl</name>
                    </type>
                    <name>fResourceIdentifier</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLResourceIdentifierImpl</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// XMLComponent methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                *
                *
                * @param componentManager The component manager.
                *
                * @throws SAXException Throws exception if required features and
                * properties cannot be found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fParserSettings</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>PARSER_SETTINGS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fParserSettings</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fParserSettings</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// parser settings have not been changed</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>init</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Xerces properties</comment>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            = (<name>SymbolTable</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SYMBOL_TABLE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            = (<name>XMLErrorReporter</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ERROR_REPORTER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEntityManager</name>
                            = (<name>XMLEntityManager</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ENTITY_MANAGER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// sax features</comment>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fValidation</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>VALIDATION</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidation</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fNamespaces</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>NAMESPACES</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNamespaces</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fNotifyCharRefs</name>
                                    =
                                    <call>
                                        <name><name>componentManager</name>.
                                            <name>getFeature</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>NOTIFY_CHAR_REFS</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLConfigurationException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNotifyCharRefs</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>init</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="javadoc">/**
                * Sets the value of a property during parsing.
                *
                * @param propertyId
                * @param value
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Xerces properties</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>propertyId</name>.
                                        <name>startsWith</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XERCES_PROPERTY_PREFIX</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>suffixLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>propertyId</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                -
                                                <call>
                                                    <name><name>Constants</name>.<name>XERCES_PROPERTY_PREFIX</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>suffixLength</name>
                                            ==
                                            <call>
                                                <name><name>Constants</name>.<name>SYMBOL_TABLE_PROPERTY</name>.
                                                    <name>length</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp;
                                            <call>
                                                <name><name>propertyId</name>.
                                                    <name>endsWith</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>Constants</name>.
                                                                <name>SYMBOL_TABLE_PROPERTY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                    = (<name>SymbolTable</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>suffixLength</name>
                                                    ==
                                                    <call>
                                                        <name><name>Constants</name>.<name>
                                                            ERROR_REPORTER_PROPERTY</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &amp;&amp;
                                                    <call>
                                                        <name><name>propertyId</name>.
                                                            <name>endsWith</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>Constants</name>.
                                                                        <name>ERROR_REPORTER_PROPERTY</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fErrorReporter</name>
                                                            = (<name>XMLErrorReporter</name>)
                                                            <name>value</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>suffixLength</name>
                                                            ==
                                                            <call>
                                                                <name><name>Constants</name>.<name>
                                                                    ENTITY_MANAGER_PROPERTY</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            &amp;&amp;
                                                            <call>
                                                                <name><name>propertyId</name>.
                                                                    <name>endsWith</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>Constants</name>.
                                                                                <name>ENTITY_MANAGER_PROPERTY</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fEntityManager</name>
                                                                    = (<name>XMLEntityManager</name>)
                                                                    <name>value</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// setProperty(String,Object)</comment>

            <comment type="block">/*
                * Sets the feature of the scanner.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>VALIDATION</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>featureId</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fValidation</name>
                                        =
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>NOTIFY_CHAR_REFS</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>fNotifyCharRefs</name>
                                                =
                                                <name>value</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/*
                * Gets the state of the feature of the scanner.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getFeature</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>featureId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>VALIDATION</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>featureId</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>fValidation</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>NOTIFY_CHAR_REFS</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>featureId</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>fNotifyCharRefs</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>XMLConfigurationException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLConfigurationException</name>.
                                                <name>NOT_RECOGNIZED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>featureId</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// anybody calling this had better have set Symtoltable!</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>init</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// DTD preparsing defaults:</comment>
                    <expr_stmt>
                        <expr>
                            <name>fValidation</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNotifyCharRefs</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="line">// common scanning methods</comment>

            <comment type="javadoc">/**
                * Scans an XML or text declaration.
                * &lt;p&gt;
                * &lt;pre&gt;
                * [23] XMLDecl ::= '&lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&gt;'
                * [24] VersionInfo ::= S 'version' Eq (' VersionNum ' | " VersionNum ")
                * [80] EncodingDecl ::= S 'encoding' Eq ('"' EncName '"' | "'" EncName "'" )
                * [81] EncName ::= [A-Za-z] ([A-Za-z0-9._] | '-')*
                * [32] SDDecl ::= S 'standalone' Eq (("'" ('yes' | 'no') "'")
                * | ('"' ('yes' | 'no') '"'))
                *
                * [77] TextDecl ::= '&lt;?xml' VersionInfo? EncodingDecl S? '?&gt;'
                * &lt;/pre&gt;
                *
                * @param scanningTextDecl True if a text declaration is to
                * be scanned instead of an XML
                * declaration.
                * @param pseudoAttributeValues An array of size 3 to return the version,
                * encoding and standalone pseudo attribute values
                * (in that order).
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fString, anything in it
                * at the time of calling is lost.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>scanXMLDeclOrTextDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>scanningTextDecl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>pseudoAttributeValues</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// pseudo-attribute values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>standalone</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// scan pseudo-attributes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>STATE_VERSION</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>STATE_ENCODING</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>STATE_STANDALONE</name> =
                            <init>
                                <expr>2</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>STATE_DONE</name> =
                            <init>
                                <expr>3</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>state</name> =
                            <init>
                                <expr>
                                    <name>STATE_VERSION</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>dataFoundForTarget</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>sawSpace</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>skipDeclSpaces</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// since pseudoattributes are *not* attributes,</comment>
                    <comment type="line">// their quotes don't need to be preserved in external parameter entities.
                    </comment>
                    <comment type="line">// the XMLEntityScanner#scanLiteral method will continue to</comment>
                    <comment type="line">// emit -1 in such cases when it finds a quote; this is</comment>
                    <comment type="line">// fine for other methods that parse scanned entities,</comment>
                    <comment type="line">// but not for the scanning of pseudoattributes. So,</comment>
                    <comment type="line">// temporarily, we must mark the current entity as not being "literal"
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>XMLEntityManager</name>.
                                    <name>ScannedEntity</name>
                                </name>
                            </type>
                            <name>currEnt</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityManager</name>.
                                            <name>getCurrentEntity</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>currLiteral</name> =
                            <init>
                                <expr>
                                    <name><name>currEnt</name>.
                                        <name>literal</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>currEnt</name>.
                                <name>literal</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>peekChar</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                != '?'
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>dataFoundForTarget</name>
                                    = true
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>scanPseudoAttribute</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>scanningTextDecl</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>fString</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>state</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name>STATE_VERSION</name>
                                        </expr>
                                        :
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>name</name>
                                                        ==
                                                        <name>fVersionSymbol</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>sawSpace</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportFatalError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>scanningTextDecl
                                                                                            </name>
                                                                                            ?
                                                                                            "SpaceRequiredBeforeVersionInTextDecl"
                                                                                            :
                                                                                            "SpaceRequiredBeforeVersionInXMLDecl"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>version</name>
                                                                =
                                                                <call>
                                                                    <name><name>fString</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>state</name>
                                                                =
                                                                <name>STATE_ENCODING</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <call>
                                                                        <name>versionSupported</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>version</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportFatalError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>
                                                                                                    getVersionNotSupportedKey
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>version</name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>name</name>
                                                                ==
                                                                <name>fEncodingSymbol</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <name>scanningTextDecl</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "VersionInfoRequired"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <name>sawSpace</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        scanningTextDecl
                                                                                                    </name>
                                                                                                    ?
                                                                                                    "SpaceRequiredBeforeEncodingInTextDecl"
                                                                                                    :
                                                                                                    "SpaceRequiredBeforeEncodingInXMLDecl"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>encoding</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>fString</name>.
                                                                                <name>toString</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>state</name>
                                                                        = <name>scanningTextDecl</name> ? <name>
                                                                        STATE_DONE
                                                                    </name> :
                                                                        <name>STATE_STANDALONE</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>scanningTextDecl</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "EncodingDeclRequired"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "VersionInfoRequired"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </else>
                                                                </if>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>STATE_ENCODING</name>
                                        </expr>
                                        :
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>name</name>
                                                        ==
                                                        <name>fEncodingSymbol</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>sawSpace</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportFatalError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>scanningTextDecl
                                                                                            </name>
                                                                                            ?
                                                                                            "SpaceRequiredBeforeEncodingInTextDecl"
                                                                                            :
                                                                                            "SpaceRequiredBeforeEncodingInXMLDecl"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>encoding</name>
                                                                =
                                                                <call>
                                                                    <name><name>fString</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>state</name>
                                                                = <name>scanningTextDecl</name> ? <name>STATE_DONE
                                                            </name> :
                                                                <name>STATE_STANDALONE</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <comment type="line">// TODO: check encoding name; set encoding
                                                            on
                                                        </comment>
                                                        <comment type="line">// entity scanner</comment>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>!<name>scanningTextDecl</name> &amp;&amp; <name>name
                                                            </name> ==
                                                                <name>fStandaloneSymbol</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <name>sawSpace</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "SpaceRequiredBeforeStandalone"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>standalone</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>fString</name>.
                                                                                <name>toString</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>state</name>
                                                                        =
                                                                        <name>STATE_DONE</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <call>
                                                                                <name><name>standalone</name>.
                                                                                    <name>equals</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"yes"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                            &amp;&amp; !
                                                                            <call>
                                                                                <name><name>standalone</name>.
                                                                                    <name>equals</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"no"</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>"SDDeclInvalid"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                standalone
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportFatalError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"EncodingDeclRequired"</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>STATE_STANDALONE</name>
                                        </expr>
                                        :
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>name</name>
                                                        ==
                                                        <name>fStandaloneSymbol</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <name>sawSpace</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportFatalError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "SpaceRequiredBeforeStandalone"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>standalone</name>
                                                                =
                                                                <call>
                                                                    <name><name>fString</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>state</name>
                                                                =
                                                                <name>STATE_DONE</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>!
                                                                    <call>
                                                                        <name><name>standalone</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"yes"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                    &amp;&amp; !
                                                                    <call>
                                                                        <name><name>standalone</name>.
                                                                            <name>equals</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"no"</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportFatalError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>"SDDeclInvalid"</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>standalone
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"EncodingDeclRequired"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <default>default:
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"NoMorePseudoAttributes"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </default>
                                    }
                                </block>
                            </switch>
                            <expr_stmt>
                                <expr>
                                    <name>sawSpace</name>
                                    =
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>skipDeclSpaces</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <comment type="line">// restore original literal value</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>currLiteral</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name><name>currEnt</name>.
                                        <name>literal</name>
                                    </name>
                                    = true
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <comment type="line">// REVISIT: should we remove this error reporting?</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>scanningTextDecl</name>
                                &amp;&amp; <name>state</name> !=
                                <name>STATE_DONE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"MorePseudoAttributes"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// If there is no data in the xml or text decl then we fail to report error
                    </comment>
                    <comment type="line">// for version or encoding info above.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>scanningTextDecl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!<name>dataFoundForTarget</name> &amp;&amp; <name>encoding</name> ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"EncodingDeclRequired"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!<name>dataFoundForTarget</name> &amp;&amp; <name>version</name> ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"VersionInfoRequired"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// end</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'?'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"XMLDeclUnterminated"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'&gt;'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"XMLDeclUnterminated"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// fill in return array</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>pseudoAttributeValues</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>version</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>pseudoAttributeValues</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            =
                            <name>encoding</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>pseudoAttributeValues</name>
                                <index>[<expr>2</expr>]
                                </index>
                            </name>
                            =
                            <name>standalone</name>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// scanXMLDeclOrTextDecl(boolean)</comment>

            <comment type="javadoc">/**
                * Scans a pseudo attribute.
                *
                * @param scanningTextDecl True if scanning this pseudo-attribute for a
                * TextDecl; false if scanning XMLDecl. This
                * flag is needed to report the correct type of
                * error.
                * @param value The string to fill in with the attribute
                * value.
                *
                * @return The name of the attribute
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fStringBuffer2, anything in it
                * at the time of calling is lost.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>scanPseudoAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>scanningTextDecl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// REVISIT: This method is used for generic scanning of</comment>
                    <comment type="line">// pseudo attributes, but since there are only three such</comment>
                    <comment type="line">// attributes: version, encoding, and standalone there are</comment>
                    <comment type="line">// for performant ways of scanning them. Every decl must</comment>
                    <comment type="line">// have a version, and in TextDecls this version must</comment>
                    <comment type="line">// be followed by an encoding declaration. Also the</comment>
                    <comment type="line">// methods we invoke on the scanners allow non-ASCII</comment>
                    <comment type="line">// characters to be parsed in the decls, but since</comment>
                    <comment type="line">// we don't even know what the actual encoding of the</comment>
                    <comment type="line">// document is until we scan the encoding declaration</comment>
                    <comment type="line">// you cannot reliably read any characters outside</comment>
                    <comment type="line">// of the ASCII range here. -- mrglavas</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanName</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>XMLEntityManager</name>.
                                    <name>print</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fEntityManager</name>.
                                                    <name>getCurrentEntity</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>name</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"PseudoAttrNameExpected"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>skipDeclSpaces</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'='</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>scanningTextDecl</name>
                                                        ? "EqRequiredInTextDecl"
                                                        : "EqRequiredInXMLDecl"
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>skipDeclSpaces</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>quote</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>peekChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>quote</name>
                                != '\'' &amp;&amp; <name>quote</name> != '"'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>scanningTextDecl</name>
                                                        ? "QuoteRequiredInTextDecl"
                                                        : "QuoteRequiredInXMLDecl"
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>scanChar</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanLiteral</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>quote</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                !=
                                <name>quote</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer2</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <do>do
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStringBuffer2</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    != -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>c</name>
                                                                == '&amp;' || <name>c</name> == '%' || <name>c</name> ==
                                                                '&lt;' || <name>c</name> == ']'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fStringBuffer2</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fEntityScanner</name>.
                                                                                                <name>scanChar</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <comment type="line">// REVISIT: Even if you could reliably read
                                                            non-ASCII chars
                                                        </comment>
                                                        <comment type="line">// why bother scanning for surrogates here?
                                                            Only ASCII chars
                                                        </comment>
                                                        <comment type="line">// match the productions in XMLDecls and
                                                            TextDecls. -- mrglavas
                                                        </comment>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>XMLChar</name>.
                                                                                <name>isHighSurrogate</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>c</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>scanSurrogates</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fStringBuffer2
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name>isInvalidLiteral</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>c</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <decl_stmt>
                                                                                    <decl>
                                                                                        <type>
                                                                                            <name>String</name>
                                                                                        </type>
                                                                                        <name>key</name> =
                                                                                        <init>
                                                                                            <expr>
                                                                                                <name>scanningTextDecl
                                                                                                </name>
                                                                                                ?
                                                                                                "InvalidCharInTextDecl"
                                                                                                : "InvalidCharInXMLDecl"
                                                                                            </expr>
                                                                                        </init>
                                                                                    </decl>
                                                                                    ;
                                                                                </decl_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>reportFatalError
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>key</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Integer</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            toString
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    c
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                16
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fEntityScanner</name>.
                                                                                                <name>scanChar</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>c</name>
                                                =
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>scanLiteral</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>quote</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            !=
                                            <name>quote</name>
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer2</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>value</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fStringBuffer2</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>quote</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>scanningTextDecl</name>
                                                        ? "CloseQuoteMissingInTextDecl"
                                                        : "CloseQuoteMissingInXMLDecl"
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// return</comment>
                    <return>return
                        <expr>
                            <name>name</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanPseudoAttribute(XMLString):String</comment>

            <comment type="javadoc">/**
                * Scans a processing instruction.
                * &lt;p&gt;
                * &lt;pre&gt;
                * [16] PI ::= '&amp;lt;?' PITarget (S (Char* - (Char* '?&gt;' Char*)))? '?&gt;'
                * [17] PITarget ::= Name - (('X' | 'x') ('M' | 'm') ('L' | 'l'))
                * &lt;/pre&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fString, anything in it
                * at the time of calling is lost.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>scanPI</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// target</comment>
                    <expr_stmt>
                        <expr>
                            <name>fReportEntity</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fNamespaces</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>target</name>
                                        =
                                        <call>
                                            <name><name>fEntityScanner</name>.
                                                <name>scanNCName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>target</name>
                                        =
                                        <call>
                                            <name><name>fEntityScanner</name>.
                                                <name>scanName</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>target</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"PITargetRequired"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// scan data</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>scanPIData</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fString</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fReportEntity</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// scanPI()</comment>

            <comment type="javadoc">/**
                * Scans a processing data. This is needed to handle the situation
                * where a document starts with a processing instruction whose
                * target name &lt;em&gt;starts with&lt;/em&gt; "xml". (e.g. xmlfoo)
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fStringBuffer, anything in it
                * at the time of calling is lost.
                *
                * @param target The PI target
                * @param data The string to fill in with the data
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>scanPIData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check target</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>target</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                == 3
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>c0</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Character</name>.
                                                        <name>toLowerCase</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>target</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>0</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>c1</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Character</name>.
                                                        <name>toLowerCase</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>target</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>1</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>c2</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>Character</name>.
                                                        <name>toLowerCase</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>target</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>2</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>c0</name>
                                            == 'x' &amp;&amp; <name>c1</name> == 'm' &amp;&amp; <name>c2</name> == 'l'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"ReservedPITarget"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// spaces</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipSpaces</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>skipString</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"?&gt;"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// we found the end, there is no data</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>data</name>.
                                                            <name>clear</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>fNamespaces</name>
                                                        &amp;&amp;
                                                        <call>
                                                            <name><name>fEntityScanner</name>.
                                                                <name>peekChar</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        == ':'
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityScanner</name>.
                                                                        <name>scanChar</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>XMLStringBuffer</name>
                                                                </type>
                                                                <name>colonName</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>XMLStringBuffer</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>target</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>colonName</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>":"</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>String</name>
                                                                </type>
                                                                <name>str</name> =
                                                                <init>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fEntityScanner</name>.
                                                                                <name>scanName</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>str</name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>colonName</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>str</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"ColonNotLegalWithNS"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>colonName</name>
                                                                                                .
                                                                                                <name>toString</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityScanner</name>.
                                                                        <name>skipSpaces</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <comment type="line">// if there is data there should be some
                                                            space
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportFatalError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"SpaceRequiredInPI"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStringBuffer</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// data</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>scanData</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"?&gt;"</expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>fStringBuffer</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <do>do
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>c</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>fEntityScanner</name>.
                                                                <name>peekChar</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    != -1
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isHighSurrogate</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>scanSurrogates</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fStringBuffer</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name>isInvalidLiteral</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>c</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>reportFatalError</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>"InvalidCharInPI"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>Object</name>
                                                                                                    <index>[]</index>
                                                                                                </name>
                                                                                                <block>{
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                Integer</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    toHexString
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            c
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    }
                                                                                                </block>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fEntityScanner</name>.
                                                                                        <name>scanChar</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>scanData</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"?&gt;"</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>fStringBuffer</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>data</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fStringBuffer</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// scanPIData(String,XMLString)</comment>

            <comment type="javadoc">/**
                * Scans a comment.
                * &lt;p&gt;
                * &lt;pre&gt;
                * [15] Comment ::= '&amp;lt!--' ((Char - '-') | ('-' (Char - '-')))* '--&gt;'
                * &lt;/pre&gt;
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Called after scanning past '&amp;lt;!--'
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fString, anything in it
                * at the time of calling is lost.
                *
                * @param text The buffer to fill in with the text.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>scanComment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLStringBuffer</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// text</comment>
                    <comment type="line">// REVISIT: handle invalid character, eof</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>text</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>scanData</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"--"</expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>text</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>peekChar</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        != -1
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>XMLChar</name>.
                                                            <name>isHighSurrogate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>c</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>scanSurrogates</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>text</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name>isInvalidLiteral</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>c</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"InvalidCharInComment"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    Integer</name>.
                                                                                                    <name>toHexString
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>c
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fEntityScanner</name>.
                                                                            <name>scanChar</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'&gt;'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"DashDashInComment"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// scanComment()</comment>

            <comment type="javadoc">/**
                * Scans an attribute value and normalizes whitespace converting all
                * whitespace characters to space characters.
                *
                * [10] AttValue ::= '"' ([^&lt;&amp;"] | Reference)* '"' | "'" ([^&lt;&amp;'] | Reference)* "'"
                *
                * @param value The XMLString to fill in with the value.
                * @param nonNormalizedValue The XMLString to fill in with the
                * non-normalized value.
                * @param atName The name of the attribute being parsed (for error msgs).
                * @param checkEntities true if undeclared entities should be reported as VC violation,
                * false if undeclared entities should be reported as WFC violation.
                * @param eleName The name of element to which this attribute belongs.
                *
                * @return true if the non-normalized and normalized value are the same
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fStringBuffer2, anything in it
                * at the time of calling is lost.
                **/
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>scanAttributeValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>nonNormalizedValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>atName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>checkEntities</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>eleName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// quote</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>quote</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>peekChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>quote</name>
                                != '\'' &amp;&amp; <name>quote</name> != '"'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"OpenQuoteExpected"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>eleName</name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name>atName</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>scanChar</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>entityDepth</name> =
                            <init>
                                <expr>
                                    <name>fEntityDepth</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanLiteral</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>quote</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ATTR_NORMALIZATION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"** scanLiteral -&gt; \""
                                                        +
                                                        <call>
                                                            <name><name>value</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        + "\""
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fromIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                == <name>quote</name> &amp;&amp; (<name>fromIndex</name> =
                                <call>
                                    <name>isUnchangedByNormalization</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ) == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="javadoc">/** Both the non-normalized and normalized attribute values are
                                    equal. **/
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>nonNormalizedValue</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>cquote</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>scanChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>cquote</name>
                                            !=
                                            <name>quote</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"CloseQuoteExpected"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>eleName</name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name>atName</name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStringBuffer2</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStringBuffer2</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>normalizeWhitespace</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fromIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_ATTR_NORMALIZATION</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"** normalizeWhitespace -&gt; \""
                                                        +
                                                        <call>
                                                            <name><name>value</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        + "\""
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>c</name>
                                !=
                                <name>quote</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fScanningAttribute</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <do>do
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fStringBuffer</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_ATTR_NORMALIZATION</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"** value2: \""
                                                                            +
                                                                            <call>
                                                                                <name><name>fStringBuffer</name>.
                                                                                    <name>toString</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            + "\""
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>c</name>
                                                    == '&amp;'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fEntityScanner</name>.
                                                                    <name>skipChar</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>'&amp;'</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>entityDepth</name>
                                                                ==
                                                                <name>fEntityDepth</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fStringBuffer2</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>'&amp;'</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>fEntityScanner</name>.
                                                                        <name>skipChar</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>'#'</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>entityDepth</name>
                                                                            ==
                                                                            <name>fEntityDepth</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fStringBuffer2</name>.
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>'#'</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>int</name>
                                                                        </type>
                                                                        <name>ch</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>scanCharReferenceValue</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fStringBuffer
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>fStringBuffer2
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>ch</name>
                                                                            != -1
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>DEBUG_ATTR_NORMALIZATION
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        System</name>
                                                                                                        .<name>
                                                                                                            out</name>.
                                                                                                        <name>println
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>"**
                                                                                                                value3:
                                                                                                                \""
                                                                                                                +
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fStringBuffer</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            toString
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        ()
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                                + "\""
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>String</name>
                                                                        </type>
                                                                        <name>entityName</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fEntityScanner</name>.
                                                                                        <name>scanName</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>entityName</name>
                                                                            ==
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "NameRequiredInReference"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>null</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>entityDepth</name>
                                                                                    ==
                                                                                    <name>fEntityDepth</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fStringBuffer2</name>
                                                                                                    .
                                                                                                    <name>append</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                entityName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>!
                                                                            <call>
                                                                                <name><name>fEntityScanner</name>.
                                                                                    <name>skipChar</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>';'</expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>reportFatalError</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    "SemicolonRequiredInReference"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>new
                                                                                                    <name>
                                                                                                        <name>Object
                                                                                                        </name>
                                                                                                        <index>[]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    <block>{
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                entityName
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        }
                                                                                                    </block>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>entityDepth</name>
                                                                                    ==
                                                                                    <name>fEntityDepth</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fStringBuffer2</name>
                                                                                                    .
                                                                                                    <name>append</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>';'</expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>entityName</name>
                                                                            ==
                                                                            <name>fAmpSymbol</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>fStringBuffer</name>
                                                                                            .
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>'&amp;'</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>DEBUG_ATTR_NORMALIZATION
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        System</name>
                                                                                                        .<name>
                                                                                                            out</name>.
                                                                                                        <name>println
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>"**
                                                                                                                value5:
                                                                                                                \""
                                                                                                                +
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fStringBuffer</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            toString
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        ()
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                                + "\""
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>entityName</name>
                                                                                    ==
                                                                                    <name>fAposSymbol</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fStringBuffer</name>
                                                                                                    .
                                                                                                    <name>append</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>'\''
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>
                                                                                                    DEBUG_ATTR_NORMALIZATION
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                System</name>
                                                                                                                .<name>
                                                                                                                    out</name>.
                                                                                                                <name>
                                                                                                                    println
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        "**
                                                                                                                        value7:
                                                                                                                        \""
                                                                                                                        +
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    fStringBuffer</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    toString
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                ()
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                        +
                                                                                                                        "\""
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>entityName</name>
                                                                                            ==
                                                                                            <name>fLtSymbol</name>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            fStringBuffer</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                append
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>'&lt;'</expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            DEBUG_ATTR_NORMALIZATION
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            System</name>
                                                                                                                        .<name>
                                                                                                                        out</name>.
                                                                                                                        <name>
                                                                                                                            println
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                "**
                                                                                                                                value9:
                                                                                                                                \""
                                                                                                                                +
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            fStringBuffer</name>
                                                                                                                                        .
                                                                                                                                        <name>
                                                                                                                                            toString
                                                                                                                                        </name>
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        ()
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                                +
                                                                                                                                "\""
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <if>if
                                                                                            <condition>(
                                                                                                <expr>
                                                                                                    <name>entityName
                                                                                                    </name>
                                                                                                    ==
                                                                                                    <name>fGtSymbol
                                                                                                    </name>
                                                                                                </expr>
                                                                                                )
                                                                                            </condition>
                                                                                            <then>
                                                                                                <block>{
                                                                                                    <expr_stmt>
                                                                                                        <expr>
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        fStringBuffer</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        append
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            '&gt;'
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </expr_stmt>
                                                                                                    <if>if
                                                                                                        <condition>(
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    DEBUG_ATTR_NORMALIZATION
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            )
                                                                                                        </condition>
                                                                                                        <then>
                                                                                                            <block>{
                                                                                                                <expr_stmt>
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    System</name>
                                                                                                                                .<name>
                                                                                                                                out</name>.
                                                                                                                                <name>
                                                                                                                                    println
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                (
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        "**
                                                                                                                                        valueB:
                                                                                                                                        \""
                                                                                                                                        +
                                                                                                                                        <call>
                                                                                                                                            <name>
                                                                                                                                                <name>
                                                                                                                                                    fStringBuffer</name>
                                                                                                                                                .
                                                                                                                                                <name>
                                                                                                                                                    toString
                                                                                                                                                </name>
                                                                                                                                            </name>
                                                                                                                                            <argument_list>
                                                                                                                                                ()
                                                                                                                                            </argument_list>
                                                                                                                                        </call>
                                                                                                                                        +
                                                                                                                                        "\""
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                )
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                    ;
                                                                                                                </expr_stmt>
                                                                                                                }
                                                                                                            </block>
                                                                                                        </then>
                                                                                                    </if>
                                                                                                    }
                                                                                                </block>
                                                                                            </then>
                                                                                            <else>else
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                entityName
                                                                                                            </name>
                                                                                                            ==
                                                                                                            <name>
                                                                                                                fQuotSymbol
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <expr_stmt>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                fStringBuffer</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                append
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    '"'
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </expr_stmt>
                                                                                                            <if>if
                                                                                                                <condition>
                                                                                                                    (
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            DEBUG_ATTR_NORMALIZATION
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    )
                                                                                                                </condition>
                                                                                                                <then>
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <expr_stmt>
                                                                                                                            <expr>
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            System</name>
                                                                                                                                        .<name>
                                                                                                                                        out</name>.
                                                                                                                                        <name>
                                                                                                                                            println
                                                                                                                                        </name>
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        (
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                "**
                                                                                                                                                valueD:
                                                                                                                                                \""
                                                                                                                                                +
                                                                                                                                                <call>
                                                                                                                                                    <name>
                                                                                                                                                        <name>
                                                                                                                                                            fStringBuffer</name>
                                                                                                                                                        .
                                                                                                                                                        <name>
                                                                                                                                                            toString
                                                                                                                                                        </name>
                                                                                                                                                    </name>
                                                                                                                                                    <argument_list>
                                                                                                                                                        ()
                                                                                                                                                    </argument_list>
                                                                                                                                                </call>
                                                                                                                                                +
                                                                                                                                                "\""
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        )
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                            </expr>
                                                                                                                            ;
                                                                                                                        </expr_stmt>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </then>
                                                                                                            </if>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                    <else>else
                                                                                                        <block>{
                                                                                                            <if>if
                                                                                                                <condition>
                                                                                                                    (
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    fEntityManager</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    isExternalEntity
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                (
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            entityName
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                )
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                    )
                                                                                                                </condition>
                                                                                                                <then>
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <expr_stmt>
                                                                                                                            <expr>
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        reportFatalError
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        (
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                "ReferenceToExternalEntity"
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        ,
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                new
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        Object
                                                                                                                                                    </name>
                                                                                                                                                    <index>
                                                                                                                                                        []
                                                                                                                                                    </index>
                                                                                                                                                </name>
                                                                                                                                                <block>
                                                                                                                                                    {
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            entityName
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                    }
                                                                                                                                                </block>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        )
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                            </expr>
                                                                                                                            ;
                                                                                                                        </expr_stmt>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </then>
                                                                                                                <else>
                                                                                                                    else
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <if>
                                                                                                                            if
                                                                                                                            <condition>
                                                                                                                                (
                                                                                                                                <expr>
                                                                                                                                    !
                                                                                                                                    <call>
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                fEntityManager</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                isDeclaredEntity
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                        <argument_list>
                                                                                                                                            (
                                                                                                                                            <argument>
                                                                                                                                                <expr>
                                                                                                                                                    <name>
                                                                                                                                                        entityName
                                                                                                                                                    </name>
                                                                                                                                                </expr>
                                                                                                                                            </argument>
                                                                                                                                            )
                                                                                                                                        </argument_list>
                                                                                                                                    </call>
                                                                                                                                </expr>
                                                                                                                                )
                                                                                                                            </condition>
                                                                                                                            <then>
                                                                                                                                <block>
                                                                                                                                    {
                                                                                                                                    <comment
                                                                                                                                            type="line">
                                                                                                                                        //WFC
                                                                                                                                        &amp;
                                                                                                                                        VC:
                                                                                                                                        Entity
                                                                                                                                        Declared
                                                                                                                                    </comment>
                                                                                                                                    <if>
                                                                                                                                        if
                                                                                                                                        <condition>
                                                                                                                                            (
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    checkEntities
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                            )
                                                                                                                                        </condition>
                                                                                                                                        <then>
                                                                                                                                            <block>
                                                                                                                                                {
                                                                                                                                                <if>
                                                                                                                                                    if
                                                                                                                                                    <condition>
                                                                                                                                                        (
                                                                                                                                                        <expr>
                                                                                                                                                            <name>
                                                                                                                                                                fValidation
                                                                                                                                                            </name>
                                                                                                                                                        </expr>
                                                                                                                                                        )
                                                                                                                                                    </condition>
                                                                                                                                                    <then>
                                                                                                                                                        <block>
                                                                                                                                                            {
                                                                                                                                                            <expr_stmt>
                                                                                                                                                                <expr>
                                                                                                                                                                    <call>
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                fErrorReporter</name>
                                                                                                                                                                            .
                                                                                                                                                                            <name>
                                                                                                                                                                                reportError
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                        <argument_list>
                                                                                                                                                                            (
                                                                                                                                                                            <argument>
                                                                                                                                                                                <expr>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            XMLMessageFormatter</name>
                                                                                                                                                                                        .
                                                                                                                                                                                        <name>
                                                                                                                                                                                            XML_DOMAIN
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </name>
                                                                                                                                                                                </expr>
                                                                                                                                                                            </argument>
                                                                                                                                                                            ,
                                                                                                                                                                            <argument>
                                                                                                                                                                                <expr>
                                                                                                                                                                                    "EntityNotDeclared"
                                                                                                                                                                                </expr>
                                                                                                                                                                            </argument>
                                                                                                                                                                            ,
                                                                                                                                                                            <argument>
                                                                                                                                                                                <expr>
                                                                                                                                                                                    new
                                                                                                                                                                                    <name>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            Object
                                                                                                                                                                                        </name>
                                                                                                                                                                                        <index>
                                                                                                                                                                                            []
                                                                                                                                                                                        </index>
                                                                                                                                                                                    </name>
                                                                                                                                                                                    <block>
                                                                                                                                                                                        {
                                                                                                                                                                                        <expr>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                entityName
                                                                                                                                                                                            </name>
                                                                                                                                                                                        </expr>
                                                                                                                                                                                        }
                                                                                                                                                                                    </block>
                                                                                                                                                                                </expr>
                                                                                                                                                                            </argument>
                                                                                                                                                                            ,
                                                                                                                                                                            <argument>
                                                                                                                                                                                <expr>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            XMLErrorReporter</name>
                                                                                                                                                                                        .
                                                                                                                                                                                        <name>
                                                                                                                                                                                            SEVERITY_ERROR
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </name>
                                                                                                                                                                                </expr>
                                                                                                                                                                            </argument>
                                                                                                                                                                            )
                                                                                                                                                                        </argument_list>
                                                                                                                                                                    </call>
                                                                                                                                                                </expr>
                                                                                                                                                                ;
                                                                                                                                                            </expr_stmt>
                                                                                                                                                            }
                                                                                                                                                        </block>
                                                                                                                                                    </then>
                                                                                                                                                </if>
                                                                                                                                                }
                                                                                                                                            </block>
                                                                                                                                        </then>
                                                                                                                                        <else>
                                                                                                                                            else
                                                                                                                                            <block>
                                                                                                                                                {
                                                                                                                                                <expr_stmt>
                                                                                                                                                    <expr>
                                                                                                                                                        <call>
                                                                                                                                                            <name>
                                                                                                                                                                reportFatalError
                                                                                                                                                            </name>
                                                                                                                                                            <argument_list>
                                                                                                                                                                (
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        "EntityNotDeclared"
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                ,
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        new
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                Object
                                                                                                                                                                            </name>
                                                                                                                                                                            <index>
                                                                                                                                                                                []
                                                                                                                                                                            </index>
                                                                                                                                                                        </name>
                                                                                                                                                                        <block>
                                                                                                                                                                            {
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    entityName
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                            }
                                                                                                                                                                        </block>
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                )
                                                                                                                                                            </argument_list>
                                                                                                                                                        </call>
                                                                                                                                                    </expr>
                                                                                                                                                    ;
                                                                                                                                                </expr_stmt>
                                                                                                                                                }
                                                                                                                                            </block>
                                                                                                                                        </else>
                                                                                                                                    </if>
                                                                                                                                    }
                                                                                                                                </block>
                                                                                                                            </then>
                                                                                                                        </if>
                                                                                                                        <expr_stmt>
                                                                                                                            <expr>
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            fEntityManager</name>
                                                                                                                                        .
                                                                                                                                        <name>
                                                                                                                                            startEntity
                                                                                                                                        </name>
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        (
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    entityName
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        ,
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                true
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        )
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                            </expr>
                                                                                                                            ;
                                                                                                                        </expr_stmt>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </else>
                                                                                                            </if>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </else>
                                                                                                </if>
                                                                                            </else>
                                                                                        </if>
                                                                                    </else>
                                                                                </if>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>c</name>
                                                            == '&lt;'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportFatalError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>"LessthanInAttValue"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name>eleName</name>
                                                                                        </expr>
                                                                                        ,
                                                                                        <expr>
                                                                                            <name>atName</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fEntityScanner</name>.
                                                                            <name>scanChar</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>entityDepth</name>
                                                                        ==
                                                                        <name>fEntityDepth</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>fStringBuffer2</name>.
                                                                                        <name>append</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>(<name>char</name>)
                                                                                                <name>c</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>c</name>
                                                                    == '%' || <name>c</name> == ']'
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fEntityScanner</name>.
                                                                                    <name>scanChar</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>fStringBuffer</name>.
                                                                                    <name>append</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>(<name>char</name>)
                                                                                            <name>c</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>entityDepth</name>
                                                                                ==
                                                                                <name>fEntityDepth</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fStringBuffer2</name>.
                                                                                                <name>append</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>(<name>
                                                                                                        char</name>)
                                                                                                        <name>c</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>DEBUG_ATTR_NORMALIZATION</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>System</name>
                                                                                                .<name>out</name>.
                                                                                                <name>println</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>"** valueF:
                                                                                                        \""
                                                                                                        +
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fStringBuffer</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    toString
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                        + "\""
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>c</name>
                                                                            == '\n' || <name>c</name> == '\r'
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>
                                                                                            fEntityScanner</name>.
                                                                                            <name>scanChar</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>fStringBuffer</name>
                                                                                            .
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>' '</expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>entityDepth</name>
                                                                                        ==
                                                                                        <name>fEntityDepth</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        fStringBuffer2</name>
                                                                                                        .
                                                                                                        <name>append
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>'\n'
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                            </if>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>c</name>
                                                                                    != -1 &amp;&amp;
                                                                                    <call>
                                                                                        <name><name>XMLChar</name>.
                                                                                            <name>isHighSurrogate</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>c</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    fStringBuffer3</name>
                                                                                                    .
                                                                                                    <name>clear</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>
                                                                                                        scanSurrogates
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    fStringBuffer3
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fStringBuffer</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    append
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            fStringBuffer3
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                entityDepth
                                                                                                            </name>
                                                                                                            ==
                                                                                                            <name>
                                                                                                                fEntityDepth
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <expr_stmt>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                fStringBuffer2</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                append
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    <name>
                                                                                                                                        fStringBuffer3
                                                                                                                                    </name>
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </expr_stmt>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                </if>
                                                                                                <if>if
                                                                                                    <condition>(
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                DEBUG_ATTR_NORMALIZATION
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        )
                                                                                                    </condition>
                                                                                                    <then>
                                                                                                        <block>{
                                                                                                            <expr_stmt>
                                                                                                                <expr>
                                                                                                                    <call>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                System</name>
                                                                                                                            .<name>
                                                                                                                            out</name>.
                                                                                                                            <name>
                                                                                                                                println
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                        <argument_list>
                                                                                                                            (
                                                                                                                            <argument>
                                                                                                                                <expr>
                                                                                                                                    "**
                                                                                                                                    valueI:
                                                                                                                                    \""
                                                                                                                                    +
                                                                                                                                    <call>
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                fStringBuffer</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                toString
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                        <argument_list>
                                                                                                                                            ()
                                                                                                                                        </argument_list>
                                                                                                                                    </call>
                                                                                                                                    +
                                                                                                                                    "\""
                                                                                                                                </expr>
                                                                                                                            </argument>
                                                                                                                            )
                                                                                                                        </argument_list>
                                                                                                                    </call>
                                                                                                                </expr>
                                                                                                                ;
                                                                                                            </expr_stmt>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </then>
                                                                                                </if>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>c</name>
                                                                                            != -1 &amp;&amp;
                                                                                            <call>
                                                                                                <name>isInvalidLiteral
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>c
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            reportFatalError
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "InvalidCharInAttValue"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    new
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Object
                                                                                                                        </name>
                                                                                                                        <index>
                                                                                                                            []
                                                                                                                        </index>
                                                                                                                    </name>
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                eleName
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                        ,
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                atName
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                        ,
                                                                                                                        <expr>
                                                                                                                            <call>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        Integer</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        toString
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                                <argument_list>
                                                                                                                                    (
                                                                                                                                    <argument>
                                                                                                                                        <expr>
                                                                                                                                            <name>
                                                                                                                                                c
                                                                                                                                            </name>
                                                                                                                                        </expr>
                                                                                                                                    </argument>
                                                                                                                                    ,
                                                                                                                                    <argument>
                                                                                                                                        <expr>
                                                                                                                                            16
                                                                                                                                        </expr>
                                                                                                                                    </argument>
                                                                                                                                    )
                                                                                                                                </argument_list>
                                                                                                                            </call>
                                                                                                                        </expr>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            fEntityScanner</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                scanChar
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            entityDepth
                                                                                                        </name>
                                                                                                        ==
                                                                                                        <name>
                                                                                                            fEntityDepth
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            fStringBuffer2</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            append
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                (<name>
                                                                                                                                char</name>)
                                                                                                                                <name>
                                                                                                                                    c
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>c</name>
                                                =
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>scanLiteral</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>quote</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>entityDepth</name>
                                                    ==
                                                    <name>fEntityDepth</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fStringBuffer2</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>normalizeWhitespace</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    while
                                    <condition>(
                                        <expr>
                                            <name>c</name>
                                            != <name>quote</name> || <name>entityDepth</name> !=
                                            <name>fEntityDepth</name>
                                        </expr>
                                        )
                                    </condition>
                                    ;
                                </do>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>DEBUG_ATTR_NORMALIZATION</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>System</name>.<name>out</name>.
                                                            <name>println</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"** valueN: \""
                                                                    +
                                                                    <call>
                                                                        <name><name>fStringBuffer</name>.
                                                                            <name>toString</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    + "\""
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>value</name>.
                                                <name>setValues</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fStringBuffer</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fScanningAttribute</name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>nonNormalizedValue</name>.
                                    <name>setValues</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fStringBuffer2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// quote</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>cquote</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>cquote</name>
                                !=
                                <name>quote</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"CloseQuoteExpected"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>eleName</name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name>atName</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>nonNormalizedValue</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>ch</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>offset</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanAttributeValue()</comment>


            <comment type="javadoc">/**
                * Scans External ID and return the public and system IDs.
                *
                * @param identifiers An array of size 2 to return the system id,
                * and public id (in that order).
                * @param optionalSystemId Specifies whether the system id is optional.
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fString and fStringBuffer,
                * anything in them at the time of calling is lost.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>scanExternalID</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>identifiers</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>optionalSystemId</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>systemId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>publicId</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipString</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"PUBLIC"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>skipSpaces</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"SpaceRequiredAfterPUBLIC"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>scanPubidLiteral</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fString</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>publicId</name>
                                        =
                                        <call>
                                            <name><name>fString</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>skipSpaces</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &amp;&amp; !
                                            <name>optionalSystemId</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"SpaceRequiredBetweenPublicAndSystem"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>publicId</name>
                                != <name>null</name> ||
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipString</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"SYSTEM"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>publicId</name>
                                            == <name>null</name> &amp;&amp; !
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>skipSpaces</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"SpaceRequiredAfterSYSTEM"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>quote</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>peekChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>quote</name>
                                            != '\'' &amp;&amp; <name>quote</name> != '"'
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>publicId</name>
                                                        != <name>null</name> &amp;&amp;
                                                        <name>optionalSystemId</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// looks like we don't have any system id
                                                        </comment>
                                                        <comment type="line">// simply return the public id</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>identifiers</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>null</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>identifiers</name>
                                                                    <index>[<expr>1</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>publicId</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <return>return;</return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"QuoteRequiredInSystemID"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityScanner</name>.
                                                <name>scanChar</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XMLString</name>
                                        </type>
                                        <name>ident</name> =
                                        <init>
                                            <expr>
                                                <name>fString</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>scanLiteral</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>quote</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>ident</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            !=
                                            <name>quote</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fStringBuffer</name>.
                                                            <name>clear</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <do>do
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fStringBuffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ident</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>c</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fEntityScanner</name>.
                                                                            <name>peekChar</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>XMLChar</name>.
                                                                        <name>isMarkup</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                || <name>c</name> == ']'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fStringBuffer</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fEntityScanner</name>.
                                                                                                <name>scanChar</name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>fEntityScanner</name>.
                                                                <name>scanLiteral</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>quote</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>ident</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        !=
                                                        <name>quote</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                ;
                                            </do>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fStringBuffer</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ident</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>ident</name>
                                                    =
                                                    <name>fStringBuffer</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>systemId</name>
                                        =
                                        <call>
                                            <name><name>ident</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>skipChar</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>quote</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"SystemIDUnterminated"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// store result in array</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>identifiers</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            =
                            <name>systemId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>identifiers</name>
                                <index>[<expr>1</expr>]
                                </index>
                            </name>
                            =
                            <name>publicId</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Scans public ID literal.
                *
                * [12] PubidLiteral ::= '"' PubidChar* '"' | "'" (PubidChar - "'")* "'"
                * [13] PubidChar::= #x20 | #xD | #xA | [a-zA-Z0-9] | [-'()+,./:=?;!*#@$_%]
                *
                * The returned string is normalized according to the following rule,
                * from http://www.w3.org/TR/REC-xml#dt-pubid:
                *
                * Before a match is attempted, all strings of white space in the public
                * identifier must be normalized to single space characters (#x20), and
                * leading and trailing white space must be removed.
                *
                * @param literal The string to fill in with the public ID literal.
                * @return True on success.
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fStringBuffer, anything in it at
                * the time of calling is lost.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>scanPubidLiteral</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>literal</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>quote</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>quote</name>
                                != '\'' &amp;&amp; <name>quote</name> != '"'
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"QuoteRequiredInPublicID"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fStringBuffer</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// skip leading whitespace</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>skipSpace</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>dataok</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(<expr>true</expr>)
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>fEntityScanner</name>.
                                                    <name>scanChar</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        == ' ' || <name>c</name> == '\n' || <name>c</name> == '\r'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <name>skipSpace</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// take the first whitespace as a space and
                                                        skip the others
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fStringBuffer</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>' '</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>skipSpace</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>c</name>
                                                ==
                                                <name>quote</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>skipSpace</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// if we finished on a space let's trim
                                                                it
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>fStringBuffer</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    --
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>literal</name>.
                                                                <name>setValues</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>fStringBuffer</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>isPubid</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>c</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fStringBuffer</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(<name>char</name>)
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>skipSpace</name>
                                                                = false
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>c</name>
                                                                == -1
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportFatalError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"PublicIDUnterminated"</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <return>return <expr>false</expr>;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>dataok</name>
                                                                        = false
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>reportFatalError</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"InvalidCharInPublicID"</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Integer</name>.
                                                                                                        <name>
                                                                                                            toHexString
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    c
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            }
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>dataok</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Normalize whitespace in an XMLString converting all whitespace
                * characters to space characters.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>normalizeWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                    +
                                    <name><name>value</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>ch</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Performance: For XML 1.0 documents take advantage of</comment>
                            <comment type="line">// the fact that the only legal characters below 0x20</comment>
                            <comment type="line">// are 0x09 (TAB), 0x0A (LF) and 0x0D (CR). Since we've</comment>
                            <comment type="line">// already determined the well-formedness of these</comment>
                            <comment type="line">// characters it is sufficient (and safe) to check</comment>
                            <comment type="line">// against 0x20. -- mrglavas</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        &lt; 0x20
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>value</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = ' '
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Normalize whitespace in an XMLString converting all whitespace
                * characters to space characters.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>normalizeWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fromIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                    +
                                    <name><name>value</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                        +
                                        <name>fromIndex</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>ch</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Performance: For XML 1.0 documents take advantage of</comment>
                            <comment type="line">// the fact that the only legal characters below 0x20</comment>
                            <comment type="line">// are 0x09 (TAB), 0x0A (LF) and 0x0D (CR). Since we've</comment>
                            <comment type="line">// already determined the well-formedness of these</comment>
                            <comment type="line">// characters it is sufficient (and safe) to check</comment>
                            <comment type="line">// against 0x20. -- mrglavas</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        &lt; 0x20
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>value</name>.
                                                    <name>ch</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = ' '
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks whether this string would be unchanged by normalization.
                *
                * @return -1 if the value would be unchanged by normalization,
                * otherwise the index of the first whitespace character which
                * would be transformed.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>isUnchangedByNormalization</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>end</name> =
                            <init>
                                <expr>
                                    <name><name>value</name>.
                                        <name>offset</name>
                                    </name>
                                    +
                                    <name><name>value</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>value</name>.
                                            <name>offset</name>
                                        </name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>end</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>++
                                <name>i</name>
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <name><name>value</name>.
                                                <name>ch</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// Performance: For XML 1.0 documents take advantage of</comment>
                            <comment type="line">// the fact that the only legal characters below 0x20</comment>
                            <comment type="line">// are 0x09 (TAB), 0x0A (LF) and 0x0D (CR). Since we've</comment>
                            <comment type="line">// already determined the well-formedness of these</comment>
                            <comment type="line">// characters it is sufficient (and safe) to check</comment>
                            <comment type="line">// against 0x20. -- mrglavas</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                        &lt; 0x20
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>i</name>
                                                -
                                                <name><name>value</name>.
                                                    <name>offset</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return <expr>-1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">//</comment>
            <comment type="line">// XMLEntityHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * This method notifies of the start of an entity. The document entity
                * has the pseudo-name of "[xml]" the DTD has the pseudo-name of "[dtd]"
                * parameter entity names start with '%'; and general entities are just
                * specified by their name.
                *
                * @param name The name of the entity.
                * @param identifier The resource identifier.
                * @param encoding The auto-detected IANA encoding name of the entity
                * stream. This value will be null in those situations
                * where the entity encoding is not auto-detected (e.g.
                * internal entities or a document entity that is
                * parsed from a java.io.Reader).
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLResourceIdentifier</name>
                            </type>
                            <name>identifier</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>encoding</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// keep track of the entity depth</comment>
                    <expr_stmt>
                        <expr><name>fEntityDepth</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// must reset entity scanner</comment>
                    <expr_stmt>
                        <expr>
                            <name>fEntityScanner</name>
                            =
                            <call>
                                <name><name>fEntityManager</name>.
                                    <name>getEntityScanner</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// startEntity(String,XMLResourceIdentifier,String)</comment>

            <comment type="javadoc">/**
                * This method notifies the end of an entity. The document entity has
                * the pseudo-name of "[xml]" the DTD has the pseudo-name of "[dtd]"
                * parameter entity names start with '%'; and general entities are just
                * specified by their name.
                *
                * @param name The name of the entity.
                * @param augs Additional information that may include infoset augmentations
                *
                * @throws XNIException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// keep track of the entity depth</comment>
                    <expr_stmt>
                        <expr><name>fEntityDepth</name>--
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>
            <comment type="line">// endEntity(String)</comment>

            <comment type="javadoc">/**
                * Scans a character reference and append the corresponding chars to the
                * specified buffer.
                *
                * &lt;p&gt;
                * &lt;pre&gt;
                * [66] CharRef ::= '&amp;#' [0-9]+ ';' | '&amp;#x' [0-9a-fA-F]+ ';'
                * &lt;/pre&gt;
                *
                * &lt;strong&gt;Note:&lt;/strong&gt; This method uses fStringBuffer, anything in it
                * at the time of calling is lost.
                *
                * @param buf the character buffer to append chars to
                * @param buf2 the character buffer to append non-normalized chars to
                *
                * @return the character value or (-1) on conversion failure
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>scanCharReferenceValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLStringBuffer</name>
                            </type>
                            <name>buf</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLStringBuffer</name>
                            </type>
                            <name>buf2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// scan hexadecimal value</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>hex</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>'x'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>buf2</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>buf2</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>'x'</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>hex</name>
                                        = true
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer3</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>digit</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>c</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>peekChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>digit</name>
                                        = (<name>c</name> &gt;= '0' &amp;&amp; <name>c</name> &lt;= '9') ||
                                        (<name>c</name> &gt;= 'a' &amp;&amp; <name>c</name> &lt;= 'f') ||
                                        (<name>c</name> &gt;= 'A' &amp;&amp; <name>c</name> &lt;= 'F')
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>digit</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>buf2</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>buf2</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(<name>char</name>)
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityScanner</name>.
                                                            <name>scanChar</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>c</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <do>do
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>c</name>
                                                            =
                                                            <call>
                                                                <name><name>fEntityScanner</name>.
                                                                    <name>peekChar</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>digit</name>
                                                            = (<name>c</name> &gt;= '0' &amp;&amp; <name>c</name> &lt;=
                                                            '9') ||
                                                            (<name>c</name> &gt;= 'a' &amp;&amp; <name>c</name> &lt;=
                                                            'f') ||
                                                            (<name>c</name> &gt;= 'A' &amp;&amp; <name>c</name> &lt;=
                                                            'F')
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>digit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>buf2</name>
                                                                            !=
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>buf2</name>.
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>(<name>char</name>)
                                                                                                    <name>c</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fEntityScanner</name>.
                                                                                <name>scanChar</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fStringBuffer3</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>c</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                while
                                                <condition>(
                                                    <expr>
                                                        <name>digit</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                ;
                                            </do>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"HexdigitRequiredInCharRef"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>

                        <comment type="line">// scan decimal value</comment>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fStringBuffer3</name>.
                                                <name>clear</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>digit</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>c</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>fEntityScanner</name>.
                                                        <name>peekChar</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>digit</name>
                                        = <name>c</name> &gt;= '0' &amp;&amp; <name>c</name> &lt;= '9'
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>digit</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>buf2</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>buf2</name>.
                                                                        <name>append</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>(<name>char</name>)
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fEntityScanner</name>.
                                                            <name>scanChar</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>char</name>)
                                                                    <name>c</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <do>do
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>c</name>
                                                            =
                                                            <call>
                                                                <name><name>fEntityScanner</name>.
                                                                    <name>peekChar</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>digit</name>
                                                            = <name>c</name> &gt;= '0' &amp;&amp; <name>c</name> &lt;=
                                                            '9'
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>digit</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>buf2</name>
                                                                            !=
                                                                            <name>null</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>buf2</name>.
                                                                                            <name>append</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>(<name>char</name>)
                                                                                                    <name>c</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fEntityScanner</name>.
                                                                                <name>scanChar</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fStringBuffer3</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>c</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                                while
                                                <condition>(
                                                    <expr>
                                                        <name>digit</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                ;
                                            </do>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportFatalError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"DigitRequiredInCharRef"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// end</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>fEntityScanner</name>.
                                        <name>skipChar</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>';'</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"SemicolonRequiredInCharRef"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>buf2</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf2</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>';'</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// convert string to number</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>-1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>value</name>
                                    =
                                    <call>
                                        <name><name>Integer</name>.
                                            <name>parseInt</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>toString</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>hex</name>
                                                    ? 16 : 10
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// character reference must be a valid XML character</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isInvalid</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>StringBuffer</name>
                                                </type>
                                                <name>errorBuf</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringBuffer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>fStringBuffer3</name>.
                                                                            <name>length</name>
                                                                        </name>
                                                                        + 1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>hex</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>errorBuf</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'x'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>errorBuf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>fStringBuffer3</name>.
                                                                    <name>ch</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>fStringBuffer3</name>.
                                                                    <name>offset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>fStringBuffer3</name>.
                                                                    <name>length</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportFatalError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"InvalidCharRef"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>errorBuf</name>.
                                                                                <name>toString</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>NumberFormatException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// Conversion failed, let -1 value drop through.</comment>
                                <comment type="line">// If we end up here, the character reference was invalid.
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>StringBuffer</name>
                                        </type>
                                        <name>errorBuf</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>fStringBuffer3</name>.
                                                                    <name>length</name>
                                                                </name>
                                                                + 1
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>hex</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>errorBuf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'x'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>errorBuf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>offset</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fStringBuffer3</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"InvalidCharRef"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>errorBuf</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </catch>
                    </try>

                    <comment type="line">// append corresponding chars to the given buffer</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isSupplemental</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>char</name>)
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// character is supplemental, split it into surrogate chars
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>highSurrogate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>buf</name>.
                                                <name>append</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>XMLChar</name>.
                                                                <name>lowSurrogate</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// char refs notification code</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fNotifyCharRefs</name>
                                &amp;&amp; <name>value</name> != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>literal</name> =
                                        <init>
                                            <expr>"#" + (<name>hex</name> ? "x" : "") +
                                                <call>
                                                    <name><name>fStringBuffer3</name>.
                                                        <name>toString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>fScanningAttribute</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fCharRefLiteral</name>
                                                    =
                                                    <name>literal</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>value</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// returns true if the given character is not</comment>
            <comment type="line">// valid with respect to the version of</comment>
            <comment type="line">// XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isInvalid</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isInvalid</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isInvalid(int): boolean</comment>

            <comment type="line">// returns true if the given character is not</comment>
            <comment type="line">// valid or may not be used outside a character reference</comment>
            <comment type="line">// with respect to the version of XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isInvalidLiteral</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isInvalid</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isInvalidLiteral(int): boolean</comment>

            <comment type="line">// returns true if the given character is</comment>
            <comment type="line">// a valid nameChar with respect to the version of</comment>
            <comment type="line">// XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidNameChar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidNameChar(int): boolean</comment>

            <comment type="line">// returns true if the given character is</comment>
            <comment type="line">// a valid nameStartChar with respect to the version of</comment>
            <comment type="line">// XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidNameStartChar</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isNameStart</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidNameStartChar(int): boolean</comment>

            <comment type="line">// returns true if the given character is</comment>
            <comment type="line">// a valid NCName character with respect to the version of</comment>
            <comment type="line">// XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidNCName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>XMLChar</name>.
                                    <name>isNCName</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidNCName(int): boolean</comment>

            <comment type="line">// returns true if the given character is</comment>
            <comment type="line">// a valid high surrogate for a nameStartChar</comment>
            <comment type="line">// with respect to the version of XML understood</comment>
            <comment type="line">// by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>isValidNameStartHighSurrogate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isValidNameStartHighSurrogate(int): boolean</comment>

            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>versionSupported</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>version</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>"1.0"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// version Supported</comment>

            <comment type="line">// returns the error message key for unsupported</comment>
            <comment type="line">// versions of XML with respect to the version of</comment>
            <comment type="line">// XML understood by this scanner.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>String</name>
                </type>
                <name>getVersionNotSupportedKey</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>"VersionNotSupported"</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getVersionNotSupportedKey: String</comment>

            <comment type="javadoc">/**
                * Scans surrogates and append them to the specified buffer.
                * &lt;p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; This assumes the current char has already been
                * identified as a high surrogate.
                *
                * @param buf The StringBuffer to append the read surrogates to.
                * @return True if it succeeded.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>boolean</name>
                </type>
                <name>scanSurrogates</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLStringBuffer</name>
                            </type>
                            <name>buf</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>high</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>scanChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>low</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityScanner</name>.
                                            <name>peekChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>XMLChar</name>.
                                        <name>isLowSurrogate</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>low</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"InvalidCharInContent"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>high</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>16</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityScanner</name>.
                                    <name>scanChar</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// convert surrogates to supplemental character</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>c</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>XMLChar</name>.
                                            <name>supplemental</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>char</name>)
                                                    <name>high</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>char</name>)
                                                    <name>low</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// supplemental character must be a valid XML character</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isInvalid</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>c</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportFatalError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"InvalidCharInContent"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>c</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>16</expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// fill in the buffer</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>char</name>)
                                            <name>high</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>char</name>)
                                            <name>low</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return <expr>true</expr>;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// scanSurrogates():boolean</comment>


            <comment type="javadoc">/**
                * Convenience function used in all XML scanners.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>reportFatalError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>msgId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fErrorReporter</name>.
                                    <name>reportError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XMLMessageFormatter</name>.
                                                <name>XML_DOMAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>msgId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>args</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XMLErrorReporter</name>.
                                                <name>SEVERITY_FATAL_ERROR</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// private methods</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>init</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEntityScanner</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// initialize vars</comment>
                    <expr_stmt>
                        <expr>
                            <name>fEntityDepth</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fReportEntity</name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fResourceIdentifier</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XMLScanner</comment>
</unit>
