<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xni\grammars\XMLSchemaDescription.java">
    <comment type="block">/*
        * Copyright 2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>grammars</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * All information specific to XML Schema grammars.
        *
        * @author Sandy Gao, IBM
        *
        * @version $Id: XMLSchemaDescription.java,v 1.4 2005/02/24 05:18:57 mrglavas Exp $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XMLSchemaDescription</name>
        <super>
            <extends>extends
                <name>XMLGrammarDescription</name>
            </extends>
        </super>
        <block>{

            <comment type="line">// used to indicate what triggered the call</comment>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &amp;lt;include&amp;gt;d by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_INCLUDE</name>   =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &amp;lt;redefine&amp;gt;d by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_REDEFINE</name>  =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &amp;lt;import&amp;gt;ed by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_IMPORT</name>    =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is being preparsed.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_PREPARSE</name>  =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered
                * by xsi:schemaLocation/noNamespaceSchemaLocation attribute(s) in the
                * instance document. This value is only used if we don't defer the loading
                * of schema documents.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_INSTANCE</name>  =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an element whose namespace is the target namespace
                * of this schema document. This value is only used if we do defer the
                * loading of schema documents until a component from that namespace is
                * referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_ELEMENT</name>   =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an attribute whose namespace is the target namespace
                * of this schema document. This value is only used if we do defer the
                * loading of schema documents until a component from that namespace is
                * referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_ATTRIBUTE</name> =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an "xsi:type" attribute, whose value (a QName) has
                * the target namespace of this schema document as its namespace.
                * This value is only used if we do defer the loading of schema documents
                * until a component from that namespace is referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_XSITYPE</name>   =
                    <init>
                        <expr>7</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Get the context. The returned value is one of the pre-defined
                * CONTEXT_xxx constants.
                *
                * @return the value indicating the context
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getContextType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * If the context is "include" or "redefine", then return the target
                * namespace of the enclosing schema document; otherwise, the expected
                * target namespace of this document.
                *
                * @return the expected/enclosing target namespace
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTargetNamespace</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * For import and references from the instance document, it's possible to
                * have multiple hints for one namespace. So this method returns an array,
                * which contains all location hints.
                *
                * @return an array of all location hints associated to the expected
                * target namespace
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getLocationHints</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * If a call is triggered by an element/attribute/xsi:type in the instance,
                * this call returns the name of such triggering component: the name of
                * the element/attribute, or the value of the xsi:type.
                *
                * @return the name of the triggering component
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>getTriggeringComponent</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * If a call is triggered by an attribute or xsi:type, then this method
                * returns the enclosing element of such element.
                *
                * @return the name of the enclosing element
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>getEnclosingElementName</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * If a call is triggered by an element/attribute/xsi:type in the instance,
                * this call returns all attribute of such element (or enclosing element).
                *
                * @return all attributes of the tiggering/enclosing element
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XMLAttributes</name>
                </type>
                <name>getAttributes</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
    <comment type="line">// XSDDescription</comment>
</unit>
