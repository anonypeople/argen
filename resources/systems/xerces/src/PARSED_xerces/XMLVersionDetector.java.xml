<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\XMLVersionDetector.java">
    <comment type="block">/*
        * Copyright 1999-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>impl</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>EOFException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>msg</name>.
            <name>XMLMessageFormatter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLComponentManager</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLInputSource</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class scans the version of the document to determine
        * which scanner to use: XML 1.1 or XML 1.0.
        * The version is scanned using XML 1.1. scanner.
        *
        * @xerces.internal
        *
        * @author Neil Graham, IBM
        * @author Elena Litani, IBM
        * @version $Id: XMLVersionDetector.java,v 1.14 2004/10/04 21:45:48 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XMLVersionDetector</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>XML11_VERSION</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>char</name>
                                <index>[]</index>
                            </name>
                            <block>{<expr>'1'</expr>, <expr>'.'</expr>, <expr>'1'</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">// property identifiers</comment>

            <comment type="javadoc">/** Property identifier: symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>SYMBOL_TABLE</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>SYMBOL_TABLE_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ERROR_REPORTER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ERROR_REPORTER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Property identifier: entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ENTITY_MANAGER</name> =
                    <init>
                        <expr>
                            <name><name>Constants</name>.
                                <name>XERCES_PROPERTY_PREFIX</name>
                            </name>
                            +
                            <name><name>Constants</name>.
                                <name>ENTITY_MANAGER_PROPERTY</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Symbol: "version". */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>String</name>
                    </type>
                    <name>fVersionSymbol</name> =
                    <init>
                        <expr>"version".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// symbol: [xml]:</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>fXMLSymbol</name> =
                    <init>
                        <expr>"[xml]".
                            <call>
                                <name>intern</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Error reporter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Entity manager. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLEntityManager</name>
                    </type>
                    <name>fEntityManager</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fEncoding</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XMLString</name>
                    </type>
                    <name>fVersionNum</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XMLString</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>char</name>
                        <index>[]</index>
                    </type>
                    <name>fExpectedVersionString</name> =
                    <init>
                        <expr>
                            <block>{<expr>'&lt;'</expr>, <expr>'?'</expr>, <expr>'x'</expr>, <expr>'m'</expr>, <expr>
                                'l'</expr>, <expr>' '</expr>, <expr>'v'</expr>, <expr>'e'</expr>, <expr>
                                'r'</expr>, <expr>'s'</expr>,
                                <expr>'i'</expr>, <expr>'o'</expr>, <expr>'n'</expr>, <expr>'='</expr>, <expr>' '</expr>, <expr>
                                    ' '</expr>, <expr>' '</expr>, <expr>' '</expr>, <expr>' '</expr>}
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                *
                *
                * @param componentManager The component manager.
                *
                * @throws SAXException Throws exception if required features and
                * properties cannot be found.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLComponentManager</name>
                            </type>
                            <name>componentManager</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Xerces properties</comment>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            = (<name>SymbolTable</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>SYMBOL_TABLE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fErrorReporter</name>
                            = (<name>XMLErrorReporter</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ERROR_REPORTER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEntityManager</name>
                            = (<name>XMLEntityManager</name>)
                            <call>
                                <name><name>componentManager</name>.
                                    <name>getProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ENTITY_MANAGER</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>14</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fExpectedVersionString</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>fExpectedVersionString</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = ' '
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    }
                </block>
            </function>
            <comment type="line">// reset(XMLComponentManager)</comment>

            <comment type="javadoc">/**
                * Reset the reference to the appropriate scanner given the version of the
                * document and start document scanning.
                * @param scanner - the scanner to use
                * @param version - the version of the document (XML 1.1 or XML 1.0).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocumentParsing</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityHandler</name>
                            </type>
                            <name>scanner</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>version</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>version</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XML_VERSION_1_0</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityManager</name>.
                                                <name>setScannerVersion</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>XML_VERSION_1_0</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fEntityManager</name>.
                                                <name>setScannerVersion</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Constants</name>.
                                                            <name>XML_VERSION_1_1</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <comment type="line">// Make sure the locator used by the error reporter is the current entity
                        scanner.
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fErrorReporter</name>.
                                    <name>setDocumentLocator</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fEntityManager</name>.
                                                    <name>getEntityScanner</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Note: above we reset fEntityScanner in the entity manager, thus in
                        startEntity
                    </comment>
                    <comment type="line">// in each scanner fEntityScanner field must be reset to reflect the change.
                    </comment>
                    <comment type="line">//</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityManager</name>.
                                    <name>setEntityHandler</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>scanner</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>scanner</name>.
                                    <name>startEntity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fXMLSymbol</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>fEntityManager</name>.
                                                    <name>getCurrentResourceIdentifier</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fEncoding</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * This methods scans the XML declaration to find out the version
                * (and provisional encoding) of the document.
                * The scanning is doing using XML 1.1 scanner.
                * @param inputSource
                * @return short - Constants.XML_VERSION_1_1 if document version 1.1,
                * otherwise Constants.XML_VERSION_1_0
                * @throws IOException
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>determineDocVersion</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLInputSource</name>
                            </type>
                            <name>inputSource</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEncoding</name>
                            =
                            <call>
                                <name><name>fEntityManager</name>.
                                    <name>setupCurrentEntity</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fXMLSymbol</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>inputSource</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// Must use XML 1.0 scanner to handle whitespace correctly</comment>
                    <comment type="line">// in the XML declaration.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fEntityManager</name>.
                                    <name>setScannerVersion</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XML_VERSION_1_0</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLEntityScanner</name>
                            </type>
                            <name>scanner</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fEntityManager</name>.
                                            <name>getEntityScanner</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>scanner</name>.
                                                <name>skipString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"&lt;?xml"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// definitely not a well-formed 1.1 doc!</comment>
                                        <return>return
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XML_VERSION_1_0</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>scanner</name>.
                                                <name>skipDeclSpaces</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>fixupCurrentEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fEntityManager</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fExpectedVersionString</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>5</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XML_VERSION_1_0</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>scanner</name>.
                                                <name>skipString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"version"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>fixupCurrentEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fEntityManager</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fExpectedVersionString</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>6</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XML_VERSION_1_0</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>skipDeclSpaces</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// Check if the next character is '='. If it is then consume it.
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>scanner</name>.
                                                <name>peekChar</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != '='
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>fixupCurrentEntity</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fEntityManager</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fExpectedVersionString</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>13</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <return>return
                                            <expr>
                                                <name><name>Constants</name>.
                                                    <name>XML_VERSION_1_0</name>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>scanChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>skipDeclSpaces</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>quoteChar</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>scanner</name>.
                                                    <name>scanChar</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fExpectedVersionString</name>
                                        <index>[<expr>14</expr>]
                                        </index>
                                    </name>
                                    = (<name>char</name>)
                                    <name>quoteChar</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>versionPos</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>versionPos</name>
                                        &lt;
                                        <name><name>XML11_VERSION</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>versionPos</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fExpectedVersionString</name>
                                                <index>[
                                                    <expr>15 +
                                                        <name>versionPos</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = (<name>char</name>)
                                            <call>
                                                <name><name>scanner</name>.
                                                    <name>scanChar</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <comment type="line">// REVISIT: should we check whether this equals quoteChar?</comment>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fExpectedVersionString</name>
                                        <index>[<expr>18</expr>]
                                        </index>
                                    </name>
                                    = (<name>char</name>)
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>scanChar</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>fixupCurrentEntity</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fEntityManager</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fExpectedVersionString</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>19</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>matched</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (<init>;</init>
                                <condition>
                                    <expr>
                                        <name>matched</name>
                                        &lt;
                                        <name><name>XML11_VERSION</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>matched</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fExpectedVersionString</name>
                                                    <index>[
                                                        <expr>15 +
                                                            <name>matched</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                !=
                                                <name>
                                                    <name>XML11_VERSION</name>
                                                    <index>[
                                                        <expr>
                                                            <name>matched</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <break>break;</break>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>matched</name>
                                        ==
                                        <name><name>XML11_VERSION</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return
                                        <expr>
                                            <name><name>Constants</name>.
                                                <name>XML_VERSION_1_1</name>
                                            </name>
                                        </expr>
                                        ;
                                    </return>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name><name>Constants</name>.
                                        <name>XML_VERSION_1_0</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            <comment type="line">// premature end of file</comment>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>EOFException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fErrorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLMessageFormatter</name>.
                                                            <name>XML_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"PrematureEOF"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLErrorReporter</name>.
                                                            <name>SEVERITY_FATAL_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name><name>Constants</name>.
                                            <name>XML_VERSION_1_0</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>

                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>

            <comment type="line">// This method prepends "length" chars from the char array,</comment>
            <comment type="line">// from offset 0, to the manager's fCurrentEntity.ch.</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>fixupCurrentEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLEntityManager</name>
                            </type>
                            <name>manager</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>scannedChars</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>XMLEntityManager</name>.
                                    <name>ScannedEntity</name>
                                </name>
                            </type>
                            <name>currentEntity</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>manager</name>.
                                            <name>getCurrentEntity</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>currentEntity</name>.
                                    <name>count</name>
                                </name>
                                -
                                <name><name>currentEntity</name>.
                                    <name>position</name>
                                </name>
                                +<name>length</name> &gt;
                                <name><name>currentEntity</name>.<name>ch</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">//resize array; this case is hard to imagine...</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                            <index>[]</index>
                                        </type>
                                        <name>tempCh</name> =
                                        <init>
                                            <expr>
                                                <name><name>currentEntity</name>.
                                                    <name>ch</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>currentEntity</name>.
                                            <name>ch</name>
                                        </name>
                                        = new
                                        <name>
                                            <name>char</name>
                                            <index>[
                                                <expr><name>length</name>+
                                                    <name><name>currentEntity</name>.
                                                        <name>count</name>
                                                    </name>
                                                    -
                                                    <name><name>currentEntity</name>.
                                                        <name>position</name>
                                                    </name>
                                                    +1
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>tempCh</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>tempCh</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>currentEntity</name>.
                                    <name>position</name>
                                </name>
                                &lt;
                                <name>length</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// have to move sensitive stuff out of the way...</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.
                                                <name>arraycopy</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>ch</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>currentEntity</name>.
                                                            <name>count</name>
                                                        </name>
                                                        -
                                                        <name><name>currentEntity</name>.
                                                            <name>position</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>currentEntity</name>.
                                            <name>count</name>
                                        </name>
                                        += <name>length</name>-
                                        <name><name>currentEntity</name>.
                                            <name>position</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// have to reintroduce some whitespace so this parses:</comment>
                                <for>for(
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name>=
                                            <init>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr><name>i</name>&lt;
                                            <name><name>currentEntity</name>.
                                                <name>position</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name><name>currentEntity</name>.
                                                <name>ch</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =' '
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                }
                            </block>
                        </else>
                    </if>
                    <comment type="line">// prepend contents...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>scannedChars</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>currentEntity</name>.
                                                <name>ch</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>currentEntity</name>.
                                <name>position</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>currentEntity</name>.
                                <name>baseCharOffset</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>currentEntity</name>.
                                <name>startPosition</name>
                            </name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>currentEntity</name>.
                                <name>columnNumber</name>
                            </name>
                            =
                            <name><name>currentEntity</name>.
                                <name>lineNumber</name>
                            </name>
                            = 1
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XMLVersionDetector</comment>

</unit>
