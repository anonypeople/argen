<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xpath\XPath.java">
    <comment type="block">/*
        * Copyright 2000-2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xpath</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>NamespaceContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Bare minimum XPath parser.
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        * @version $Id: XPath.java,v 1.18 2005/03/07 23:28:41 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XPath</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ALL</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_XPATH_PARSE</name> =
                    <init>
                        <expr>
                            <name>DEBUG_ALL</name>
                            || false
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ANY</name> =
                    <init>
                        <expr>
                            <name>DEBUG_XPATH_PARSE</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Expression. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                    </type>
                    <name>fExpression</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Symbol table. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Location paths. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>LocationPath</name>
                        <index>[]</index>
                    </type>
                    <name>fLocationPaths</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Constructs an XPath object from the specified expression. */</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XPath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xpath</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XPathException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fExpression</name>
                            =
                            <name>xpath</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>parseExpression</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>context</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(String,SymbolTable,NamespaceContext)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns a representation of all location paths for this XPath.
                * XPath = locationPath ( '|' locationPath)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LocationPath</name>
                    <index>[]</index>
                </type>
                <name>getLocationPaths</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LocationPath</name>
                                <index>[]</index>
                            </type>
                            <name>ret</name>=
                            <init>
                                <expr>new
                                    <name>
                                        <name>LocationPath</name>
                                        <index>[
                                            <expr>
                                                <name><name>fLocationPaths</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>ret</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =(<name>LocationPath</name>)
                                    <name>
                                        <name>fLocationPaths</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>clone</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>ret</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLocationPath(LocationPath)</comment>

            <comment type="javadoc">/** Returns a representation of the first location path for this XPath. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LocationPath</name>
                </type>
                <name>getLocationPath</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>LocationPath</name>)
                            <name>
                                <name>fLocationPaths</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                            .
                            <call>
                                <name>clone</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// getLocationPath(LocationPath)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Object methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Returns a string representation of this object. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>buf</name>=
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr><name>i</name>&gt;0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>buf</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"|"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>buf</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>fLocationPaths</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>toString</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>buf</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// toString():String</comment>

            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Used by the {@link #parseExpression(NamespaceContext)} method
                * to verify the assumption.
                *
                * If &lt;tt&gt;b&lt;/tt&gt; is false, this method throws XPathException
                * to report the error.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>check</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>b</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XPathException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name>b</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XPathException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"c-general-xpath"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Used by the {@link #parseExpression(NamespaceContext)} method
                * to build a {@link LocationPath} object from the accumulated
                * {@link Step}s.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>LocationPath</name>
                </type>
                <name>buildLocationPath</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>stepsVector</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XPathException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>stepsVector</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>check</name>
                                <argument_list>(
                                    <argument>
                                        <expr><name>size</name>!=0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Step</name>
                                <index>[]</index>
                            </type>
                            <name>steps</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Step</name>
                                        <index>[
                                            <expr>
                                                <name>size</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stepsVector</name>.
                                    <name>copyInto</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>steps</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stepsVector</name>.
                                    <name>removeAllElements</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>new
                            <call>
                                <name>LocationPath</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>steps</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method is implemented by using the XPathExprScanner and
                * examining the list of tokens that it returns.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>parseExpression</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>NamespaceContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XPathException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// tokens</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name><name>XPath</name>.
                                    <name>Tokens</name>
                                </name>
                            </type>
                            <name>xtokens</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>XPath</name>.
                                            <name>Tokens</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// scanner</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name><name>XPath</name>.
                                    <name>Scanner</name>
                                </name>
                            </type>
                            <name>scanner</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name><name>XPath</name>.
                                                <name>Scanner</name>
                                            </name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <specifier>protected</specifier>
                                                    <name>void</name>
                                                </type>
                                                <name>addToken</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name><name>XPath</name>.
                                                                    <name>Tokens</name>
                                                                </name>
                                                            </type>
                                                            <name>tokens</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>token</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <throws>throws
                                                    <argument>
                                                        <expr>
                                                            <name>XPathException</name>
                                                        </expr>
                                                    </argument>
                                                </throws>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_ATSIGN</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_NAMETEST_QNAME</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_OPERATOR_SLASH</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_PERIOD</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_NAMETEST_ANY</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                                                                </name>
                                                                ||
                                                                <name>token</name>
                                                                ==
                                                                <name><name>XPath</name>.<name>Tokens</name>.
                                                                    <name>EXPRTOKEN_OPERATOR_UNION</name>
                                                                </name>
                                                            </expr>
                                                            <comment type="line">//</comment>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>super</name>.
                                                                                <name>addToken</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tokens</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>token</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <return>return;</return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XPathException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"c-general-xpath"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fExpression</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>success</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>scanExpr</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xtokens</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>fExpression</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>success</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XPathException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"c-general-xpath"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>

                    <comment type="line">//fTokens.dumpTokens();</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>stepsVector</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>locationPathsVector</name>=
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// true when the next token should be 'Step' (as defined in</comment>
                    <comment type="line">// the production rule [3] of XML Schema P1 section 3.11.6</comment>
                    <comment type="line">// if false, we are expecting either '|' or '/'.</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// this is to make sure we can detect a token list like</comment>
                    <comment type="line">// 'abc' '/' '/' 'def' 'ghi'</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>expectingStep</name> =
                            <init>
                                <expr>true</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>xtokens</name>.
                                        <name>hasMore</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>int</name>
                                    </type>
                                    <name>token</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>xtokens</name>.
                                                    <name>nextToken</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>token</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_OPERATOR_UNION</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>check</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>!
                                                                    <name>expectingStep</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>locationPathsVector</name>.
                                                            <name>addElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>buildLocationPath</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>stepsVector</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>expectingStep</name>=true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>

                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_ATSIGN</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>check</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expectingStep</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Step</name>
                                                    </type>
                                                    <name>step</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>Step</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>Axis</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>Axis</name>.
                                                                                                <name>ATTRIBUTE</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>parseNodeTest</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    xtokens</name>.
                                                                                                    <name>nextToken
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>xtokens</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>context</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>stepsVector</name>.
                                                            <name>addElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>step</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>expectingStep</name>=false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_NAMETEST_ANY</name>
                                            </name>
                                        </expr>
                                        :
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                            </name>
                                        </expr>
                                        :
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_NAMETEST_QNAME</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>check</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expectingStep</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Step</name>
                                                    </type>
                                                    <name>step</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>Step</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>Axis</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>Axis</name>.
                                                                                                <name>CHILD</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>parseNodeTest</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>token</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>xtokens</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>context</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>stepsVector</name>.
                                                            <name>addElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>step</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>expectingStep</name>=false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>

                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_PERIOD</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>check</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expectingStep</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>expectingStep</name>=false
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// unless this is the first step in this location
                                                path,
                                            </comment>
                                            <comment type="line">// there's really no reason to keep them in
                                                LocationPath.
                                            </comment>
                                            <comment type="line">// This amounts to shorten "a/././b/./c" to "a/b/c".
                                            </comment>
                                            <comment type="line">// Also, the matcher fails to work correctly if XPath
                                            </comment>
                                            <comment type="line">// has those redundant dots.</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>stepsVector</name>.
                                                                <name>size</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        ==0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// build step</comment>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Axis</name>
                                                                </type>
                                                                <name>axis</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>Axis</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Axis</name>.
                                                                                            <name>SELF</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>NodeTest</name>
                                                                </type>
                                                                <name>nodeTest</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>NodeTest</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>NodeTest</name>.
                                                                                            <name>NODE</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>Step</name>
                                                                </type>
                                                                <name>step</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>Step</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>axis</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nodeTest</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>stepsVector</name>.
                                                                        <name>addElement</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>step</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <call>
                                                                        <name><name>xtokens</name>.
                                                                            <name>hasMore</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    &amp;&amp;
                                                                    <call>
                                                                        <name><name>xtokens</name>.
                                                                            <name>peekToken</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                    ==
                                                                    <name><name>XPath</name>.<name>Tokens</name>.
                                                                        <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// consume '//'</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>xtokens</name>.
                                                                                    <name>nextToken</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>

                                                                    <comment type="line">// build step</comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>axis</name>
                                                                            = new
                                                                            <call>
                                                                                <name>Axis</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>Axis</name>.
                                                                                                <name>DESCENDANT</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>nodeTest</name>
                                                                            = new
                                                                            <call>
                                                                                <name>NodeTest</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>NodeTest</name>.
                                                                                                <name>NODE</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>step</name>
                                                                            = new
                                                                            <call>
                                                                                <name>Step</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>axis</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>nodeTest</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>stepsVector</name>.
                                                                                    <name>addElement</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>step</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr><name>expectingStep</name>=true
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <break>break;</break>
                                            }
                                        </block>

                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <comment type="line">// this cannot appear in arbitrary position.</comment>
                                            <comment type="line">// it is only allowed right after '.' when</comment>
                                            <comment type="line">// '.' is the first token of a location path.</comment>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XPathException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"c-general-xpath"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_OPERATOR_SLASH</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>check</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>!
                                                                    <name>expectingStep</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr><name>expectingStep</name>=true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <default>default:
                                        <comment type="line">// we should have covered all the tokens that we can
                                            possibly see.
                                        </comment>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InternalError</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </while>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>check</name>
                                <argument_list>(
                                    <argument>
                                        <expr>!
                                            <name>expectingStep</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>locationPathsVector</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>buildLocationPath</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>stepsVector</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// save location path</comment>
                    <expr_stmt>
                        <expr><name>fLocationPaths</name>=new
                            <name>
                                <name>LocationPath</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>locationPathsVector</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>locationPathsVector</name>.
                                    <name>copyInto</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fLocationPaths</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>


                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_XPATH_PARSE</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"&gt;&gt;&gt; "+
                                                        <name>fLocationPaths</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>
            <comment type="line">// parseExpression(SymbolTable,NamespaceContext)</comment>

            <comment type="javadoc">/**
                * Used by {@link #parseExpression} to parse a node test
                * from the token list.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>NodeTest</name>
                </type>
                <name>parseNodeTest</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>typeToken</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Tokens</name>
                            </type>
                            <name>xtokens</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>NamespaceContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XPathException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>typeToken</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>XPath</name>.<name>Tokens</name>.
                                        <name>EXPRTOKEN_NAMETEST_ANY</name>
                                    </name>
                                </expr>
                                :
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>NodeTest</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>NodeTest</name>.
                                                            <name>WILDCARD</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XPath</name>.<name>Tokens</name>.
                                        <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                    </name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name><name>XPath</name>.<name>Tokens</name>.
                                        <name>EXPRTOKEN_NAMETEST_QNAME</name>
                                    </name>
                                </expr>
                                :
                                <comment type="line">// consume QName token</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>prefix</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>xtokens</name>.
                                                        <name>nextTokenAsString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>uri</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>context</name>
                                            != <name>null</name> &amp;&amp; <name>prefix</name> !=
                                            <name><name>XMLSymbols</name>.
                                                <name>EMPTY_STRING</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>uri</name>
                                                    =
                                                    <call>
                                                        <name><name>context</name>.
                                                            <name>getURI</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>prefix</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>prefix</name>
                                            !=
                                            <name><name>XMLSymbols</name>.
                                                <name>EMPTY_STRING</name>
                                            </name>
                                            &amp;&amp; <name>context</name> != <name>null</name> &amp;&amp; <name>uri
                                        </name> ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XPathException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"c-general-xpath-ns"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <if>if
                                    <condition>(
                                        <expr><name>typeToken</name>==
                                            <name><name>XPath</name>.<name>Tokens</name>.
                                                <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return
                                            <expr>new
                                                <call>
                                                    <name>NodeTest</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>prefix</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>uri</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                    </then>
                                </if>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>localpart</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>xtokens</name>.
                                                        <name>nextTokenAsString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>rawname</name> =
                                        <init>
                                            <expr>
                                                <name>prefix</name>
                                                !=
                                                <name><name>XMLSymbols</name>.
                                                    <name>EMPTY_STRING</name>
                                                </name>
                                                ?
                                                <call>
                                                    <name><name>fSymbolTable</name>.
                                                        <name>addSymbol</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr><name>prefix</name>+':'+
                                                                <name>localpart</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                                :
                                                <name>localpart</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <return>return
                                    <expr>new
                                        <call>
                                            <name>NodeTest</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>QName</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prefix</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>localpart</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>rawname</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>uri</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>

                            </case>
                            <default>default:
                                <comment type="line">// assertion error</comment>
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>InternalError</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                            </default>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </function>


            <comment type="line">//</comment>
            <comment type="line">// Classes</comment>
            <comment type="line">//</comment>

            <comment type="line">// location path information</comment>

            <comment type="javadoc">/**
                * A location path representation for an XPath expression.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class
                <name>LocationPath</name>
                <super>
                    <implements>implements
                        <name>Cloneable</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** List of steps. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Step</name>
                                <index>[]</index>
                            </type>
                            <name>steps</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Creates a location path from a series of steps. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>LocationPath</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>
                                            <name>Step</name>
                                            <index>[]</index>
                                        </name>
                                    </type>
                                    <name>steps</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>steps</name>
                                    </name>
                                    =
                                    <name>steps</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(Step[])</comment>

                    <comment type="javadoc">/** Copy constructor. */</comment>
                    <constructor>
                        <specifier>protected</specifier>
                        <name>LocationPath</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>LocationPath</name>
                                    </type>
                                    <name>path</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>steps</name>
                                    = new
                                    <name>
                                        <name>Step</name>
                                        <index>[
                                            <expr>
                                                <name><name>path</name>.<name>steps</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>steps</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = (<name>Step</name>)
                                            <name><name>path</name>.
                                                <name>steps</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>clone</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(LocationPath)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Object methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns a string representation of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>str</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>i</name>
                                                &gt; 0 &amp;&amp; (
                                                <name>
                                                    <name>steps</name>
                                                    <index>[
                                                        <expr><name>i</name>-1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <name><name>axis</name>.
                                                    <name>type</name>
                                                </name>
                                                !=
                                                <name><name>Axis</name>.
                                                    <name>DESCENDANT</name>
                                                </name>
                                                &amp;&amp;
                                                <name>
                                                    <name>steps</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <name><name>axis</name>.
                                                    <name>type</name>
                                                </name>
                                                !=
                                                <name><name>Axis</name>.
                                                    <name>DESCENDANT</name>
                                                </name>
                                                )
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'/'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>steps</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>toString</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <comment type="line">// DEBUG: This code is just for debugging and should *not*</comment>
                            <comment type="line">// be left in because it will mess up hashcodes of</comment>
                            <comment type="line">// serialized versions of this object. -Ac</comment>
                            <if>if
                                <condition>(<expr>false</expr>)
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'['</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>s</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>super</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>s</name>.
                                                                        <name>substring</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>s</name>.
                                                                                        <name>indexOf</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>'@'</expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>']'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// toString():String</comment>

                    <comment type="javadoc">/** Returns a clone of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>clone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>LocationPath</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// clone():Object</comment>

                    }
                </block>
            </class>
            <comment type="line">// class locationPath</comment>

            <comment type="javadoc">/**
                * A location path step comprised of an axis and node test.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class
                <name>Step</name>
                <super>
                    <implements>implements
                        <name>Cloneable</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Axis. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>Axis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Node test. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>NodeTest</name>
                            </type>
                            <name>nodeTest</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs a step from an axis and node test. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Step</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Axis</name>
                                    </type>
                                    <name>axis</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>NodeTest</name>
                                    </type>
                                    <name>nodeTest</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>axis</name>
                                    </name>
                                    =
                                    <name>axis</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>nodeTest</name>
                                    </name>
                                    =
                                    <name>nodeTest</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(Axis,NodeTest)</comment>

                    <comment type="javadoc">/** Copy constructor. */</comment>
                    <constructor>
                        <specifier>protected</specifier>
                        <name>Step</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Step</name>
                                    </type>
                                    <name>step</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>axis</name>
                                    = (<name>Axis</name>)
                                    <call>
                                        <name><name>step</name>.<name>axis</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>nodeTest</name>
                                    = (<name>NodeTest</name>)
                                    <call>
                                        <name><name>step</name>.<name>nodeTest</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(Step)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Object methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns a string representation of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>Axis</name>.
                                            <name>SELF</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>"."</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>Axis</name>.
                                            <name>ATTRIBUTE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>"@" +
                                                <call>
                                                    <name><name>nodeTest</name>.
                                                        <name>toString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>Axis</name>.
                                            <name>CHILD</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <call>
                                                    <name><name>nodeTest</name>.
                                                        <name>toString</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>Axis</name>.
                                            <name>DESCENDANT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>"//"</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>"??? ("+
                                    <name><name>axis</name>.
                                        <name>type</name>
                                    </name>
                                    +')'
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// toString():String</comment>

                    <comment type="javadoc">/** Returns a clone of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>clone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Step</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// clone():Object</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Step</comment>

            <comment type="javadoc">/**
                * Axis.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class
                <name>Axis</name>
                <super>
                    <implements>implements
                        <name>Cloneable</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Constants</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Type: child. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>CHILD</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type: attribute. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>ATTRIBUTE</name> =
                            <init>
                                <expr>2</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type: self. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>SELF</name> =
                            <init>
                                <expr>3</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>


                    <comment type="javadoc">/** Type: descendant. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>DESCENDANT</name> =
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Axis type. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>short</name>
                            </type>
                            <name>type</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs an axis with the specified type. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Axis</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(short)</comment>

                    <comment type="javadoc">/** Copy constructor. */</comment>
                    <constructor>
                        <specifier>protected</specifier>
                        <name>Axis</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Axis</name>
                                    </type>
                                    <name>axis</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    =
                                    <name><name>axis</name>.
                                        <name>type</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(Axis)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Object methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns a string representation of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name>CHILD</name>
                                        </expr>
                                        :
                                        <return>return <expr>"child"</expr>;
                                        </return>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>ATTRIBUTE</name>
                                        </expr>
                                        :
                                        <return>return <expr>"attribute"</expr>;
                                        </return>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>SELF</name>
                                        </expr>
                                        :
                                        <return>return <expr>"self"</expr>;
                                        </return>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>DESCENDANT</name>
                                        </expr>
                                        :
                                        <return>return <expr>"descendant"</expr>;
                                        </return>
                                    </case>
                                    }
                                </block>
                            </switch>
                            <return>return <expr>"???"</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// toString():String</comment>

                    <comment type="javadoc">/** Returns a clone of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>clone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>Axis</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// clone():Object</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Axis</comment>

            <comment type="javadoc">/**
                * Node test.
                *
                * @xerces.internal
                *
                * @author Andy Clark, IBM
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class
                <name>NodeTest</name>
                <super>
                    <implements>implements
                        <name>Cloneable</name>
                    </implements>
                </super>
                <block>{

                    <comment type="line">//</comment>
                    <comment type="line">// Constants</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Type: qualified name. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>QNAME</name> =
                            <init>
                                <expr>1</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type: wildcard. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>WILDCARD</name> =
                            <init>
                                <expr>2</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type: node. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>NODE</name> =
                            <init>
                                <expr>3</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Type: namespace */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>short</name>
                            </type>
                            <name>NAMESPACE</name>=
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Node test type. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <name>short</name>
                            </type>
                            <name>type</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** Node qualified name. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>final</specifier>
                                <name>QName</name>
                            </type>
                            <name>name</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>QName</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs a node test of type WILDCARD or NODE. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>NodeTest</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>short</name>
                                    </type>
                                    <name>type</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>type</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(int)</comment>

                    <comment type="javadoc">/** Constructs a node test of type QName. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>NodeTest</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>QName</name>
                                    </type>
                                    <name>name</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>QNAME</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>name</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>name</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(QName)</comment>
                    <comment type="javadoc">/** Constructs a node test of type Namespace. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>NodeTest</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>prefix</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>uri</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>type</name>
                                    </name>
                                    =
                                    <name>NAMESPACE</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>name</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>prefix</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>uri</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(String,String)</comment>

                    <comment type="javadoc">/** Copy constructor. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>NodeTest</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>NodeTest</name>
                                    </type>
                                    <name>nodeTest</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    =
                                    <name><name>nodeTest</name>.
                                        <name>type</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>name</name>.
                                            <name>setValues</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>nodeTest</name>.
                                                        <name>name</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(NodeTest)</comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Object methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Returns a string representation of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>toString</name>
                        <parameter_list>()</parameter_list>
                        <block>{

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>type</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name>QNAME</name>
                                        </expr>
                                        :
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>name</name>.<name>prefix</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name><name>name</name>.
                                                                        <name>uri</name>
                                                                    </name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <return>return
                                                                        <expr>
                                                                            <name><name>name</name>.
                                                                                <name>prefix</name>
                                                                            </name>
                                                                            +':'+
                                                                            <name><name>name</name>.
                                                                                <name>localpart</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>"{"+
                                                                <name><name>name</name>.
                                                                    <name>uri</name>
                                                                </name>
                                                                +'}'+
                                                                <name><name>name</name>.
                                                                    <name>prefix</name>
                                                                </name>
                                                                +':'+
                                                                <name><name>name</name>.
                                                                    <name>localpart</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return
                                                <expr>
                                                    <name><name>name</name>.
                                                        <name>localpart</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>NAMESPACE</name>
                                        </expr>
                                        :
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>name</name>.<name>prefix</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        !=0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name><name>name</name>.
                                                                        <name>uri</name>
                                                                    </name>
                                                                    !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <return>return
                                                                        <expr>
                                                                            <name><name>name</name>.
                                                                                <name>prefix</name>
                                                                            </name>
                                                                            +":*"
                                                                        </expr>
                                                                        ;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <return>return
                                                            <expr>"{"+
                                                                <name><name>name</name>.
                                                                    <name>uri</name>
                                                                </name>
                                                                +'}'+
                                                                <name><name>name</name>.
                                                                    <name>prefix</name>
                                                                </name>
                                                                +":*"
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <return>return <expr>"???:*"</expr>;
                                            </return>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>WILDCARD</name>
                                        </expr>
                                        :
                                        <block>{
                                            <return>return <expr>"*"</expr>;
                                            </return>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name>NODE</name>
                                        </expr>
                                        :
                                        <block>{
                                            <return>return <expr>"node()"</expr>;
                                            </return>
                                            }
                                        </block>
                                    </case>
                                    }
                                </block>
                            </switch>
                            <return>return <expr>"???"</expr>;
                            </return>

                            }
                        </block>
                    </function>
                    <comment type="line">// toString():String</comment>

                    <comment type="javadoc">/** Returns a clone of this object. */</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Object</name>
                        </type>
                        <name>clone</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>new
                                    <call>
                                        <name>NodeTest</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">// clone():Object</comment>

                    }
                </block>
            </class>
            <comment type="line">// class NodeTest</comment>

            <comment type="line">// xpath implementation</comment>

            <comment type="line">// NOTE: The XPath implementation classes are kept internal because</comment>
            <comment type="line">// this implementation is just a temporary hack until a better</comment>
            <comment type="line">// and/or more appropriate implementation can be written.</comment>
            <comment type="line">// keeping the code in separate source files would "muddy" the</comment>
            <comment type="line">// CVS directory when it's not needed. -Ac</comment>

            <comment type="javadoc">/**
                * List of tokens.
                *
                * @xerces.internal
                *
                * @author Glenn Marcy, IBM
                * @author Andy Clark, IBM
                *
                * @version $Id: XPath.java,v 1.18 2005/03/07 23:28:41 mrglavas Exp $
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier>
                <specifier>final</specifier> class <name>Tokens</name>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>boolean</name>
                            </type>
                            <name>DUMP_TOKENS</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * [28] ExprToken ::= '(' | ')' | '[' | ']' | '.' | '..' | '@' | ',' | '::'
                        * | NameTest | NodeType | Operator | FunctionName
                        * | AxisName | Literal | Number | VariableReference
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>public</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>EXPRTOKEN_OPEN_PAREN</name>
                            =
                            <init>
                                <expr>0</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_CLOSE_PAREN</name>
                            =
                            <init>
                                <expr>1</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPEN_BRACKET</name>
                            =
                            <init>
                                <expr>2</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_CLOSE_BRACKET</name>
                            =
                            <init>
                                <expr>3</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_PERIOD</name>
                            =
                            <init>
                                <expr>4</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_DOUBLE_PERIOD</name>
                            =
                            <init>
                                <expr>5</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_ATSIGN</name>
                            =
                            <init>
                                <expr>6</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_COMMA</name>
                            =
                            <init>
                                <expr>7</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_DOUBLE_COLON</name>
                            =
                            <init>
                                <expr>8</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [37] NameTest ::= '*' | NCName ':' '*' | QName</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// followed by symbol handle of NCName or QName</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_NAMETEST_ANY</name>
                            =
                            <init>
                                <expr>9</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                            =
                            <init>
                                <expr>10</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_NAMETEST_QNAME</name>
                            =
                            <init>
                                <expr>11</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [38] NodeType ::= 'comment' | 'text' | 'processing-instruction' |
                                'node'
                            </comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_NODETYPE_COMMENT</name>
                            =
                            <init>
                                <expr>12</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_NODETYPE_TEXT</name>
                            =
                            <init>
                                <expr>13</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_NODETYPE_PI</name>
                            =
                            <init>
                                <expr>14</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_NODETYPE_NODE</name>
                            =
                            <init>
                                <expr>15</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [32] Operator ::= OperatorName</comment>
                            <comment type="line">// | MultiplyOperator</comment>
                            <comment type="line">// | '/' | '//' | '|' | '+' | '-' | '=' | '!=' | '&lt;' | '&lt;=' | '&gt;'
                                | '&gt;='
                            </comment>
                            <comment type="line">// [33] OperatorName ::= 'and' | 'or' | 'mod' | 'div'</comment>
                            <comment type="line">// [34] MultiplyOperator ::= '*'</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_OPERATOR_AND</name>
                            =
                            <init>
                                <expr>16</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_OR</name>
                            =
                            <init>
                                <expr>17</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_MOD</name>
                            =
                            <init>
                                <expr>18</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_DIV</name>
                            =
                            <init>
                                <expr>19</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_MULT</name>
                            =
                            <init>
                                <expr>20</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_SLASH</name>
                            =
                            <init>
                                <expr>21</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                            =
                            <init>
                                <expr>22</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_UNION</name>
                            =
                            <init>
                                <expr>23</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_PLUS</name>
                            =
                            <init>
                                <expr>24</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_MINUS</name>
                            =
                            <init>
                                <expr>25</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_EQUAL</name>
                            =
                            <init>
                                <expr>26</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_NOT_EQUAL</name>
                            =
                            <init>
                                <expr>27</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_LESS</name>
                            =
                            <init>
                                <expr>28</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_LESS_EQUAL</name>
                            =
                            <init>
                                <expr>29</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_GREATER</name>
                            =
                            <init>
                                <expr>30</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_OPERATOR_GREATER_EQUAL</name>
                            =
                            <init>
                                <expr>31</expr>
                            </init>
                            ,

                            <comment type="line">//EXPRTOKEN_FIRST_OPERATOR = EXPRTOKEN_OPERATOR_AND,</comment>
                            <comment type="line">//EXPRTOKEN_LAST_OPERATOR = EXPRTOKEN_OPERATOR_GREATER_EQUAL,</comment>

                            <comment type="line">//</comment>
                            <comment type="line">// [35] FunctionName ::= QName - NodeType</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// followed by symbol handle</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_FUNCTION_NAME</name>
                            =
                            <init>
                                <expr>32</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [6] AxisName ::= 'ancestor' | 'ancestor-or-self'</comment>
                            <comment type="line">// | 'attribute'</comment>
                            <comment type="line">// | 'child'</comment>
                            <comment type="line">// | 'descendant' | 'descendant-or-self'</comment>
                            <comment type="line">// | 'following' | 'following-sibling'</comment>
                            <comment type="line">// | 'namespace'</comment>
                            <comment type="line">// | 'parent'</comment>
                            <comment type="line">// | 'preceding' | 'preceding-sibling'</comment>
                            <comment type="line">// | 'self'</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_AXISNAME_ANCESTOR</name>
                            =
                            <init>
                                <expr>33</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF</name>
                            =
                            <init>
                                <expr>34</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_ATTRIBUTE</name>
                            =
                            <init>
                                <expr>35</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_CHILD</name>
                            =
                            <init>
                                <expr>36</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_DESCENDANT</name>
                            =
                            <init>
                                <expr>37</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF</name>
                            =
                            <init>
                                <expr>38</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_FOLLOWING</name>
                            =
                            <init>
                                <expr>39</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING</name>
                            =
                            <init>
                                <expr>40</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_NAMESPACE</name>
                            =
                            <init>
                                <expr>41</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_PARENT</name>
                            =
                            <init>
                                <expr>42</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_PRECEDING</name>
                            =
                            <init>
                                <expr>43</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_PRECEDING_SIBLING</name>
                            =
                            <init>
                                <expr>44</expr>
                            </init>
                            ,
                            <name>EXPRTOKEN_AXISNAME_SELF</name>
                            =
                            <init>
                                <expr>45</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [29] Literal ::= '"' [^"]* '"' | "'" [^']* "'"</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// followed by symbol handle for literal</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_LITERAL</name>
                            =
                            <init>
                                <expr>46</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [30] Number ::= Digits ('.' Digits?)? | '.' Digits</comment>
                            <comment type="line">// [31] Digits ::= [0-9]+</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// followed by number handle</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_NUMBER</name>
                            =
                            <init>
                                <expr>47</expr>
                            </init>
                            ,
                            <comment type="line">//</comment>
                            <comment type="line">// [36] VariableReference ::= '$' QName</comment>
                            <comment type="line">//</comment>
                            <comment type="line">// followed by symbol handle for QName</comment>
                            <comment type="line">//</comment>
                            <name>EXPRTOKEN_VARIABLE_REFERENCE</name>
                            =
                            <init>
                                <expr>48</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>fgTokenNames</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>"EXPRTOKEN_OPEN_PAREN"</expr>,
                                        <expr>"EXPRTOKEN_CLOSE_PAREN"</expr>,
                                        <expr>"EXPRTOKEN_OPEN_BRACKET"</expr>,
                                        <expr>"EXPRTOKEN_CLOSE_BRACKET"</expr>,
                                        <expr>"EXPRTOKEN_PERIOD"</expr>,
                                        <expr>"EXPRTOKEN_DOUBLE_PERIOD"</expr>,
                                        <expr>"EXPRTOKEN_ATSIGN"</expr>,
                                        <expr>"EXPRTOKEN_COMMA"</expr>,
                                        <expr>"EXPRTOKEN_DOUBLE_COLON"</expr>,
                                        <expr>"EXPRTOKEN_NAMETEST_ANY"</expr>,
                                        <expr>"EXPRTOKEN_NAMETEST_NAMESPACE"</expr>,
                                        <expr>"EXPRTOKEN_NAMETEST_QNAME"</expr>,
                                        <expr>"EXPRTOKEN_NODETYPE_COMMENT"</expr>,
                                        <expr>"EXPRTOKEN_NODETYPE_TEXT"</expr>,
                                        <expr>"EXPRTOKEN_NODETYPE_PI"</expr>,
                                        <expr>"EXPRTOKEN_NODETYPE_NODE"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_AND"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_OR"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_MOD"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_DIV"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_MULT"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_SLASH"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_DOUBLE_SLASH"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_UNION"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_PLUS"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_MINUS"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_EQUAL"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_NOT_EQUAL"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_LESS"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_LESS_EQUAL"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_GREATER"</expr>,
                                        <expr>"EXPRTOKEN_OPERATOR_GREATER_EQUAL"</expr>,
                                        <expr>"EXPRTOKEN_FUNCTION_NAME"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_ANCESTOR"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_ATTRIBUTE"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_CHILD"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_DESCENDANT"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_FOLLOWING"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_NAMESPACE"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_PARENT"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_PRECEDING"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_PRECEDING_SIBLING"</expr>,
                                        <expr>"EXPRTOKEN_AXISNAME_SELF"</expr>,
                                        <expr>"EXPRTOKEN_LITERAL"</expr>,
                                        <expr>"EXPRTOKEN_NUMBER"</expr>,
                                        <expr>"EXPRTOKEN_VARIABLE_REFERENCE"</expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        *
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>INITIAL_TOKEN_COUNT</name> =
                            <init>
                                <expr>1 &lt;&lt; 8</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>fTokens</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <name>INITIAL_TOKEN_COUNT</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fTokenCount</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// for writing</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>SymbolTable</name>
                            </type>
                            <name>fSymbolTable</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// REVISIT: Code something better here. -Ac</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name><name>java</name>.<name>util</name>.
                                    <name>Hashtable</name>
                                </name>
                            </type>
                            <name>fSymbolMapping</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>java</name>.<name>util</name>.
                                            <name>Hashtable</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// REVISIT: Code something better here. -Ac</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name><name>java</name>.<name>util</name>.
                                    <name>Hashtable</name>
                                </name>
                            </type>
                            <name>fTokenNames</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>java</name>.<name>util</name>.
                                            <name>Hashtable</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Current position in the token list.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fCurrentTokenIndex</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <constructor>
                        <specifier>public</specifier>
                        <name>Tokens</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fSymbolTable</name>
                                    =
                                    <name>symbolTable</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>String</name>
                                        <index>[]</index>
                                    </type>
                                    <name>symbols</name> =
                                    <init>
                                        <expr>
                                            <block>{
                                                <expr>"ancestor"</expr>,     <expr>"ancestor-or-self"</expr>,     <expr>
                                                    "attribute"</expr>,
                                                <expr>"child"</expr>,        <expr>"descendant"</expr>,           <expr>
                                                    "descendant-or-self"</expr>,
                                                <expr>"following"</expr>,    <expr>"following-sibling"</expr>,    <expr>
                                                    "namespace"</expr>,
                                                <expr>"parent"</expr>,       <expr>"preceding"</expr>,            <expr>
                                                    "preceding-sibling"</expr>,
                                                <expr>"self"</expr>,
                                                }
                                            </block>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name><name>symbols</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>fSymbolMapping</name>.
                                                    <name>put</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>fSymbolTable</name>.
                                                                    <name>addSymbol</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>symbols</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>new
                                                            <call>
                                                                <name>Integer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPEN_PAREN</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPEN_PAREN"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_CLOSE_PAREN</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_CLOSE_PAREN"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPEN_BRACKET</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPEN_BRACKET"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_CLOSE_BRACKET</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_CLOSE_BRACKET"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_PERIOD</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_PERIOD"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_DOUBLE_PERIOD</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_DOUBLE_PERIOD"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_ATSIGN</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_ATSIGN"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_COMMA</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_COMMA"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_DOUBLE_COLON</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_DOUBLE_COLON"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NAMETEST_ANY</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NAMETEST_ANY"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NAMETEST_NAMESPACE"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NAMETEST_QNAME</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NAMETEST_QNAME"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NODETYPE_COMMENT</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NODETYPE_COMMENT"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NODETYPE_TEXT</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NODETYPE_TEXT"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NODETYPE_PI</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NODETYPE_PI"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NODETYPE_NODE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NODETYPE_NODE"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_AND</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_AND"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_OR</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_OR"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_MOD</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_MOD"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_DIV</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_DIV"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_MULT</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_MULT"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_SLASH</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_SLASH"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_DOUBLE_SLASH"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_UNION</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_UNION"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_PLUS</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_PLUS"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_MINUS</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_MINUS"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_EQUAL</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_EQUAL"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_NOT_EQUAL</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_NOT_EQUAL"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_LESS</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_LESS"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_LESS_EQUAL</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_LESS_EQUAL"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_GREATER</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_GREATER"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_OPERATOR_GREATER_EQUAL</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_OPERATOR_GREATER_EQUAL"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_FUNCTION_NAME</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_FUNCTION_NAME"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_ANCESTOR</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_ANCESTOR"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_ATTRIBUTE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_ATTRIBUTE"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_CHILD</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_CHILD"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_DESCENDANT</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_DESCENDANT"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_FOLLOWING</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_FOLLOWING"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_NAMESPACE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_NAMESPACE"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_PARENT</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_PARENT"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_PRECEDING</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_PRECEDING"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_PRECEDING_SIBLING</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_PRECEDING_SIBLING"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_AXISNAME_SELF</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_AXISNAME_SELF"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_LITERAL</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_LITERAL"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_NUMBER</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_NUMBER"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>EXPRTOKEN_VARIABLE_REFERENCE</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"EXPRTOKEN_VARIABLE_REFERENCE"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="line">//</comment>
                    <comment type="line">// Public methods</comment>
                    <comment type="line">//</comment>

                    <comment type="line">// public String getTokenName(int token) {</comment>
                    <comment type="line">// if (token &lt; 0 || token &gt;= fgTokenNames.length)</comment>
                    <comment type="line">// return null;</comment>
                    <comment type="line">// return fgTokenNames[token];</comment>
                    <comment type="line">// }</comment>
                    <comment type="line">//</comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>getTokenString</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>String</name>)
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>token</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>tokenStr</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>tokenInt</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>fTokenNames</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>tokenStr</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>tokenInt</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>tokenInt</name>
                                                = new
                                                <call>
                                                    <name>Integer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fTokenNames</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fTokenNames</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tokenInt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tokenStr</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>addToken</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>tokenInt</name>.
                                                            <name>intValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fTokens</name>
                                                <index>[
                                                    <expr>
                                                        <name>fTokenCount</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>token</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>ArrayIndexOutOfBoundsException</name>
                                            </type>
                                            <name>ex</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>oldList</name> =
                                                <init>
                                                    <expr>
                                                        <name>fTokens</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fTokens</name>
                                                = new
                                                <name>
                                                    <name>int</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fTokenCount</name>
                                                            &lt;&lt; 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>oldList</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fTokens</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fTokenCount</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fTokens</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fTokenCount</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>token</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </catch>
                            </try>
                            <expr_stmt>
                                <expr><name>fTokenCount</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// public int getTokenCount() {</comment>
                    <comment type="line">// return fTokenCount;</comment>
                    <comment type="line">// }</comment>
                    <comment type="line">// public int getToken(int tokenIndex) {</comment>
                    <comment type="line">// return fTokens[tokenIndex];</comment>
                    <comment type="line">// }</comment>

                    <comment type="javadoc">/**
                        * Resets the current position to the head of the token list.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>rewind</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr><name>fCurrentTokenIndex</name>=0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="javadoc">/**
                        * Returns true if the {@link #getNextToken()} method
                        * returns a valid token.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>hasMore</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr><name>fCurrentTokenIndex</name>&lt;
                                    <name>fTokenCount</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="javadoc">/**
                        * Obtains the token at the current position, then advance
                        * the current position by one.
                        *
                        * If there's no such next token, this method throws
                        * &lt;tt&gt;new XPathException("c-general-xpath");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>nextToken</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr><name>fCurrentTokenIndex</name>==
                                        <name>fTokenCount</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>XPathException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"c-general-xpath"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>
                                        <name>fTokens</name>
                                        <index>[
                                            <expr><name>fCurrentTokenIndex</name>++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="javadoc">/**
                        * Obtains the token at the current position, without advancing
                        * the current position.
                        *
                        * If there's no such next token, this method throws
                        * &lt;tt&gt;new XPathException("c-general-xpath");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>peekToken</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr><name>fCurrentTokenIndex</name>==
                                        <name>fTokenCount</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>XPathException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"c-general-xpath"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>
                                        <name>fTokens</name>
                                        <index>[
                                            <expr>
                                                <name>fCurrentTokenIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="javadoc">/**
                        * Obtains the token at the current position as a String.
                        *
                        * If there's no current token or if the current token
                        * is not a string token, this method throws
                        * &lt;tt&gt;new XPathException("c-general-xpath");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>String</name>
                        </type>
                        <name>nextTokenAsString</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>s</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getTokenString</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>nextToken</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr><name>s</name>==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <throw>throw
                                        <expr>new
                                            <call>
                                                <name>XPathException</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"c-general-xpath"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </throw>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>s</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>dumpTokens</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <comment type="line">//if (DUMP_TOKENS) {</comment>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>fTokenCount</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>fTokens</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPEN_PAREN</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPEN_PAREN/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_CLOSE_PAREN</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;CLOSE_PAREN/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPEN_BRACKET</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPEN_BRACKET/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_CLOSE_BRACKET</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;CLOSE_BRACKET/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_PERIOD</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;PERIOD/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_DOUBLE_PERIOD</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;DOUBLE_PERIOD/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_ATSIGN</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;ATSIGN/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_COMMA</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;COMMA/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_DOUBLE_COLON</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;DOUBLE_COLON/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NAMETEST_ANY</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NAMETEST_ANY/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NAMETEST_NAMESPACE</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NAMETEST_NAMESPACE"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" prefix=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NAMETEST_QNAME</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NAMETEST_QNAME"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>fTokens</name>
                                                                <index>[
                                                                    <expr>++
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            != -1
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" prefix=\"" +
                                                                                <call>
                                                                                    <name>getTokenString</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>fTokens</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                + "\""
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" localpart=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NODETYPE_COMMENT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NODETYPE_COMMENT/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NODETYPE_TEXT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NODETYPE_TEXT/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NODETYPE_PI</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NODETYPE_PI/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NODETYPE_NODE</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NODETYPE_NODE/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_AND</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_AND/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_OR</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_OR/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_MOD</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_MOD/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_DIV</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_DIV/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_MULT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_MULT/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_SLASH</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_SLASH/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>i</name>
                                                            + 1 &lt;
                                                            <name>fTokenCount</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.<name>out</name>.
                                                                            <name>println</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.<name>out</name>.
                                                                            <name>print</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>" "</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_DOUBLE_SLASH</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_DOUBLE_SLASH/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_UNION</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_UNION/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_PLUS</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_PLUS/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_MINUS</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_MINUS/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_EQUAL</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_EQUAL/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_NOT_EQUAL</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_NOT_EQUAL/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_LESS</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_LESS/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_LESS_EQUAL</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_LESS_EQUAL/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_GREATER</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_GREATER/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_OPERATOR_GREATER_EQUAL</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;OPERATOR_GREATER_EQUAL/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_FUNCTION_NAME</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;FUNCTION_NAME"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>fTokens</name>
                                                                <index>[
                                                                    <expr>++
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            != -1
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" prefix=\"" +
                                                                                <call>
                                                                                    <name>getTokenString</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>fTokens</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                + "\""
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" localpart=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_ANCESTOR</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_ANCESTOR/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_ANCESTOR_OR_SELF/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_ATTRIBUTE</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_ATTRIBUTE/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_CHILD</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_CHILD/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_DESCENDANT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_DESCENDANT/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_DESCENDANT_OR_SELF/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_FOLLOWING</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_FOLLOWING/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_FOLLOWING_SIBLING/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_NAMESPACE</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_NAMESPACE/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_PARENT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_PARENT/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_PRECEDING</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_PRECEDING/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_PRECEDING_SIBLING</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_PRECEDING_SIBLING/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_AXISNAME_SELF</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;AXISNAME_SELF/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_LITERAL</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;LITERAL"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" value=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_NUMBER</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;NUMBER"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" whole=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" part=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>EXPRTOKEN_VARIABLE_REFERENCE</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;VARIABLE_REFERENCE"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>fTokens</name>
                                                                <index>[
                                                                    <expr>++
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            != -1
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>System</name>.<name>out</name>.
                                                                        <name>print</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>" prefix=\"" +
                                                                                <call>
                                                                                    <name>getTokenString</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>fTokens</name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>i
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                                + "\""
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>" localpart=\"" +
                                                                        <call>
                                                                            <name>getTokenString</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>fTokens</name>
                                                                                            <index>[
                                                                                                <expr>++
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                        + "\""
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>print</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                            </case>
                                            <default>default:
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"&lt;???/&gt;"</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>
                            </for>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">//</comment>}
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>
            <comment type="line">// class Tokens</comment>

            <comment type="javadoc">/**
                * @xerces.internal
                *
                * @author Glenn Marcy, IBM
                * @author Andy Clark, IBM
                *
                * @version $Id: XPath.java,v 1.18 2005/03/07 23:28:41 mrglavas Exp $
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>static</specifier> class <name>Scanner</name>
                <block>{

                    <comment type="javadoc">/**
                        * 7-bit ASCII subset
                        *
                        * 0 1 2 3 4 5 6 7 8 9 A B C D E F
                        * 0, 0, 0, 0, 0, 0, 0, 0, 0, HT, LF, 0, 0, CR, 0, 0, // 0
                        * 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 1
                        * SP, !, ", #, $, %, &amp;, ', (, ), *, +, ,, -, ., /, // 2
                        * 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, :, ;, &lt;, =, &gt;, ?, // 3
                        * @, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, // 4
                        * P, Q, R, S, T, U, V, W, X, Y, Z, [, \, ], ^, _, // 5
                        * `, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, // 6
                        * p, q, r, s, t, u, v, w, x, y, z, {, |, }, ~, DEL // 7
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>byte</name>
                            </type>
                            <name>CHARTYPE_INVALID</name>
                            =
                            <init>
                                <expr>0</expr>
                            </init>
                            ,
                            <comment type="line">// invalid XML character</comment>
                            <name>CHARTYPE_OTHER</name>
                            =
                            <init>
                                <expr>1</expr>
                            </init>
                            ,
                            <comment type="line">// not special - one of "#%&amp;;?\^`{}~" or DEL</comment>
                            <name>CHARTYPE_WHITESPACE</name>
                            =
                            <init>
                                <expr>2</expr>
                            </init>
                            ,
                            <comment type="line">// one of "\t\n\r " (0x09, 0x0A, 0x0D, 0x20)</comment>
                            <name>CHARTYPE_EXCLAMATION</name>
                            =
                            <init>
                                <expr>3</expr>
                            </init>
                            ,
                            <comment type="line">// '!' (0x21)</comment>
                            <name>CHARTYPE_QUOTE</name>
                            =
                            <init>
                                <expr>4</expr>
                            </init>
                            ,
                            <comment type="line">// '\"' or '\'' (0x22 and 0x27)</comment>
                            <name>CHARTYPE_DOLLAR</name>
                            =
                            <init>
                                <expr>5</expr>
                            </init>
                            ,
                            <comment type="line">// '$' (0x24)</comment>
                            <name>CHARTYPE_OPEN_PAREN</name>
                            =
                            <init>
                                <expr>6</expr>
                            </init>
                            ,
                            <comment type="line">// '(' (0x28)</comment>
                            <name>CHARTYPE_CLOSE_PAREN</name>
                            =
                            <init>
                                <expr>7</expr>
                            </init>
                            ,
                            <comment type="line">// ')' (0x29)</comment>
                            <name>CHARTYPE_STAR</name>
                            =
                            <init>
                                <expr>8</expr>
                            </init>
                            ,
                            <comment type="line">// '*' (0x2A)</comment>
                            <name>CHARTYPE_PLUS</name>
                            =
                            <init>
                                <expr>9</expr>
                            </init>
                            ,
                            <comment type="line">// '+' (0x2B)</comment>
                            <name>CHARTYPE_COMMA</name>
                            =
                            <init>
                                <expr>10</expr>
                            </init>
                            ,
                            <comment type="line">// ',' (0x2C)</comment>
                            <name>CHARTYPE_MINUS</name>
                            =
                            <init>
                                <expr>11</expr>
                            </init>
                            ,
                            <comment type="line">// '-' (0x2D)</comment>
                            <name>CHARTYPE_PERIOD</name>
                            =
                            <init>
                                <expr>12</expr>
                            </init>
                            ,
                            <comment type="line">// '.' (0x2E)</comment>
                            <name>CHARTYPE_SLASH</name>
                            =
                            <init>
                                <expr>13</expr>
                            </init>
                            ,
                            <comment type="line">// '/' (0x2F)</comment>
                            <name>CHARTYPE_DIGIT</name>
                            =
                            <init>
                                <expr>14</expr>
                            </init>
                            ,
                            <comment type="line">// '0'-'9' (0x30 to 0x39)</comment>
                            <name>CHARTYPE_COLON</name>
                            =
                            <init>
                                <expr>15</expr>
                            </init>
                            ,
                            <comment type="line">// ':' (0x3A)</comment>
                            <name>CHARTYPE_LESS</name>
                            =
                            <init>
                                <expr>16</expr>
                            </init>
                            ,
                            <comment type="line">// '&lt;' (0x3C)</comment>
                            <name>CHARTYPE_EQUAL</name>
                            =
                            <init>
                                <expr>17</expr>
                            </init>
                            ,
                            <comment type="line">// '=' (0x3D)</comment>
                            <name>CHARTYPE_GREATER</name>
                            =
                            <init>
                                <expr>18</expr>
                            </init>
                            ,
                            <comment type="line">// '&gt;' (0x3E)</comment>
                            <name>CHARTYPE_ATSIGN</name>
                            =
                            <init>
                                <expr>19</expr>
                            </init>
                            ,
                            <comment type="line">// '@' (0x40)</comment>
                            <name>CHARTYPE_LETTER</name>
                            =
                            <init>
                                <expr>20</expr>
                            </init>
                            ,
                            <comment type="line">// 'A'-'Z' or 'a'-'z' (0x41 to 0x5A and 0x61 to 0x7A)</comment>
                            <name>CHARTYPE_OPEN_BRACKET</name>
                            =
                            <init>
                                <expr>21</expr>
                            </init>
                            ,
                            <comment type="line">// '[' (0x5B)</comment>
                            <name>CHARTYPE_CLOSE_BRACKET</name>
                            =
                            <init>
                                <expr>22</expr>
                            </init>
                            ,
                            <comment type="line">// ']' (0x5D)</comment>
                            <name>CHARTYPE_UNDERSCORE</name>
                            =
                            <init>
                                <expr>23</expr>
                            </init>
                            ,
                            <comment type="line">// '_' (0x5F)</comment>
                            <name>CHARTYPE_UNION</name>
                            =
                            <init>
                                <expr>24</expr>
                            </init>
                            ,
                            <comment type="line">// '|' (0x7C)</comment>
                            <name>CHARTYPE_NONASCII</name>
                            =
                            <init>
                                <expr>25</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// Non-ASCII Unicode codepoint (&gt;= 0x80)</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>fASCIICharMap</name> =
                            <init>
                                <expr>
                                    <block>{
                                        <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>
                                            0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>
                                            2</expr>,  <expr>2</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>2</expr>,  <expr>
                                            0</expr>,  <expr>0</expr>,
                                        <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>
                                            0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>
                                            0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>0</expr>,  <expr>
                                            0</expr>,  <expr>0</expr>,
                                        <expr>2</expr>,  <expr>3</expr>,  <expr>4</expr>,  <expr>1</expr>,  <expr>
                                            5</expr>,  <expr>1</expr>,  <expr>1</expr>,  <expr>4</expr>,  <expr>6</expr>,  <expr>
                                            7</expr>,  <expr>8</expr>,  <expr>9</expr>, <expr>10</expr>, <expr>11</expr>, <expr>
                                            12</expr>, <expr>13</expr>,
                                        <expr>14</expr>, <expr>14</expr>, <expr>14</expr>, <expr>14</expr>, <expr>
                                            14</expr>, <expr>14</expr>, <expr>14</expr>, <expr>14</expr>, <expr>
                                            14</expr>, <expr>14</expr>, <expr>15</expr>,  <expr>1</expr>, <expr>
                                            16</expr>, <expr>17</expr>, <expr>18</expr>,  <expr>1</expr>,
                                        <expr>19</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>,
                                        <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>21</expr>,  <expr>
                                            1</expr>, <expr>22</expr>,  <expr>1</expr>, <expr>23</expr>,
                                        <expr>1</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>,
                                        <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>20</expr>, <expr>
                                            20</expr>, <expr>20</expr>, <expr>20</expr>,  <expr>1</expr>, <expr>
                                            24</expr>,  <expr>1</expr>,  <expr>1</expr>,
                                        <expr>1</expr>
                                        }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Symbol literals
                        */
                    </comment>

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Symbol table. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>SymbolTable</name>
                            </type>
                            <name>fSymbolTable</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// symbols</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fAndSymbol</name> =
                            <init>
                                <expr>"and".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fOrSymbol</name> =
                            <init>
                                <expr>"or".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fModSymbol</name> =
                            <init>
                                <expr>"mod".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fDivSymbol</name> =
                            <init>
                                <expr>"div".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fCommentSymbol</name> =
                            <init>
                                <expr>"comment".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fTextSymbol</name> =
                            <init>
                                <expr>"text".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fPISymbol</name> =
                            <init>
                                <expr>"processing-instruction".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fNodeSymbol</name> =
                            <init>
                                <expr>"node".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fAncestorSymbol</name> =
                            <init>
                                <expr>"ancestor".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fAncestorOrSelfSymbol</name> =
                            <init>
                                <expr>"ancestor-or-self".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fAttributeSymbol</name> =
                            <init>
                                <expr>"attribute".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fChildSymbol</name> =
                            <init>
                                <expr>"child".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fDescendantSymbol</name> =
                            <init>
                                <expr>"descendant".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fDescendantOrSelfSymbol</name> =
                            <init>
                                <expr>"descendant-or-self".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fFollowingSymbol</name> =
                            <init>
                                <expr>"following".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fFollowingSiblingSymbol</name> =
                            <init>
                                <expr>"following-sibling".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fNamespaceSymbol</name> =
                            <init>
                                <expr>"namespace".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fParentSymbol</name> =
                            <init>
                                <expr>"parent".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fPrecedingSymbol</name> =
                            <init>
                                <expr>"preceding".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fPrecedingSiblingSymbol</name> =
                            <init>
                                <expr>"preceding-sibling".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                            </type>
                            <name>fSelfSymbol</name> =
                            <init>
                                <expr>"self".
                                    <call>
                                        <name>intern</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Constructors</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/** Constructs an XPath expression scanner. */</comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Scanner</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <comment type="line">// save pool and tokens</comment>
                            <expr_stmt>
                                <expr>
                                    <name>fSymbolTable</name>
                                    =
                                    <name>symbolTable</name>
                                </expr>
                                ;
                            </expr_stmt>

                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(SymbolTable)</comment>

                    <comment type="javadoc">/**
                        *
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>scanExpr</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name><name>XPath</name>.
                                            <name>Tokens</name>
                                        </name>
                                    </type>
                                    <name>tokens</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nameOffset</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>nameHandle</name>,
                                    <name>prefixHandle</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>starIsMultiplyOperator</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>

                            <while>while
                                <condition>(<expr>true</expr>)
                                </condition>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>currentOffset</name>
                                                ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>ch</name>
                                            =
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">//</comment>
                                    <comment type="line">// [39] ExprWhitespace ::= S</comment>
                                    <comment type="line">//</comment>
                                    <while>while
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                == ' ' || <name>ch</name> == 0x0A || <name>ch</name> == 0x09 || <name>
                                                ch
                                            </name> == 0x0D
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>++<name>currentOffset</name> ==
                                                        <name>endOffset</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <break>break;</break>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>ch</name>
                                                    =
                                                    <call>
                                                        <name><name>data</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </while>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>currentOffset</name>
                                                ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">//</comment>
                                    <comment type="line">// [28] ExprToken ::= '(' | ')' | '[' | ']' | '.' | '..' | '@'
                                        | ',' | '::'
                                    </comment>
                                    <comment type="line">// | NameTest | NodeType | Operator | FunctionName</comment>
                                    <comment type="line">// | AxisName | Literal | Number | VariableReference</comment>
                                    <comment type="line">//</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>byte</name>
                                            </type>
                                            <name>chartype</name> =
                                            <init>
                                                <expr>(<name>ch</name> &gt;= 0x80) ? <name>CHARTYPE_NONASCII</name> :
                                                    <name>
                                                        <name>fASCIICharMap</name>
                                                        <index>[
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>chartype</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_OPEN_PAREN</name>
                                                </expr>
                                                :
                                                <comment type="line">// '('</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPEN_PAREN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_CLOSE_PAREN</name>
                                                </expr>
                                                :
                                                <comment type="line">// ')'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_CLOSE_PAREN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_OPEN_BRACKET</name>
                                                </expr>
                                                :
                                                <comment type="line">// '['</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPEN_BRACKET</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_CLOSE_BRACKET</name>
                                                </expr>
                                                :
                                                <comment type="line">// ']'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_CLOSE_BRACKET</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [30] Number ::= Digits ('.' Digits?)? | '.'
                                                    Digits
                                                </comment>
                                                <comment type="line">// ^^^^^^^^^^</comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_PERIOD</name>
                                                </expr>
                                                :
                                                <comment type="line">// '.', '..' or '.' Digits</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            + 1 ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_PERIOD</name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr><name>currentOffset</name>++
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        + 1
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '.'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// '..'</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_DOUBLE_PERIOD
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                    += 2
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>ch</name>
                                                                    &gt;= '0' &amp;&amp; <name>ch</name> &lt;= '9'
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>addToken</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tokens</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>XPath</name>
                                                                                                .<name>Tokens</name>.
                                                                                                <name>EXPRTOKEN_NUMBER
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>starIsMultiplyOperator</name>
                                                                            = true
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>currentOffset</name>
                                                                            =
                                                                            <call>
                                                                                <name>scanNumber</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tokens</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>data</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>endOffset</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>currentOffset</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    <comment type="block">/*,
                                                                                        encoding*/</comment>)
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>ch</name>
                                                                            == '/'
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>addToken</name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>tokens</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name><name>
                                                                                                        XPath</name>
                                                                                                        .<name>
                                                                                                            Tokens</name>.
                                                                                                        <name>
                                                                                                            EXPRTOKEN_PERIOD
                                                                                                        </name>
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>starIsMultiplyOperator</name>
                                                                                    = true
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr><name>currentOffset</name>++
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                    <else>else
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>ch</name>
                                                                                    == '|'
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>addToken</name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                tokens
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    ,
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name><name>
                                                                                                                XPath</name>
                                                                                                                .<name>
                                                                                                                    Tokens</name>.
                                                                                                                <name>
                                                                                                                    EXPRTOKEN_PERIOD
                                                                                                                </name>
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>
                                                                                                starIsMultiplyOperator
                                                                                            </name>
                                                                                            = true
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <expr_stmt>
                                                                                        <expr><name>currentOffset</name>
                                                                                            ++
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <break>break;</break>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>ch</name>
                                                                                            == ' ' || <name>ch</name> ==
                                                                                            0x0A || <name>ch</name> ==
                                                                                            0x09 || <name>ch</name> ==
                                                                                            0x0D
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <comment type="line">// this
                                                                                                is legal if the next
                                                                                                token is non-existent or
                                                                                                |
                                                                                            </comment>
                                                                                            <do>do
                                                                                                <block>{
                                                                                                    <if>if
                                                                                                        <condition>(
                                                                                                            <expr>++<name>
                                                                                                                currentOffset
                                                                                                            </name> ==
                                                                                                                <name>
                                                                                                                    endOffset
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            )
                                                                                                        </condition>
                                                                                                        <then>
                                                                                                            <block>{
                                                                                                                <break>
                                                                                                                    break;
                                                                                                                </break>
                                                                                                                }
                                                                                                            </block>
                                                                                                        </then>
                                                                                                    </if>
                                                                                                    <expr_stmt>
                                                                                                        <expr>
                                                                                                            <name>ch
                                                                                                            </name>
                                                                                                            =
                                                                                                            <call>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        data</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        charAt
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                                <argument_list>
                                                                                                                    (
                                                                                                                    <argument>
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                currentOffset
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                    </argument>
                                                                                                                    )
                                                                                                                </argument_list>
                                                                                                            </call>
                                                                                                        </expr>
                                                                                                        ;
                                                                                                    </expr_stmt>
                                                                                                    }
                                                                                                </block>
                                                                                                while
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>ch</name>
                                                                                                        == ' ' || <name>
                                                                                                        ch
                                                                                                    </name> == 0x0A || <name>
                                                                                                        ch
                                                                                                    </name> == 0x09 || <name>
                                                                                                        ch
                                                                                                    </name> == 0x0D
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                ;
                                                                                            </do>
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            currentOffset
                                                                                                        </name>
                                                                                                        == <name>
                                                                                                        endOffset
                                                                                                    </name> || <name>
                                                                                                        ch
                                                                                                    </name> == '|'
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        addToken
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    tokens
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        XPath</name>
                                                                                                                                    .<name>
                                                                                                                                    Tokens</name>.
                                                                                                                                    <name>
                                                                                                                                        EXPRTOKEN_PERIOD
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    starIsMultiplyOperator
                                                                                                                </name>
                                                                                                                = true
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        <break>break;
                                                                                                        </break>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                            </if>
                                                                                            <throw>throw
                                                                                                <expr>new
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            XPathException
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "c-general-xpath"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </throw>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <block>{
                                                                                            <comment type="line">//
                                                                                                '.'
                                                                                            </comment>
                                                                                            <throw>throw
                                                                                                <expr>new
                                                                                                    <call>
                                                                                                        <name>
                                                                                                            XPathException
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    "c-general-xpath"
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </throw>
                                                                                            }
                                                                                        </block>
                                                                                    </else>
                                                                                </if>
                                                                            </else>
                                                                        </if>
                                                                    </else>
                                                                </if>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_ATSIGN</name>
                                                </expr>
                                                :
                                                <comment type="line">// '@'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_ATSIGN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_COMMA</name>
                                                </expr>
                                                :
                                                <comment type="line">// ','</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_COMMA</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_COLON</name>
                                                </expr>
                                                :
                                                <comment type="line">// '::'</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 1a");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            != ':'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 1b");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_DOUBLE_COLON</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_SLASH</name>
                                                </expr>
                                                :
                                                <comment type="line">// '/' and '//'</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPERATOR_SLASH
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '/'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// '//'</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_OPERATOR_DOUBLE_SLASH
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPERATOR_SLASH
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_UNION</name>
                                                </expr>
                                                :
                                                <comment type="line">// '|'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPERATOR_UNION</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_PLUS</name>
                                                </expr>
                                                :
                                                <comment type="line">// '+'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPERATOR_PLUS</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_MINUS</name>
                                                </expr>
                                                :
                                                <comment type="line">// '-'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPERATOR_MINUS</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_EQUAL</name>
                                                </expr>
                                                :
                                                <comment type="line">// '='</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPERATOR_EQUAL</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_EXCLAMATION</name>
                                                </expr>
                                                :
                                                <comment type="line">// '!='</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 2a");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            != '='
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 2b");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_OPERATOR_NOT_EQUAL</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = false
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_LESS</name>
                                                </expr>
                                                :
                                                <comment type="line">// '&lt;' and '&lt;='</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPERATOR_LESS
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '='
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// '&lt;='</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_OPERATOR_LESS_EQUAL
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPERATOR_LESS
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_GREATER</name>
                                                </expr>
                                                :
                                                <comment type="line">// '&gt;' and '&gt;='</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_OPERATOR_GREATER
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '='
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// '&gt;='</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_OPERATOR_GREATER_EQUAL
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_OPERATOR_GREATER
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [29] Literal ::= '"' [^"]* '"' | "'" [^']* "'"
                                                </comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_QUOTE</name>
                                                </expr>
                                                :
                                                <comment type="line">// '\"' or '\''</comment>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>qchar</name> =
                                                        <init>
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 2c");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>litOffset</name> =
                                                        <init>
                                                            <expr>
                                                                <name>currentOffset</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <while>while
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            !=
                                                            <name>qchar</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>++<name>currentOffset</name> ==
                                                                    <name>endOffset</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// System.out.println("abort
                                                                        2d");
                                                                    </comment>
                                                                    <return>return <expr>false</expr>;
                                                                    </return>
                                                                    <comment type="line">// REVISIT</comment>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>ch</name>
                                                                =
                                                                <call>
                                                                    <name><name>data</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </while>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>litLength</name> =
                                                        <init>
                                                            <expr>
                                                                <name>currentOffset</name>
                                                                -
                                                                <name>litOffset</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_LITERAL</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>tokens</name>.
                                                                <name>addToken</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>symbolTable</name>.
                                                                                <name>addSymbol</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>data</name>.
                                                                                                <name>substring</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            litOffset
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            litOffset
                                                                                                        </name>
                                                                                                        +
                                                                                                        <name>
                                                                                                            litLength
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [30] Number ::= Digits ('.' Digits?)? | '.'
                                                    Digits
                                                </comment>
                                                <comment type="line">// [31] Digits ::= [0-9]+</comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_DIGIT</name>
                                                </expr>
                                                :
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_NUMBER</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>currentOffset</name>
                                                        =
                                                        <call>
                                                            <name>scanNumber</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                <comment type="block">/*, encoding*/</comment>)
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [36] VariableReference ::= '$' QName</comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_DOLLAR</name>
                                                </expr>
                                                :
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 3a");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nameOffset</name>
                                                        =
                                                        <name>currentOffset</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>currentOffset</name>
                                                        =
                                                        <call>
                                                            <name>scanNCName</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            ==
                                                            <name>nameOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 3b");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            &lt;
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>data</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    = -1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nameHandle</name>
                                                        =
                                                        <call>
                                                            <name><name>symbolTable</name>.
                                                                <name>addSymbol</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>data</name>.
                                                                                <name>substring</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nameOffset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>currentOffset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            != ':'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>prefixHandle</name>
                                                                    =
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>EMPTY_STRING</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>prefixHandle</name>
                                                                    =
                                                                    <name>nameHandle</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//
                                                                            System.out.println("abort 4a");
                                                                        </comment>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        <comment type="line">// REVISIT</comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>nameOffset</name>
                                                                    =
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                    =
                                                                    <call>
                                                                        <name>scanNCName</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>data</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        ==
                                                                        <name>nameOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//
                                                                            System.out.println("abort 4b");
                                                                        </comment>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        <comment type="line">// REVISIT</comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        &lt;
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>data</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>currentOffset
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                = -1
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>nameHandle</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>symbolTable</name>.
                                                                            <name>addSymbol</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>data</name>.
                                                                                            <name>substring</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>nameOffset
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        currentOffset
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>XPath</name>.<name>Tokens</name>.
                                                                            <name>EXPRTOKEN_VARIABLE_REFERENCE</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>starIsMultiplyOperator</name>
                                                        = true
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>tokens</name>.
                                                                <name>addToken</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>prefixHandle</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>tokens</name>.
                                                                <name>addToken</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>nameHandle</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [37] NameTest ::= '*' | NCName ':' '*' | QName
                                                </comment>
                                                <comment type="line">// [34] MultiplyOperator ::= '*'</comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_STAR</name>
                                                </expr>
                                                :
                                                <comment type="line">// '*'</comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// 3.7 Lexical Structure</comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If there is a preceding token and the preceding
                                                    token is not one of @, ::, (, [, , or
                                                </comment>
                                                <comment type="line">// an Operator, then a * must be recognized as a
                                                    MultiplyOperator.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// Otherwise, the token must not be recognized as a
                                                    MultiplyOperator.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>starIsMultiplyOperator</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPERATOR_MULT
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_NAMETEST_ANY
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>++<name>currentOffset</name> ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <break>break;</break>
                                                <comment type="line">//</comment>
                                                <comment type="line">// NCName, QName and non-terminals</comment>
                                                <comment type="line">//</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_NONASCII</name>
                                                </expr>
                                                :
                                                <comment type="line">// possibly a valid non-ascii 'Letter' (BaseChar |
                                                    Ideographic)
                                                </comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_LETTER</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_UNDERSCORE</name>
                                                </expr>
                                                :
                                                <comment type="line">//</comment>
                                                <comment type="line">// 3.7 Lexical Structure</comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If there is a preceding token and the preceding
                                                    token is not one of @, ::, (, [, , or
                                                </comment>
                                                <comment type="line">// an Operator, then an NCName must be recognized
                                                    as an OperatorName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If the character following an NCName (possibly
                                                    after intervening ExprWhitespace) is (,
                                                </comment>
                                                <comment type="line">// then the token must be recognized as a NodeType
                                                    or a FunctionName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If the two characters following an NCName
                                                    (possibly after intervening ExprWhitespace)
                                                </comment>
                                                <comment type="line">// are ::, then the token must be recognized as an
                                                    AxisName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// Otherwise, the token must not be recognized as
                                                    an OperatorName, a NodeType, a
                                                </comment>
                                                <comment type="line">// FunctionName, or an AxisName.</comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [33] OperatorName ::= 'and' | 'or' | 'mod' |
                                                    'div'
                                                </comment>
                                                <comment type="line">// [38] NodeType ::= 'comment' | 'text' |
                                                    'processing-instruction' | 'node'
                                                </comment>
                                                <comment type="line">// [35] FunctionName ::= QName - NodeType</comment>
                                                <comment type="line">// [6] AxisName ::= (see above)</comment>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [37] NameTest ::= '*' | NCName ':' '*' | QName
                                                </comment>
                                                <comment type="line">// [5] NCName ::= (Letter | '_') (NCNameChar)*
                                                </comment>
                                                <comment type="line">// [?] NCNameChar ::= Letter | Digit | '.' | '-' |
                                                    '_' (ascii subset of 'NCNameChar')
                                                </comment>
                                                <comment type="line">// [?] QName ::= (NCName ':')? NCName</comment>
                                                <comment type="line">// [?] Letter ::= [A-Za-z] (ascii subset of
                                                    'Letter')
                                                </comment>
                                                <comment type="line">// [?] Digit ::= [0-9] (ascii subset of 'Digit')
                                                </comment>
                                                <comment type="line">//</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nameOffset</name>
                                                        =
                                                        <name>currentOffset</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>currentOffset</name>
                                                        =
                                                        <call>
                                                            <name>scanNCName</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            ==
                                                            <name>nameOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// System.out.println("abort 4c");
                                                            </comment>
                                                            <return>return <expr>false</expr>;
                                                            </return>
                                                            <comment type="line">// REVISIT</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            &lt;
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>data</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    = -1
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>nameHandle</name>
                                                        =
                                                        <call>
                                                            <name><name>symbolTable</name>.
                                                                <name>addSymbol</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>data</name>.
                                                                                <name>substring</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>nameOffset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>currentOffset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>boolean</name>
                                                        </type>
                                                        <name>isNameTestNCName</name> =
                                                        <init>
                                                            <expr>false</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>boolean</name>
                                                        </type>
                                                        <name>isAxisName</name> =
                                                        <init>
                                                            <expr>false</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>prefixHandle</name>
                                                        =
                                                        <name><name>XMLSymbols</name>.
                                                            <name>EMPTY_STRING</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == ':'
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//
                                                                            System.out.println("abort 5");
                                                                        </comment>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        <comment type="line">// REVISIT</comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>data</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        == '*'
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>++<name>currentOffset</name> &lt;
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>ch</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>data</name>.
                                                                                                    <name>charAt</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                currentOffset
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>isNameTestNCName</name>
                                                                                = true
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                == ':'
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>++<name>currentOffset
                                                                                        </name> &lt;
                                                                                            <name>endOffset</name>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name>ch</name>
                                                                                                    =
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            data</name>.
                                                                                                            <name>
                                                                                                                charAt
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        currentOffset
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>isAxisName</name>
                                                                                        = true
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>prefixHandle</name>
                                                                                        =
                                                                                        <name>nameHandle</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>nameOffset</name>
                                                                                        =
                                                                                        <name>currentOffset</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>currentOffset</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name>scanNCName</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>data
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            endOffset
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            currentOffset
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>currentOffset</name>
                                                                                            ==
                                                                                            <name>nameOffset</name>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <comment type="line">//
                                                                                                System.out.println("abort
                                                                                                5b");
                                                                                            </comment>
                                                                                            <return>return <expr>
                                                                                                false</expr>;
                                                                                            </return>
                                                                                            <comment type="line">//
                                                                                                REVISIT
                                                                                            </comment>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                </if>
                                                                                <if>if
                                                                                    <condition>(
                                                                                        <expr>
                                                                                            <name>currentOffset</name>
                                                                                            &lt;
                                                                                            <name>endOffset</name>
                                                                                        </expr>
                                                                                        )
                                                                                    </condition>
                                                                                    <then>
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name>ch</name>
                                                                                                    =
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            data</name>.
                                                                                                            <name>
                                                                                                                charAt
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        currentOffset
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </then>
                                                                                    <else>else
                                                                                        <block>{
                                                                                            <expr_stmt>
                                                                                                <expr>
                                                                                                    <name>ch</name>
                                                                                                    = -1
                                                                                                </expr>
                                                                                                ;
                                                                                            </expr_stmt>
                                                                                            }
                                                                                        </block>
                                                                                    </else>
                                                                                </if>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>nameHandle</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>
                                                                                                symbolTable</name>.
                                                                                                <name>addSymbol</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                data</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    substring
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            nameOffset
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            currentOffset
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <comment type="line">//</comment>
                                                <comment type="line">// [39] ExprWhitespace ::= S</comment>
                                                <comment type="line">//</comment>
                                                <while>while
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == ' ' || <name>ch</name> == 0x0A || <name>ch</name> == 0x09
                                                            || <name>ch</name> == 0x0D
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>++<name>currentOffset</name> ==
                                                                    <name>endOffset</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <break>break;</break>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>ch</name>
                                                                =
                                                                <call>
                                                                    <name><name>data</name>.
                                                                        <name>charAt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </while>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If there is a preceding token and the preceding
                                                    token is not one of @, ::, (, [, , or
                                                </comment>
                                                <comment type="line">// an Operator, then an NCName must be recognized
                                                    as an OperatorName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>starIsMultiplyOperator</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>nameHandle</name>
                                                                        ==
                                                                        <name>fAndSymbol</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>addToken</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>tokens</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>XPath</name>
                                                                                                    .<name>Tokens</name>.
                                                                                                    <name>
                                                                                                        EXPRTOKEN_OPERATOR_AND
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>starIsMultiplyOperator</name>
                                                                                = false
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>nameHandle</name>
                                                                                ==
                                                                                <name>fOrSymbol</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>addToken</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>tokens
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            XPath</name>
                                                                                                            .<name>
                                                                                                                Tokens</name>.
                                                                                                            <name>
                                                                                                                EXPRTOKEN_OPERATOR_OR
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>starIsMultiplyOperator
                                                                                        </name>
                                                                                        = false
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>nameHandle</name>
                                                                                        ==
                                                                                        <name>fModSymbol</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>addToken
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    tokens
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        XPath</name>
                                                                                                                    .<name>
                                                                                                                    Tokens</name>.
                                                                                                                    <name>
                                                                                                                        EXPRTOKEN_OPERATOR_MOD
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    starIsMultiplyOperator
                                                                                                </name>
                                                                                                = false
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>nameHandle</name>
                                                                                                ==
                                                                                                <name>fDivSymbol</name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                addToken
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            tokens
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                XPath</name>
                                                                                                                            .<name>
                                                                                                                            Tokens</name>.
                                                                                                                            <name>
                                                                                                                                EXPRTOKEN_OPERATOR_DIV
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            starIsMultiplyOperator
                                                                                                        </name>
                                                                                                        = false
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <block>{
                                                                                                <comment type="line">//
                                                                                                    System.out.println("abort
                                                                                                    6");
                                                                                                </comment>
                                                                                                <return>return <expr>
                                                                                                    false</expr>;
                                                                                                </return>
                                                                                                <comment type="line">//
                                                                                                    REVISIT
                                                                                                </comment>
                                                                                                }
                                                                                            </block>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>isNameTestNCName</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//
                                                                            System.out.println("abort 7");
                                                                        </comment>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        <comment type="line">// REVISIT - NCName:* where
                                                                            an OperatorName is required
                                                                        </comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>isAxisName</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">//
                                                                                    System.out.println("abort 8");
                                                                                </comment>
                                                                                <return>return <expr>false</expr>;
                                                                                </return>
                                                                                <comment type="line">// REVISIT -
                                                                                    AxisName:: where an OperatorName is
                                                                                    required
                                                                                </comment>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If the character following an NCName (possibly
                                                    after intervening ExprWhitespace) is (,
                                                </comment>
                                                <comment type="line">// then the token must be recognized as a NodeType
                                                    or a FunctionName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>ch</name>
                                                            == '(' &amp;&amp; !<name>isNameTestNCName</name> &amp;&amp;
                                                            !
                                                            <name>isAxisName</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>nameHandle</name>
                                                                        ==
                                                                        <name>fCommentSymbol</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>addToken</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>tokens</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>XPath</name>
                                                                                                    .<name>Tokens</name>.
                                                                                                    <name>
                                                                                                        EXPRTOKEN_NODETYPE_COMMENT
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>nameHandle</name>
                                                                                ==
                                                                                <name>fTextSymbol</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>addToken</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>tokens
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            XPath</name>
                                                                                                            .<name>
                                                                                                                Tokens</name>.
                                                                                                            <name>
                                                                                                                EXPRTOKEN_NODETYPE_TEXT
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>nameHandle</name>
                                                                                        ==
                                                                                        <name>fPISymbol</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>addToken
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    tokens
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        XPath</name>
                                                                                                                    .<name>
                                                                                                                    Tokens</name>.
                                                                                                                    <name>
                                                                                                                        EXPRTOKEN_NODETYPE_PI
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>nameHandle</name>
                                                                                                ==
                                                                                                <name>fNodeSymbol</name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                addToken
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            tokens
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                XPath</name>
                                                                                                                            .<name>
                                                                                                                            Tokens</name>.
                                                                                                                            <name>
                                                                                                                                EXPRTOKEN_NODETYPE_NODE
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                addToken
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            tokens
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                XPath</name>
                                                                                                                            .<name>
                                                                                                                            Tokens</name>.
                                                                                                                            <name>
                                                                                                                                EXPRTOKEN_FUNCTION_NAME
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                tokens</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    addToken
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            prefixHandle
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                tokens</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    addToken
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            nameHandle
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_OPEN_PAREN
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <comment type="line">//</comment>
                                                <comment type="line">// If the two characters following an NCName
                                                    (possibly after intervening ExprWhitespace)
                                                </comment>
                                                <comment type="line">// are ::, then the token must be recognized as an
                                                    AxisName.
                                                </comment>
                                                <comment type="line">//</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>isAxisName</name>
                                                            ||
                                                            (<name>ch</name> == ':' &amp;&amp; <name>currentOffset
                                                        </name> + 1 &lt; <name>endOffset</name> &amp;&amp;
                                                            <call>
                                                                <name><name>data</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>currentOffset</name>
                                                                            + 1
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            == ':')
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>nameHandle</name>
                                                                        ==
                                                                        <name>fAncestorSymbol</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>addToken</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>tokens</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>XPath</name>
                                                                                                    .<name>Tokens</name>.
                                                                                                    <name>
                                                                                                        EXPRTOKEN_AXISNAME_ANCESTOR
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>nameHandle</name>
                                                                                ==
                                                                                <name>fAncestorOrSelfSymbol</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>addToken</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>tokens
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            XPath</name>
                                                                                                            .<name>
                                                                                                                Tokens</name>.
                                                                                                            <name>
                                                                                                                EXPRTOKEN_AXISNAME_ANCESTOR_OR_SELF
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>nameHandle</name>
                                                                                        ==
                                                                                        <name>fAttributeSymbol</name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name>addToken
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    tokens
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        XPath</name>
                                                                                                                    .<name>
                                                                                                                    Tokens</name>.
                                                                                                                    <name>
                                                                                                                        EXPRTOKEN_AXISNAME_ATTRIBUTE
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>nameHandle</name>
                                                                                                ==
                                                                                                <name>fChildSymbol
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                addToken
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            tokens
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                XPath</name>
                                                                                                                            .<name>
                                                                                                                            Tokens</name>.
                                                                                                                            <name>
                                                                                                                                EXPRTOKEN_AXISNAME_CHILD
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            nameHandle
                                                                                                        </name>
                                                                                                        ==
                                                                                                        <name>
                                                                                                            fDescendantSymbol
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        addToken
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    tokens
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        XPath</name>
                                                                                                                                    .<name>
                                                                                                                                    Tokens</name>.
                                                                                                                                    <name>
                                                                                                                                        EXPRTOKEN_AXISNAME_DESCENDANT
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                                <else>else
                                                                                                    <if>if
                                                                                                        <condition>(
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    nameHandle
                                                                                                                </name>
                                                                                                                ==
                                                                                                                <name>
                                                                                                                    fDescendantOrSelfSymbol
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            )
                                                                                                        </condition>
                                                                                                        <then>
                                                                                                            <block>{
                                                                                                                <expr_stmt>
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                addToken
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                (
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            tokens
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                ,
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                XPath</name>
                                                                                                                                            .<name>
                                                                                                                                            Tokens</name>.
                                                                                                                                            <name>
                                                                                                                                                EXPRTOKEN_AXISNAME_DESCENDANT_OR_SELF
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                )
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                    ;
                                                                                                                </expr_stmt>
                                                                                                                }
                                                                                                            </block>
                                                                                                        </then>
                                                                                                        <else>else
                                                                                                            <if>if
                                                                                                                <condition>
                                                                                                                    (
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            nameHandle
                                                                                                                        </name>
                                                                                                                        ==
                                                                                                                        <name>
                                                                                                                            fFollowingSymbol
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    )
                                                                                                                </condition>
                                                                                                                <then>
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <expr_stmt>
                                                                                                                            <expr>
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        addToken
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        (
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    tokens
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        ,
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        XPath</name>
                                                                                                                                                    .<name>
                                                                                                                                                    Tokens</name>.
                                                                                                                                                    <name>
                                                                                                                                                        EXPRTOKEN_AXISNAME_FOLLOWING
                                                                                                                                                    </name>
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        )
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                            </expr>
                                                                                                                            ;
                                                                                                                        </expr_stmt>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </then>
                                                                                                                <else>
                                                                                                                    else
                                                                                                                    <if>
                                                                                                                        if
                                                                                                                        <condition>
                                                                                                                            (
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    nameHandle
                                                                                                                                </name>
                                                                                                                                ==
                                                                                                                                <name>
                                                                                                                                    fFollowingSiblingSymbol
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            )
                                                                                                                        </condition>
                                                                                                                        <then>
                                                                                                                            <block>
                                                                                                                                {
                                                                                                                                <expr_stmt>
                                                                                                                                    <expr>
                                                                                                                                        <call>
                                                                                                                                            <name>
                                                                                                                                                addToken
                                                                                                                                            </name>
                                                                                                                                            <argument_list>
                                                                                                                                                (
                                                                                                                                                <argument>
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            tokens
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                </argument>
                                                                                                                                                ,
                                                                                                                                                <argument>
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            <name>
                                                                                                                                                                XPath</name>
                                                                                                                                                            .<name>
                                                                                                                                                            Tokens</name>.
                                                                                                                                                            <name>
                                                                                                                                                                EXPRTOKEN_AXISNAME_FOLLOWING_SIBLING
                                                                                                                                                            </name>
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                </argument>
                                                                                                                                                )
                                                                                                                                            </argument_list>
                                                                                                                                        </call>
                                                                                                                                    </expr>
                                                                                                                                    ;
                                                                                                                                </expr_stmt>
                                                                                                                                }
                                                                                                                            </block>
                                                                                                                        </then>
                                                                                                                        <else>
                                                                                                                            else
                                                                                                                            <if>
                                                                                                                                if
                                                                                                                                <condition>
                                                                                                                                    (
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            nameHandle
                                                                                                                                        </name>
                                                                                                                                        ==
                                                                                                                                        <name>
                                                                                                                                            fNamespaceSymbol
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                    )
                                                                                                                                </condition>
                                                                                                                                <then>
                                                                                                                                    <block>
                                                                                                                                        {
                                                                                                                                        <expr_stmt>
                                                                                                                                            <expr>
                                                                                                                                                <call>
                                                                                                                                                    <name>
                                                                                                                                                        addToken
                                                                                                                                                    </name>
                                                                                                                                                    <argument_list>
                                                                                                                                                        (
                                                                                                                                                        <argument>
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    tokens
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                        </argument>
                                                                                                                                                        ,
                                                                                                                                                        <argument>
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    <name>
                                                                                                                                                                        XPath</name>
                                                                                                                                                                    .<name>
                                                                                                                                                                    Tokens</name>.
                                                                                                                                                                    <name>
                                                                                                                                                                        EXPRTOKEN_AXISNAME_NAMESPACE
                                                                                                                                                                    </name>
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                        </argument>
                                                                                                                                                        )
                                                                                                                                                    </argument_list>
                                                                                                                                                </call>
                                                                                                                                            </expr>
                                                                                                                                            ;
                                                                                                                                        </expr_stmt>
                                                                                                                                        }
                                                                                                                                    </block>
                                                                                                                                </then>
                                                                                                                                <else>
                                                                                                                                    else
                                                                                                                                    <if>
                                                                                                                                        if
                                                                                                                                        <condition>
                                                                                                                                            (
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    nameHandle
                                                                                                                                                </name>
                                                                                                                                                ==
                                                                                                                                                <name>
                                                                                                                                                    fParentSymbol
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                            )
                                                                                                                                        </condition>
                                                                                                                                        <then>
                                                                                                                                            <block>
                                                                                                                                                {
                                                                                                                                                <expr_stmt>
                                                                                                                                                    <expr>
                                                                                                                                                        <call>
                                                                                                                                                            <name>
                                                                                                                                                                addToken
                                                                                                                                                            </name>
                                                                                                                                                            <argument_list>
                                                                                                                                                                (
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            tokens
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                ,
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                XPath</name>
                                                                                                                                                                            .<name>
                                                                                                                                                                            Tokens</name>.
                                                                                                                                                                            <name>
                                                                                                                                                                                EXPRTOKEN_AXISNAME_PARENT
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                )
                                                                                                                                                            </argument_list>
                                                                                                                                                        </call>
                                                                                                                                                    </expr>
                                                                                                                                                    ;
                                                                                                                                                </expr_stmt>
                                                                                                                                                }
                                                                                                                                            </block>
                                                                                                                                        </then>
                                                                                                                                        <else>
                                                                                                                                            else
                                                                                                                                            <if>
                                                                                                                                                if
                                                                                                                                                <condition>
                                                                                                                                                    (
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            nameHandle
                                                                                                                                                        </name>
                                                                                                                                                        ==
                                                                                                                                                        <name>
                                                                                                                                                            fPrecedingSymbol
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                    )
                                                                                                                                                </condition>
                                                                                                                                                <then>
                                                                                                                                                    <block>
                                                                                                                                                        {
                                                                                                                                                        <expr_stmt>
                                                                                                                                                            <expr>
                                                                                                                                                                <call>
                                                                                                                                                                    <name>
                                                                                                                                                                        addToken
                                                                                                                                                                    </name>
                                                                                                                                                                    <argument_list>
                                                                                                                                                                        (
                                                                                                                                                                        <argument>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    tokens
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                        </argument>
                                                                                                                                                                        ,
                                                                                                                                                                        <argument>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        XPath</name>
                                                                                                                                                                                    .<name>
                                                                                                                                                                                    Tokens</name>.
                                                                                                                                                                                    <name>
                                                                                                                                                                                        EXPRTOKEN_AXISNAME_PRECEDING
                                                                                                                                                                                    </name>
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                        </argument>
                                                                                                                                                                        )
                                                                                                                                                                    </argument_list>
                                                                                                                                                                </call>
                                                                                                                                                            </expr>
                                                                                                                                                            ;
                                                                                                                                                        </expr_stmt>
                                                                                                                                                        }
                                                                                                                                                    </block>
                                                                                                                                                </then>
                                                                                                                                                <else>
                                                                                                                                                    else
                                                                                                                                                    <if>
                                                                                                                                                        if
                                                                                                                                                        <condition>
                                                                                                                                                            (
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    nameHandle
                                                                                                                                                                </name>
                                                                                                                                                                ==
                                                                                                                                                                <name>
                                                                                                                                                                    fPrecedingSiblingSymbol
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                            )
                                                                                                                                                        </condition>
                                                                                                                                                        <then>
                                                                                                                                                            <block>
                                                                                                                                                                {
                                                                                                                                                                <expr_stmt>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <call>
                                                                                                                                                                            <name>
                                                                                                                                                                                addToken
                                                                                                                                                                            </name>
                                                                                                                                                                            <argument_list>
                                                                                                                                                                                (
                                                                                                                                                                                <argument>
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            tokens
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                </argument>
                                                                                                                                                                                ,
                                                                                                                                                                                <argument>
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                XPath</name>
                                                                                                                                                                                            .<name>
                                                                                                                                                                                            Tokens</name>.
                                                                                                                                                                                            <name>
                                                                                                                                                                                                EXPRTOKEN_AXISNAME_PRECEDING_SIBLING
                                                                                                                                                                                            </name>
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                </argument>
                                                                                                                                                                                )
                                                                                                                                                                            </argument_list>
                                                                                                                                                                        </call>
                                                                                                                                                                    </expr>
                                                                                                                                                                    ;
                                                                                                                                                                </expr_stmt>
                                                                                                                                                                }
                                                                                                                                                            </block>
                                                                                                                                                        </then>
                                                                                                                                                        <else>
                                                                                                                                                            else
                                                                                                                                                            <if>
                                                                                                                                                                if
                                                                                                                                                                <condition>
                                                                                                                                                                    (
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            nameHandle
                                                                                                                                                                        </name>
                                                                                                                                                                        ==
                                                                                                                                                                        <name>
                                                                                                                                                                            fSelfSymbol
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                    )
                                                                                                                                                                </condition>
                                                                                                                                                                <then>
                                                                                                                                                                    <block>
                                                                                                                                                                        {
                                                                                                                                                                        <expr_stmt>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <call>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        addToken
                                                                                                                                                                                    </name>
                                                                                                                                                                                    <argument_list>
                                                                                                                                                                                        (
                                                                                                                                                                                        <argument>
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    tokens
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                        </argument>
                                                                                                                                                                                        ,
                                                                                                                                                                                        <argument>
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        XPath</name>
                                                                                                                                                                                                    .<name>
                                                                                                                                                                                                    Tokens</name>.
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        EXPRTOKEN_AXISNAME_SELF
                                                                                                                                                                                                    </name>
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                        </argument>
                                                                                                                                                                                        )
                                                                                                                                                                                    </argument_list>
                                                                                                                                                                                </call>
                                                                                                                                                                            </expr>
                                                                                                                                                                            ;
                                                                                                                                                                        </expr_stmt>
                                                                                                                                                                        }
                                                                                                                                                                    </block>
                                                                                                                                                                </then>
                                                                                                                                                                <else>
                                                                                                                                                                    else
                                                                                                                                                                    <block>
                                                                                                                                                                        {
                                                                                                                                                                        <comment
                                                                                                                                                                                type="line">
                                                                                                                                                                            //
                                                                                                                                                                            System.out.println("abort
                                                                                                                                                                            9");
                                                                                                                                                                        </comment>
                                                                                                                                                                        <return>
                                                                                                                                                                            return <expr>
                                                                                                                                                                            false</expr>;
                                                                                                                                                                        </return>
                                                                                                                                                                        <comment
                                                                                                                                                                                type="line">
                                                                                                                                                                            //
                                                                                                                                                                            REVISIT
                                                                                                                                                                        </comment>
                                                                                                                                                                        }
                                                                                                                                                                    </block>
                                                                                                                                                                </else>
                                                                                                                                                            </if>
                                                                                                                                                        </else>
                                                                                                                                                    </if>
                                                                                                                                                </else>
                                                                                                                                            </if>
                                                                                                                                        </else>
                                                                                                                                    </if>
                                                                                                                                </else>
                                                                                                                            </if>
                                                                                                                        </else>
                                                                                                                    </if>
                                                                                                                </else>
                                                                                                            </if>
                                                                                                        </else>
                                                                                                    </if>
                                                                                                </else>
                                                                                            </if>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>isNameTestNCName</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <comment type="line">//
                                                                            System.out.println("abort 10");
                                                                        </comment>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        <comment type="line">// REVISIT - "NCName:* ::"
                                                                            where "AxisName ::" is required
                                                                        </comment>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_DOUBLE_COLON
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = false
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>!
                                                                        <name>isAxisName</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr><name>currentOffset</name>++
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>++<name>currentOffset</name> ==
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <break>break;</break>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <comment type="line">//</comment>
                                                <comment type="line">// Otherwise, the token must not be recognized as
                                                    an OperatorName, a NodeType, a
                                                </comment>
                                                <comment type="line">// FunctionName, or an AxisName.</comment>
                                                <comment type="line">//</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>isNameTestNCName</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>
                                                                                            EXPRTOKEN_NAMETEST_NAMESPACE
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>tokens</name>.
                                                                            <name>addToken</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nameHandle</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>addToken</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>tokens</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name><name>XPath</name>.<name>
                                                                                        Tokens</name>.
                                                                                        <name>EXPRTOKEN_NAMETEST_QNAME
                                                                                        </name>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>starIsMultiplyOperator</name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>tokens</name>.
                                                                            <name>addToken</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>prefixHandle</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>tokens</name>.
                                                                            <name>addToken</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>nameHandle</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                <break>break;</break>
                                            </case>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>XPath</name>.<name>Tokens</name>.
                                            <name>DUMP_TOKENS</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>tokens</name>.
                                                        <name>dumpTokens</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">//</comment>
                    <comment type="line">// [5] NCName ::= (Letter | '_') (NCNameChar)*</comment>
                    <comment type="line">// [6] NCNameChar ::= Letter | Digit | '.' | '-' | '_' | CombiningChar |
                        Extender
                    </comment>
                    <comment type="line">//</comment>
                    <function>
                        <type>
                            <name>int</name>
                        </type>
                        <name>scanNCName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &gt;= 0x80
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <call>
                                                        <name><name>XMLChar</name>.
                                                            <name>isNameStart</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <comment type="javadoc">/*** // REVISIT: Make sure this is a negation.
                                                    ***
                                                    if ((XMLCharacterProperties.fgCharFlags[ch] &amp;
                                                    XMLCharacterProperties.E_InitialNameCharFlag) == 0)
                                                    /***/
                                                </comment>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>byte</name>
                                                </type>
                                                <name>chartype</name> =
                                                <init>
                                                    <expr>
                                                        <name>
                                                            <name>fASCIICharMap</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>chartype</name>
                                                    != <name>CHARTYPE_LETTER</name> &amp;&amp; <name>chartype</name> !=
                                                    <name>CHARTYPE_UNDERSCORE</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>
                            <while>while
                                <condition>(
                                    <expr>++<name>currentOffset</name> &lt;
                                        <name>endOffset</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>ch</name>
                                            =
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                &gt;= 0x80
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>XMLChar</name>.
                                                                    <name>isName</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <comment type="javadoc">/*** // REVISIT: Make sure this is a
                                                            negation. ***
                                                            if ((XMLCharacterProperties.fgCharFlags[ch] &amp;
                                                            XMLCharacterProperties.E_NameCharFlag) == 0)
                                                            /***/
                                                        </comment>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>byte</name>
                                                        </type>
                                                        <name>chartype</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fASCIICharMap</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>chartype</name>
                                                            != <name>CHARTYPE_LETTER</name> &amp;&amp; <name>chartype
                                                        </name> != <name>CHARTYPE_DIGIT</name> &amp;&amp;
                                                            <name>chartype</name>
                                                            != <name>CHARTYPE_PERIOD</name> &amp;&amp; <name>chartype
                                                        </name> != <name>CHARTYPE_MINUS</name> &amp;&amp;
                                                            <name>chartype</name>
                                                            !=
                                                            <name>CHARTYPE_UNDERSCORE</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>currentOffset</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    <comment type="line">//</comment>
                    <comment type="line">// [30] Number ::= Digits ('.' Digits?)? | '.' Digits</comment>
                    <comment type="line">// [31] Digits ::= [0-9]+</comment>
                    <comment type="line">//</comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>scanNumber</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name><name>XPath</name>.
                                            <name>Tokens</name>
                                        </name>
                                    </type>
                                    <name>tokens</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <comment type="block">/*byte[]*/</comment>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            <comment type="block">/*, EncodingSupport encoding*/</comment>)
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>whole</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>part</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &gt;= '0' &amp;&amp; <name>ch</name> &lt;= '9'
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>whole</name>
                                            = (<name>whole</name> * 10) + (<name>ch</name> - '0')
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>++<name>currentOffset</name> ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>ch</name>
                                            =
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        == '.'
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>++<name>currentOffset</name> &lt;
                                                    <name>endOffset</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="javadoc">/** int start = currentOffset; **/</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>ch</name>
                                                            =
                                                            <call>
                                                                <name><name>data</name>.
                                                                    <name>charAt</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>currentOffset</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <while>while
                                                        <condition>(
                                                            <expr>
                                                                <name>ch</name>
                                                                &gt;= '0' &amp;&amp; <name>ch</name> &lt;= '9'
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>part</name>
                                                                    = (<name>part</name> * 10) + (<name>ch</name> - '0')
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>++<name>currentOffset</name> ==
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>data</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </while>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>part</name>
                                                                != 0
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="javadoc">/***
                                                                    part = tokens.addSymbol(data, start, currentOffset -
                                                                    start, encoding);
                                                                    /***/
                                                                </comment>
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>RuntimeException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"find a solution!"</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                <comment type="line">//part =
                                                                    fStringPool.addSymbol(data.substring(start,
                                                                    currentOffset));
                                                                </comment>
                                                                <comment type="javadoc">/***/</comment>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>tokens</name>.
                                            <name>addToken</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>whole</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>tokens</name>.
                                            <name>addToken</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>part</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>currentOffset</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">//</comment>
                    <comment type="line">// Protected methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/**
                        * This method adds the specified token to the token list. By
                        * default, this method allows all tokens. However, subclasses
                        * of the XPathExprScanner can override this method in order
                        * to disallow certain tokens from being used in the scanned
                        * XPath expression. This is a convenient way of allowing only
                        * a subset of XPath.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name><name>XPath</name>.
                                            <name>Tokens</name>
                                        </name>
                                    </type>
                                    <name>tokens</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XPathException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>tokens</name>.
                                            <name>addToken</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>token</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// addToken(int)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Scanner</comment>

            <comment type="line">//</comment>
            <comment type="line">// MAIN</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Main program entry. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>main</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>argv</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>Exception</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>argv</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <specifier>final</specifier>
                                        <name>String</name>
                                    </type>
                                    <name>expression</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>argv</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>System</name>.<name>out</name>.
                                            <name>println</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"# XPath expression: \""+<name>expression</name>+'"'
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <try>try
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>SymbolTable</name>
                                            </type>
                                            <name>symbolTable</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name>SymbolTable</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XPath</name>
                                            </type>
                                            <name>xpath</name> =
                                            <init>
                                                <expr>new
                                                    <call>
                                                        <name>XPath</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>expression</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>symbolTable</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>System</name>.<name>out</name>.
                                                    <name>println</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"expanded xpath: \""+
                                                            <call>
                                                                <name><name>xpath</name>.
                                                                    <name>toString</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            +'"'
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>XPathException</name>
                                            </type>
                                            <name>e</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"error: "+
                                                                <call>
                                                                    <name><name>e</name>.
                                                                        <name>getMessage</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </catch>
                            </try>
                            }
                        </block>
                    </for>

                    }
                </block>
            </function>
            <comment type="line">// main(String[])</comment>

            }
        </block>
    </class>
    <comment type="line">// class XPath</comment>
</unit>
