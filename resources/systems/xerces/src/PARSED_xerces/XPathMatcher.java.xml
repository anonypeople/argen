<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\identity\XPathMatcher.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>identity</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xpath</name>.
            <name>XPath</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>IntStack</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>AttributePSVI</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>ShortList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * XPath matcher.
        *
        * @xerces.internal
        *
        * @author Andy Clark, IBM
        *
        * @version $Id: XPathMatcher.java,v 1.26 2005/05/09 21:03:33 ankitp Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XPathMatcher</name>
        <block>{

            <comment type="line">//</comment>
            <comment type="line">// Constants</comment>
            <comment type="line">//</comment>

            <comment type="line">// debugging</comment>

            <comment type="javadoc">/** Compile to true to debug everything. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ALL</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug method callbacks. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_METHODS</name> =
                    <init>
                        <expr>false ||
                            <name>DEBUG_ALL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug important method callbacks. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_METHODS2</name> =
                    <init>
                        <expr>false || <name>DEBUG_METHODS</name> ||
                            <name>DEBUG_ALL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug the &lt;em&gt;really&lt;/em&gt; important methods. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_METHODS3</name> =
                    <init>
                        <expr>false || <name>DEBUG_METHODS</name> ||
                            <name>DEBUG_ALL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug match. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_MATCH</name> =
                    <init>
                        <expr>false ||
                            <name>DEBUG_ALL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Compile to true to debug step index stack. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_STACK</name> =
                    <init>
                        <expr>false ||
                            <name>DEBUG_ALL</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Don't touch this value unless you add more debug constants. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEBUG_ANY</name> =
                    <init>
                        <expr>
                            <name>DEBUG_METHODS</name>
                            ||
                            <name>DEBUG_METHODS2</name>
                            ||
                            <name>DEBUG_METHODS3</name>
                            ||
                            <name>DEBUG_MATCH</name>
                            ||
                            <name>DEBUG_STACK</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// constants describing whether a match was made,</comment>
            <comment type="line">// and if so how.</comment>
            <comment type="line">// matched any way</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MATCHED</name> =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// matched on the attribute axis</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MATCHED_ATTRIBUTE</name> =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// matched on the descendant-or-self axixs</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MATCHED_DESCENDANT</name> =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// matched some previous (ancestor) node on the descendant-or-self-axis, but not this
                node
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MATCHED_DESCENDANT_PREVIOUS</name> =
                    <init>
                        <expr>13</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">//</comment>
            <comment type="line">// Data</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** XPath location path. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name><name>XPath</name>.
                            <name>LocationPath</name>
                        </name>
                        <index>[]</index>
                    </type>
                    <name>fLocationPaths</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** True if XPath has been matched. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fMatched</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The matching string. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Object</name>
                    </type>
                    <name>fMatchedString</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Integer stack of step indexes. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>IntStack</name>
                        <index>[]</index>
                    </type>
                    <name>fStepIndexes</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Current step. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fCurrentStep</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * No match depth. The value of this field will be zero while
                * matching is successful for the given xpath expression.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>fNoMatchDepth</name>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>final</specifier>
                        <name>QName</name>
                    </type>
                    <name>fQName</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>


            <comment type="line">//</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Constructs an XPath matcher that implements a document fragment
                * handler.
                *
                * @param xpath The xpath.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XPathMatcher</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XPath</name>
                            </type>
                            <name>xpath</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fLocationPaths</name>
                            =
                            <call>
                                <name><name>xpath</name>.
                                    <name>getLocationPaths</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fStepIndexes</name>
                            = new
                            <name>
                                <name>IntStack</name>
                                <index>[
                                    <expr>
                                        <name><name>fLocationPaths</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fStepIndexes</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <name>
                                    <name>fStepIndexes</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                = new
                                <call>
                                    <name>IntStack</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>fCurrentStep</name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name><name>fLocationPaths</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNoMatchDepth</name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name><name>fLocationPaths</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMatched</name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name><name>fLocationPaths</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <comment type="line">// &lt;init&gt;(XPath)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Public methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * Returns value of first member of fMatched that
                * is nonzero.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isMatched</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// xpath has been matched if any one of the members of the union have
                        matched.
                    </comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <if>if
                            <condition>(
                                <expr>((
                                    <name>
                                        <name>fMatched</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    &amp; <name>MATCHED</name>) == <name>MATCHED</name>)
                                    &amp;&amp; ((
                                    <name>
                                        <name>fMatched</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    &amp; <name>MATCHED_DESCENDANT_PREVIOUS</name>) != <name>
                                        MATCHED_DESCENDANT_PREVIOUS</name>)
                                    &amp;&amp; ((
                                    <name>
                                        <name>fNoMatchDepth</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    == 0)
                                    || ((
                                    <name>
                                        <name>fMatched</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    &amp; <name>MATCHED_DESCENDANT</name>) == <name>MATCHED_DESCENDANT</name>))
                                </expr>
                                )
                            </condition>
                            <then>
                                <return>return <expr>true</expr>;
                                </return>
                            </then>
                        </if>
                    </for>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// isMatched():int</comment>

            <comment type="line">//</comment>
            <comment type="line">// Protected methods</comment>
            <comment type="line">//</comment>

            <comment type="line">// a place-holder method; to be overridden by subclasses</comment>
            <comment type="line">// that care about matching element content.</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>handleContent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>nillable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>valueType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ShortList</name>
                            </type>
                            <name>itemValueType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * This method is called when the XPath handler matches the
                * XPath expression. Subclasses can override this method to
                * provide default handling upon a match.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>matched</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>actualValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>valueType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ShortList</name>
                            </type>
                            <name>itemValueType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isNil</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_METHODS3</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>toString</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        +"#matched(\""+<name>actualValue</name>+"\")"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>
            <comment type="line">// matched(String content, XSSimpleType val)</comment>

            <comment type="line">//</comment>
            <comment type="line">// ~XMLDocumentFragmentHandler methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/**
                * The start of the document fragment.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startDocumentFragment</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_METHODS</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>toString</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        +"#startDocumentFragment("+
                                                        ")"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// reset state</comment>
                    <expr_stmt>
                        <expr>
                            <name>fMatchedString</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fStepIndexes</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>clear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fCurrentStep</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fNoMatchDepth</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fMatched</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>


                    }
                </block>
            </function>
            <comment type="line">// startDocumentFragment()</comment>

            <comment type="javadoc">/**
                * The start of an element. If the document specifies the start element
                * by using an empty tag, then the startElement method will immediately
                * be followed by the endElement method, with no intervening methods.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                *
                * @throws SAXException Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_METHODS2</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>toString</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        +"#startElement("+
                                                        "element={"+<name>element</name>+"},"+
                                                        "attributes=..."+<name>attributes</name>+
                                                        ")"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// push context</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>startStep</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fCurrentStep</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fStepIndexes</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>push</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>startStep</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// try next xpath, if not matching</comment>
                            <if>if
                                <condition>(
                                    <expr>(
                                        <name>
                                            <name>fMatched</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &amp; <name>MATCHED_DESCENDANT</name>) == <name>MATCHED</name> ||
                                        <name>
                                            <name>fNoMatchDepth</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fNoMatchDepth</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>(
                                        <name>
                                            <name>fMatched</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &amp; <name>MATCHED_DESCENDANT</name>) ==
                                        <name>MATCHED_DESCENDANT</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fMatched</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>MATCHED_DESCENDANT_PREVIOUS</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>DEBUG_STACK</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toString</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                +": "+
                                                                <name>
                                                                    <name>fStepIndexes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// consume self::node() steps</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>XPath</name>.
                                            <name>Step</name>
                                        </name>
                                        <index>[]</index>
                                    </type>
                                    <name>steps</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fLocationPaths</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>steps</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                        &amp;&amp;
                                        <name>
                                            <name>steps</name>
                                            <index>[
                                                <expr>
                                                    <name>
                                                        <name>fCurrentStep</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XPath</name>.<name>Axis</name>.
                                            <name>SELF</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>DEBUG_MATCH</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name><name>XPath</name>.
                                                                <name>Step</name>
                                                            </name>
                                                        </type>
                                                        <name>step</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>steps</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>
                                                                                <name>fCurrentStep</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>toString</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        +" [SELF] MATCHED!"
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fCurrentStep</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            ++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" XPath MATCHED!"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fMatched</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>MATCHED</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// now if the current step is a descendant step, we let the next
                            </comment>
                            <comment type="line">// step do its thing; if it fails, we reset ourselves</comment>
                            <comment type="line">// to look at this step for next time we're called.</comment>
                            <comment type="line">// so first consume all descendants:</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>descendantStep</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fCurrentStep</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <while>while
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                        &amp;&amp;
                                        <name>
                                            <name>steps</name>
                                            <index>[
                                                <expr>
                                                    <name>
                                                        <name>fCurrentStep</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XPath</name>.<name>Axis</name>.
                                            <name>DESCENDANT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>DEBUG_MATCH</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name><name>XPath</name>.
                                                                <name>Step</name>
                                                            </name>
                                                        </type>
                                                        <name>step</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>steps</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>
                                                                                <name>fCurrentStep</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>System</name>.<name>out</name>.
                                                                <name>println</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name>toString</name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        +" [DESCENDANT] MATCHED!"
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fCurrentStep</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            ++
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </while>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>sawDescendant</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fCurrentStep</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            &gt;
                                            <name>descendantStep</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" XPath DIDN'T MATCH!"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fNoMatchDepth</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" [CHILD] after NO MATCH"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// match child::... step, if haven't consumed any self::node()
                            </comment>
                            <if>if
                                <condition>(
                                    <expr>(
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        == <name>startStep</name> ||
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &gt; <name>descendantStep</name>) &amp;&amp;
                                        <name>
                                            <name>steps</name>
                                            <index>[
                                                <expr>
                                                    <name>
                                                        <name>fCurrentStep</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XPath</name>.<name>Axis</name>.
                                            <name>CHILD</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name><name>XPath</name>.
                                                        <name>Step</name>
                                                    </name>
                                                </type>
                                                <name>step</name> =
                                                <init>
                                                    <expr>
                                                        <name>
                                                            <name>steps</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>
                                                                        <name>fCurrentStep</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name><name>XPath</name>.
                                                        <name>NodeTest</name>
                                                    </name>
                                                </type>
                                                <name>nodeTest</name> =
                                                <init>
                                                    <expr>
                                                        <name><name>step</name>.
                                                            <name>nodeTest</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" [CHILD] before"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>nodeTest</name>.
                                                        <name>type</name>
                                                    </name>
                                                    ==
                                                    <name><name>XPath</name>.<name>NodeTest</name>.
                                                        <name>QNAME</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!
                                                                <call>
                                                                    <name><name>nodeTest</name>.<name>name</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>element</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>
                                                                                <name>fCurrentStep</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            &gt;
                                                                            <name>descendantStep</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>fCurrentStep</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                    =
                                                                                    <name>descendantStep</name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <continue>continue;</continue>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fNoMatchDepth</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        ++
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>DEBUG_MATCH</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>System</name>.<name>
                                                                                            out</name>.
                                                                                            <name>println</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name>toString
                                                                                                        </name>
                                                                                                        <argument_list>
                                                                                                            ()
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                    +" [CHILD] after NO
                                                                                                    MATCH"
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <continue>continue;</continue>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fCurrentStep</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" [CHILD] after MATCHED!"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>sawDescendant</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fCurrentStep</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>descendantStep</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fMatched</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>MATCHED_DESCENDANT</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fMatched</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>MATCHED</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// match attribute::... step</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                        &amp;&amp;
                                        <name>
                                            <name>steps</name>
                                            <index>[
                                                <expr>
                                                    <name>
                                                        <name>fCurrentStep</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name><name>axis</name>.
                                            <name>type</name>
                                        </name>
                                        ==
                                        <name><name>XPath</name>.<name>Axis</name>.
                                            <name>ATTRIBUTE</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" [ATTRIBUTE] before"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>attrCount</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>attributes</name>.
                                                                <name>getLength</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>attrCount</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name><name>XPath</name>.
                                                                    <name>NodeTest</name>
                                                                </name>
                                                            </type>
                                                            <name>nodeTest</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>
                                                                        <name>steps</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fCurrentStep</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    .
                                                                    <name>nodeTest</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <for>for (
                                                        <init>
                                                            <decl>
                                                                <type>
                                                                    <name>int</name>
                                                                </type>
                                                                <name>aIndex</name> =
                                                                <init>
                                                                    <expr>0</expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </init>
                                                        <condition>
                                                            <expr>
                                                                <name>aIndex</name>
                                                                &lt;
                                                                <name>attrCount</name>
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>aIndex</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>attributes</name>.
                                                                            <name>getName</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>aIndex</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fQName</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>nodeTest</name>.
                                                                            <name>type</name>
                                                                        </name>
                                                                        !=
                                                                        <name><name>XPath</name>.<name>NodeTest</name>.
                                                                            <name>QNAME</name>
                                                                        </name>
                                                                        ||
                                                                        <call>
                                                                            <name><name>nodeTest</name>.<name>
                                                                                name</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fQName</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>fCurrentStep</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>i</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                ++
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>fCurrentStep</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>steps</name>.
                                                                                        <name>length</name>
                                                                                    </name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>fMatched</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>i</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            =
                                                                                            <name>MATCHED_ATTRIBUTE
                                                                                            </name>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    <decl_stmt>
                                                                                        <decl>
                                                                                            <type>
                                                                                                <name>int</name>
                                                                                            </type>
                                                                                            <name>j</name>=
                                                                                            <init>
                                                                                                <expr>0</expr>
                                                                                            </init>
                                                                                        </decl>
                                                                                        ;
                                                                                    </decl_stmt>
                                                                                    <for>for(<init>;</init>
                                                                                        <condition>
                                                                                            <expr><name>j</name>&lt;<name>
                                                                                                i
                                                                                            </name> &amp;&amp; ((
                                                                                                <name>
                                                                                                    <name>fMatched
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>j
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                                &amp; <name>
                                                                                                    MATCHED</name>)
                                                                                                != <name>MATCHED</name>)
                                                                                            </expr>
                                                                                            ;
                                                                                        </condition>
                                                                                        <incr>
                                                                                            <expr><name>j</name>++
                                                                                            </expr>
                                                                                        </incr>
                                                                                        )
                                                                                        <empty_stmt>;</empty_stmt>
                                                                                    </for>
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr><name>j</name>==
                                                                                                <name>i</name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <decl_stmt>
                                                                                                    <decl>
                                                                                                        <type>
                                                                                                            <name>
                                                                                                                AttributePSVI
                                                                                                            </name>
                                                                                                        </type>
                                                                                                        <name>attrPSVI
                                                                                                        </name> =
                                                                                                        <init>
                                                                                                            <expr>
                                                                                                                (<name>
                                                                                                                AttributePSVI</name>)
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            attributes</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            getAugmentations
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    aIndex
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                                .
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        getItem
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        Constants</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        ATTRIBUTE_PSVI
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                        </init>
                                                                                                    </decl>
                                                                                                    ;
                                                                                                </decl_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            fMatchedString
                                                                                                        </name>
                                                                                                        =
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                attrPSVI</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getActualNormalizedValue
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                matched
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            fMatchedString
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    attrPSVI</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    getActualNormalizedValueType
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                ()
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    attrPSVI</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    getItemValueTypes
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                ()
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        false
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                    </if>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>
                                                                        <break>break;</break>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>(
                                                    <name>
                                                        <name>fMatched</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    &amp; <name>MATCHED</name>) !=
                                                    <name>MATCHED</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>
                                                                    <name>fCurrentStep</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                &gt;
                                                                <name>descendantStep</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>fCurrentStep</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        =
                                                                        <name>descendantStep</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <continue>continue;</continue>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>fNoMatchDepth</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            ++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>DEBUG_MATCH</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>System</name>.<name>out</name>.
                                                                                <name>println</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>toString</name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                        +" [ATTRIBUTE] after"
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <continue>continue;</continue>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>DEBUG_MATCH</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.<name>out</name>.
                                                                    <name>println</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>toString</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                            +" [ATTRIBUTE] after MATCHED!"
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    }
                </block>
            </function>
            <comment type="line">// startElement(QName,XMLAttrList,int)</comment>

            <comment type="javadoc">/**
                * @param element
                * name of the element.
                * @param type
                * content type of this element. IOW, the XML schema type
                * of the &lt;tt&gt;value&lt;/tt&gt;. Note that this may not be the type declared
                * in the element declaration, but it is "the actual type". For example,
                * if the XML is &amp;lt;foo xsi:type="xs:string"&gt;aaa&amp;lt;/foo&gt;, this
                * parameter will be "xs:string".
                * @param nillable - nillable
                * true if the element declaration is nillable.
                * @param value - actual value
                * the typed value of the content of this element.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>nillable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>valueType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ShortList</name>
                            </type>
                            <name>itemValueType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>DEBUG_METHODS2</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>System</name>.<name>out</name>.
                                                <name>println</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>toString</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        +"#endElement("+
                                                        "element={"+<name>element</name>+"},"+
                                                        ")"
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// go back a step</comment>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fCurrentStep</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>fStepIndexes</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>pop</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// don't do anything, if not matching</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fNoMatchDepth</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fNoMatchDepth</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                --
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>

                                <comment type="line">// signal match, if appropriate</comment>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                </type>
                                                <name>j</name>=
                                                <init>
                                                    <expr>0</expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for(<init>;</init>
                                            <condition>
                                                <expr><name>j</name>&lt;<name>i</name> &amp;&amp; ((
                                                    <name>
                                                        <name>fMatched</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    &amp; <name>MATCHED</name>) != <name>MATCHED</name>)
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>j</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <empty_stmt>;</empty_stmt>
                                        </for>
                                        <if>if
                                            <condition>(
                                                <expr>(<name>j</name>&lt;<name>i</name>) || (
                                                    <name>
                                                        <name>fMatched</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    == 0) ||
                                                    ((
                                                    <name>
                                                        <name>fMatched</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    &amp; <name>MATCHED_ATTRIBUTE</name>) == <name>
                                                        MATCHED_ATTRIBUTE</name>)
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <continue>continue;</continue>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <comment type="line">// only certain kinds of matchers actually</comment>
                                        <comment type="line">// match element content. This permits</comment>
                                        <comment type="line">// them a way to override this to do nothing</comment>
                                        <comment type="line">// and hopefully save a few operations.</comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>handleContent</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>type</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>nillable</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>valueType</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>itemValueType</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fMatched</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = 0
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name>DEBUG_STACK</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.<name>out</name>.
                                                        <name>println</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>toString</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                +": "+
                                                                <name>
                                                                    <name>fStepIndexes</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>i</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    }
                </block>
            </function>
            <comment type="line">// endElement(QName)</comment>

            <comment type="line">//</comment>
            <comment type="line">// Object methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Returns a string representation of this object. */</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="javadoc">/***
                        return fLocationPath.toString();
                        /***/
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>str</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>toString</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>lastIndexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'.'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index2</name>
                                != -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>s</name>
                                        =
                                        <call>
                                            <name><name>s</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>index2</name>
                                                        + 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>str</name>.
                                    <name>append</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>s</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for(
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name><name>fLocationPaths</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>'['</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>XPath</name>.
                                            <name>Step</name>
                                        </name>
                                        <index>[]</index>
                                    </type>
                                    <name>steps</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fLocationPaths</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <name>steps</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>j</name>
                                                ==
                                                <name>
                                                    <name>fCurrentStep</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'^'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name><name>str</name>.
                                                    <name>append</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>steps</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>toString</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>j</name>
                                                &lt;
                                                <name><name>steps</name>.
                                                    <name>length</name>
                                                </name>
                                                - 1
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>str</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>'/'</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCurrentStep</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>steps</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>str</name>.
                                                        <name>append</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>'^'</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>']'</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>str</name>.
                                            <name>append</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>','</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>str</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// toString():String</comment>

            <comment type="line">//</comment>
            <comment type="line">// Private methods</comment>
            <comment type="line">//</comment>

            <comment type="javadoc">/** Normalizes text. */</comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>s</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>str</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>s</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>char</name>
                                    </type>
                                    <name>c</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>s</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>c</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case <expr>'\n'</expr>:
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>str</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"\\n"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <default>default:
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>str</name>.
                                                            <name>append</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>c</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <call>
                                <name><name>str</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            <comment type="line">// normalize(String):String</comment>

            <comment type="line">//</comment>
            <comment type="line">// MAIN</comment>
            <comment type="line">//</comment>

            <comment type="line">// NOTE: The main of this class is here for debugging purposes.</comment>
            <comment type="line">// However, javac (JDK 1.1.8) has an internal compiler</comment>
            <comment type="line">// error when compiling. Jikes has no problem, though.</comment>
            <comment type="line">//</comment>
            <comment type="line">// If you want to use this main, use Jikes to compile but</comment>
            <comment type="line">// *never* check in this code to CVS without commenting it</comment>
            <comment type="line">// out. -Ac</comment>

            <comment type="javadoc">/** Main program. */</comment>
            <comment type="javadoc">/***
                public static void main(String[] argv) throws XNIException {

                if (DEBUG_ANY) {
                for (int i = 0; i &lt; argv.length; i++) {
                final String expr = argv[i];
                final XPath xpath = new XPath(expr, symbols, null);
                final XPathMatcher matcher = new XPathMatcher(xpath, true);
                org.apache.xerces.parsers.SAXParser parser =
                new org.apache.xerces.parsers.SAXParser(symbols) {
                public void startDocument() throws XNIException {
                matcher.startDocumentFragment(symbols, null);
                }
                public void startElement(QName element, XMLAttrList attributes, int handle) throws XNIException {
                matcher.startElement(element, attributes, handle);
                }
                public void characters(char[] ch, int offset, int length) throws XNIException {
                matcher.characters(ch, offset, length);
                }
                public void endElement(QName element) throws XNIException {
                matcher.endElement(element);
                }
                public void endDocument() throws XNIException {
                matcher.endDocumentFragment();
                }
                };
                System.out.println("#### argv["+i+"]: \""+expr+"\" -&gt; \""+xpath.toString()+'"');
                final String uri = argv[++i];
                System.out.println("#### argv["+i+"]: "+uri);
                parser.parse(uri);
                }
                }

                } // main(String[])
                /***/
            </comment>

            }
        </block>
    </class>
    <comment type="line">// class XPathMatcher</comment>
</unit>
