<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xpointer\XPointerHandler.java">
    <comment type="block">/*
        * Copyright 2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xpointer</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>Constants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLChar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xinclude</name>.
            <name>XIncludeHandler</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xinclude</name>.
            <name>XIncludeNamespaceSupport</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>Augmentations</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLString</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XNIException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLConfigurationException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>parser</name>.
            <name>XMLErrorHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;
        * This is a pipeline component which extends the XIncludeHandler to perform
        * XPointer specific processing specified in the W3C XPointerFramework and
        * element() Scheme Recommendations.
        * &lt;/p&gt;
        *
        * &lt;p&gt;
        * This component analyzes each event in the pipeline, looking for an element
        * that matches a PointerPart in the parent XInclude element's xpointer attribute
        * value. If the match succeeds, all children are passed by this component.
        * &lt;/p&gt;
        *
        * &lt;p&gt;
        * See the &lt;a href="http://www.w3.org/TR/xptr-framework//"&gt;XPointer Framework Recommendation&lt;/a&gt; for
        * more information on the XPointer Framework and ShortHand Pointers.
        * See the &lt;a href="http://www.w3.org/TR/xptr-element/"&gt;XPointer element() Scheme Recommendation&lt;/a&gt;
        for
        * more information on the XPointer element() Scheme.
        * &lt;/p&gt;
        *
        * @xerces.internal
        *
        * @version $Id: XPointerHandler.java,v 1.1 2005/06/17 22:00:20 nddelima Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>XPointerHandler</name>
        <super>
            <extends>extends
                <name>XIncludeHandler</name>
            </extends>
            <implements>implements
                <name>XPointerProcessor</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// Fields</comment>
            <comment type="line">// A Vector of XPointerParts</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fXPointerParts</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The current XPointerPart</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XPointerPart</name>
                    </type>
                    <name>fXPointerPart</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Has the fXPointerPart resolved successfully</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFoundMatchingPtrPart</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The XPointer Error reporter</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorReporter</name>
                    </type>
                    <name>fXPointerErrorReporter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// The XPointer Error Handler</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLErrorHandler</name>
                    </type>
                    <name>fErrorHandler</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// XPointerFramework symbol table</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Supported schemes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ELEMENT_SCHEME_NAME</name> =
                    <init>
                        <expr>"element"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Has the XPointer resolved the subresource</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fIsXPointerResolved</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// Fixup xml:base and xml:lang attributes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFixupBase</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fFixupLang</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// ************************************************************************</comment>
            <comment type="line">// Constructors</comment>
            <comment type="line">// ************************************************************************</comment>

            <comment type="javadoc">/**
                *
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XPointerHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fXPointerParts</name>
                            = new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            = new
                            <call>
                                <name>SymbolTable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>XPointerHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorHandler</name>
                            </type>
                            <name>errorHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>errorReporter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name>fXPointerParts</name>
                            = new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fErrorHandler</name>
                            =
                            <name>errorHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fXPointerErrorReporter</name>
                            =
                            <name>errorReporter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//fErrorReporter = errorReporter; // The XInclude ErrorReporter</comment>
                    }
                </block>
            </constructor>

            <comment type="line">// ************************************************************************</comment>
            <comment type="line">// Implementation of the XPointerProcessor interface.</comment>
            <comment type="line">// ************************************************************************</comment>

            <comment type="javadoc">/**
                * Parses the XPointer framework expression and delegates scheme specific parsing.
                *
                * @see org.apache.xerces.xpointer.XPointerProcessor#parseXPointer(java.lang.String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>parseXPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xpointer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Initialize</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>init</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// tokens</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Tokens</name>
                            </type>
                            <name>tokens</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Tokens</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// scanner</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Scanner</name>
                            </type>
                            <name>scanner</name> =
                            <init>
                                <expr>new
                                    <class>
                                        <super>
                                            <name>Scanner</name>
                                        </super>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                        <block>{
                                            <function>
                                                <type>
                                                    <specifier>protected</specifier>
                                                    <name>void</name>
                                                </type>
                                                <name>addToken</name>
                                                <parameter_list>(
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>Tokens</name>
                                                            </type>
                                                            <name>tokens</name>
                                                        </decl>
                                                    </param>
                                                    ,
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>token</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                </parameter_list>
                                                <throws>throws
                                                    <argument>
                                                        <expr>
                                                            <name>XNIException</name>
                                                        </expr>
                                                    </argument>
                                                </throws>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>token</name>
                                                                ==
                                                                <name><name>Tokens</name>.
                                                                    <name>XPTRTOKEN_OPEN_PAREN</name>
                                                                </name>
                                                                || <name>token</name> ==
                                                                <name><name>Tokens</name>.
                                                                    <name>XPTRTOKEN_CLOSE_PAREN</name>
                                                                </name>
                                                                || <name>token</name> ==
                                                                <name><name>Tokens</name>.
                                                                    <name>XPTRTOKEN_SCHEMENAME</name>
                                                                </name>
                                                                || <name>token</name> ==
                                                                <name><name>Tokens</name>.
                                                                    <name>XPTRTOKEN_SCHEMEDATA</name>
                                                                </name>
                                                                || <name>token</name> ==
                                                                <name><name>Tokens</name>.
                                                                    <name>XPTRTOKEN_SHORTHAND</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>super</name>.
                                                                                <name>addToken</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>tokens</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>token</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <return>return;</return>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"InvalidXPointerToken"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>
                                                                                            <name>tokens</name>
                                                                                            .
                                                                                            <name>getTokenString</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>token</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </function>
                                            }
                                        </block>
                                    </class>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// scan the XPointer expression</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>xpointer</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>success</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>scanner</name>.
                                            <name>scanExpr</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>fSymbolTable</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>tokens</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xpointer</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>success</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>reportError</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"InvalidXPointerExpression"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>xpointer</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>tokens</name>.
                                        <name>hasMore</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>tokens</name>.
                                                    <name>nextToken</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <switch>switch
                                <condition>(
                                    <expr>
                                        <name>token</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <case>case
                                        <expr>
                                            <name><name>Tokens</name>.
                                                <name>XPTRTOKEN_SHORTHAND</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{

                                            <comment type="line">// The shortHand name</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>shortHandPointerName</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>shortHandPointerName</name>
                                                        ==
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"InvalidXPointerExpression"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>xpointer</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XPointerPart</name>
                                                    </type>
                                                    <name>shortHandPointer</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>ShortHandPointer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>fSymbolTable</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>shortHandPointer</name>.
                                                            <name>setSchemeName</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>shortHandPointerName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>fXPointerParts</name>.
                                                            <name>add</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>shortHandPointer</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <case>case
                                        <expr>
                                            <name><name>Tokens</name>.
                                                <name>XPTRTOKEN_SCHEMENAME</name>
                                            </name>
                                        </expr>
                                        :
                                        <block>{

                                            <comment type="line">// Retreive the local name and prefix to form the
                                                scheme name
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>prefix</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>localName</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>schemeName</name> =
                                                    <init>
                                                        <expr>
                                                            <name>prefix</name>
                                                            +
                                                            <name>localName</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <comment type="line">// The next character should be an open parenthesis
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>openParenCount</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>closeParenCount</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>

                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>openParen</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>openParen</name>
                                                        != "XPTRTOKEN_OPEN_PAREN"
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{

                                                        <comment type="line">// can not have more than one ShortHand
                                                            Pointer
                                                        </comment>
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>token</name>
                                                                    ==
                                                                    <name><name>Tokens</name>.
                                                                        <name>XPTRTOKEN_SHORTHAND</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "MultipleShortHandPointers"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>xpointer
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "InvalidXPointerExpression"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>xpointer
                                                                                                    </name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr><name>openParenCount</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// followed by zero or more ( and the schemeData
                                            </comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>schemeData</name> =
                                                    <init>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tokens</name>.
                                                                <name>hasMore</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>token</name>
                                                            =
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>nextToken</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>schemeData</name>
                                                            =
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>schemeData</name>
                                                                != "XPTRTOKEN_OPEN_PAREN"
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr><name>openParenCount</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </while>
                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>schemeData</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>getTokenString</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>token</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <comment type="line">// followed by the same number of )</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>token</name>
                                                    =
                                                    <call>
                                                        <name><name>tokens</name>.
                                                            <name>nextToken</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>closeParen</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>tokens</name>.
                                                                    <name>getTokenString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>token</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>closeParen</name>
                                                        != "XPTRTOKEN_CLOSE_PAREN"
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                "SchemeDataNotFollowedByCloseParenthesis"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>xpointer</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr><name>closeParenCount</name>++
                                                </expr>
                                                ;
                                            </expr_stmt>

                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>tokens</name>.
                                                                <name>hasMore</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>tokens</name>.
                                                                        <name>getTokenString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tokens</name>.
                                                                                        <name>peekToken</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                != "XPTRTOKEN_OPEN_PAREN"
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <break>break;</break>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr><name>closeParenCount</name>++
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </while>

                                            <comment type="line">// check if the number of open parenthesis are equal to
                                                the number of close parenthesis
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>openParenCount</name>
                                                        !=
                                                        <name>closeParenCount</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                "UnbalancedParenthesisInXPointerExpression"
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>xpointer</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>new
                                                                                        <call>
                                                                                            <name>Integer</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            openParenCount
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>new
                                                                                        <call>
                                                                                            <name>Integer</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            closeParenCount
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>

                                            <comment type="line">// Perform scheme specific parsing of the pointer
                                                part
                                            </comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>schemeName</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ELEMENT_SCHEME_NAME</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <decl_stmt>
                                                            <decl>
                                                                <type>
                                                                    <name>XPointerPart</name>
                                                                </type>
                                                                <name>elementSchemePointer</name> =
                                                                <init>
                                                                    <expr>new
                                                                        <call>
                                                                            <name>ElementSchemePointer</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fSymbolTable</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>fErrorReporter</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </init>
                                                            </decl>
                                                            ;
                                                        </decl_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>elementSchemePointer</name>.
                                                                        <name>setSchemeName</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>schemeName</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name><name>elementSchemePointer</name>.
                                                                        <name>setSchemeData</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>schemeData</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// If an exception occurs while parsing the
                                                            element() scheme expression
                                                        </comment>
                                                        <comment type="line">// ignore it and move on to the next
                                                            pointer part
                                                        </comment>
                                                        <try>try
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>elementSchemePointer</name>.
                                                                                <name>parseXPointer</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>schemeData</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>fXPointerParts</name>.
                                                                                <name>add</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>elementSchemePointer
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                            <catch>catch (
                                                                <param>
                                                                    <decl>
                                                                        <type>
                                                                            <name>XNIException</name>
                                                                        </type>
                                                                        <name>e</name>
                                                                    </decl>
                                                                </param>
                                                                )
                                                                <block>{
                                                                    <comment type="line">// Re-throw the XPointer
                                                                        element() scheme syntax error.
                                                                    </comment>
                                                                    <throw>throw
                                                                        <expr>new
                                                                            <call>
                                                                                <name>XNIException</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>e</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </throw>
                                                                    }
                                                                </block>
                                                            </catch>
                                                        </try>

                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <comment type="line">// ????</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportWarning</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"SchemeUnsupported"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>schemeName</name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>

                                            <break>break;</break>
                                            }
                                        </block>
                                    </case>
                                    <default>default:
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"InvalidXPointerExpression"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>xpointer</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </default>
                                    }
                                </block>
                            </switch>
                            }
                        </block>
                    </while>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                *
                * @see org.apache.xerces.xpointer.XPointerProcessor#resolveXPointer(org.apache.xerces.xni.QName,
                org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, int event)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>resolveXPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>resolved</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// The result of the first pointer part whose evaluation identifies</comment>
                    <comment type="line">// one or more subresources is reported by the XPointer processor as the
                    </comment>
                    <comment type="line">// result of the pointer as a whole, and evaluation stops.</comment>
                    <comment type="line">// In our implementation, typically the first xpointer scheme that</comment>
                    <comment type="line">// matches an element is the document is considered.</comment>
                    <comment type="line">// If the pointer part resolved then use it, else search for the fragment
                    </comment>
                    <comment type="line">// using next pointer part from lef-right.</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>fFoundMatchingPtrPart</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// for each element, attempt to resolve it against each pointer
                                    part
                                </comment>
                                <comment type="line">// in the XPointer expression until a matching element is found.
                                </comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <call>
                                                <name><name>fXPointerParts</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{

                                        <expr_stmt>
                                            <expr>
                                                <name>fXPointerPart</name>
                                                = (<name>XPointerPart</name>)
                                                <call>
                                                    <name><name>fXPointerParts</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>fXPointerPart</name>.
                                                            <name>resolveXPointer</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>element</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>augs</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>event</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>fFoundMatchingPtrPart</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>resolved</name>
                                                            = true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>fXPointerPart</name>.
                                                    <name>resolveXPointer</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>element</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>attributes</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>augs</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>event</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>resolved</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fIsXPointerResolved</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fIsXPointerResolved</name>
                                        =
                                        <name>resolved</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>resolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the Node fragment is resolved.
                *
                * @see org.apache.xerces.xpointer.XPointerProcessor#isFragmentResolved()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isFragmentResolved</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>resolved</name> =
                            <init>
                                <expr>(<name>fXPointerPart</name> != <name>null</name>) ?
                                    <call>
                                        <name><name>fXPointerPart</name>.
                                            <name>isFragmentResolved</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    : false
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <name>fIsXPointerResolved</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fIsXPointerResolved</name>
                                        =
                                        <name>resolved</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>resolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the XPointer expression resolves to a non-element child
                * of the current resource fragment.
                *
                * @see org.apache.xerces.xpointer.XPointerPart#isChildFragmentResolved()
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isChildFragmentResolved</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>resolved</name> =
                            <init>
                                <expr>(<name>fXPointerPart</name> != <name>null</name>) ?
                                    <call>
                                        <name>
                                            <name>fXPointerPart</name>
                                            .
                                            <name>isChildFragmentResolved</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    : false
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>resolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if the XPointer successfully found a sub-resource .
                *
                * @see org.apache.xerces.xpointer.XPointerProcessor#isFragmentResolved()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isXPointerResolved</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <name>fIsXPointerResolved</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the pointer part used to resolve the document fragment.
                *
                * @return String - The pointer part used to resolve the document fragment.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XPointerPart</name>
                </type>
                <name>getXPointerPart</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fXPointerPart</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Reports XPointer Errors
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>reportError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>arguments</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="block">/*
                        fXPointerErrorReporter.reportError(
                        XPointerMessageFormatter.XPOINTER_DOMAIN, key, arguments,
                        XMLErrorReporter.SEVERITY_ERROR);
                        */
                    </comment>
                    <throw>throw
                        <expr>new
                            <call>
                                <name>XNIException</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(
                                            <call>
                                                <name>
                                                    <name>fErrorReporter</name>
                                                    .
                                                    <name>getMessageFormatter</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>XPointerMessageFormatter</name>.
                                                                <name>XPOINTER_DOMAIN</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            )
                                            .
                                            <call>
                                                <name>formatMessage</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>fErrorReporter</name>.
                                                                    <name>getLocale</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>arguments</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </throw>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Reports XPointer Warnings
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>reportWarning</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>arguments</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fXPointerErrorReporter</name>.
                                    <name>reportError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XPointerMessageFormatter</name>.
                                                <name>XPOINTER_DOMAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>arguments</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>XMLErrorReporter</name>.
                                                <name>SEVERITY_WARNING</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initializes error handling objects
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>initErrorReporter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fXPointerErrorReporter</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fXPointerErrorReporter</name>
                                        = new
                                        <call>
                                            <name>XMLErrorReporter</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fErrorHandler</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fErrorHandler</name>
                                        = new
                                        <call>
                                            <name>XPointerErrorHandler</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="block">/*
                        fXPointerErrorReporter.setProperty(Constants.XERCES_PROPERTY_PREFIX
                        + Constants.ERROR_HANDLER_PROPERTY, fErrorHandler);
                        */
                    </comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fXPointerErrorReporter</name>.
                                    <name>putMessageFormatter</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XPointerMessageFormatter</name>.
                                                <name>XPOINTER_DOMAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>XPointerMessageFormatter</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initializes the XPointer Processor;
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>init</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fXPointerParts</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fXPointerPart</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fFoundMatchingPtrPart</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fIsXPointerResolved</name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//fFixupBase = false;</comment>
                    <comment type="line">//fFixupLang = false;</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>initErrorReporter</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a Vector of XPointerPart objects
                *
                * @return A Vector of XPointerPart objects.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Vector</name>
                </type>
                <name>getPointerParts</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fXPointerParts</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * List of XPointer Framework tokens.
                *
                * @xerces.internal
                *
                */
            </comment>
            <class>
                <specifier>private</specifier>
                <specifier>final</specifier> class <name>Tokens</name>
                <block>{

                    <comment type="javadoc">/**
                        * XPointer Framework tokens
                        * [1] Pointer ::= Shorthand | SchemeBased
                        * [2] Shorthand ::= NCName
                        * [3] SchemeBased ::= PointerPart (S? PointerPart)*
                        * [4] PointerPart ::= SchemeName '(' SchemeData ')'
                        * [5] SchemeName ::= QName
                        * [6] SchemeData ::= EscapedData*
                        * [7] EscapedData ::= NormalChar | '^(' | '^)' | '^^' | '(' SchemeData ')'
                        * [8] NormalChar ::= UnicodeChar - [()^]
                        * [9] UnicodeChar ::= [#x0-#x10FFFF]
                        *
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>XPTRTOKEN_OPEN_PAREN</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                            ,
                            <name>XPTRTOKEN_CLOSE_PAREN</name>
                            =
                            <init>
                                <expr>1</expr>
                            </init>
                            , <name>XPTRTOKEN_SHORTHAND</name> =
                            <init>
                                <expr>2</expr>
                            </init>
                            ,
                            <name>XPTRTOKEN_SCHEMENAME</name>
                            =
                            <init>
                                <expr>3</expr>
                            </init>
                            , <name>XPTRTOKEN_SCHEMEDATA</name> =
                            <init>
                                <expr>4</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Token names</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>String</name>
                                <index>[]</index>
                            </type>
                            <name>fgTokenNames</name> =
                            <init>
                                <expr>
                                    <block>{ <expr>"XPTRTOKEN_OPEN_PAREN"</expr>,
                                        <expr>"XPTRTOKEN_CLOSE_PAREN"</expr>, <expr>"XPTRTOKEN_SHORTHAND"</expr>,
                                        <expr>"XPTRTOKEN_SCHEMENAME"</expr>, <expr>"XPTRTOKEN_SCHEMEDATA"</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Token count</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>int</name>
                            </type>
                            <name>INITIAL_TOKEN_COUNT</name> =
                            <init>
                                <expr>1 &lt;&lt; 8</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>fTokens</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <name>INITIAL_TOKEN_COUNT</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fTokenCount</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// Current token position</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>int</name>
                            </type>
                            <name>fCurrentTokenIndex</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>SymbolTable</name>
                            </type>
                            <name>fSymbolTable</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>Hashtable</name>
                            </type>
                            <name>fTokenNames</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Hashtable</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Constructor
                        *
                        * @param symbolTable SymbolTable
                        */
                    </comment>
                    <constructor>
                        <specifier>private</specifier>
                        <name>Tokens</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fSymbolTable</name>
                                    =
                                    <name>symbolTable</name>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XPTRTOKEN_OPEN_PAREN</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"XPTRTOKEN_OPEN_PAREN"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XPTRTOKEN_CLOSE_PAREN</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"XPTRTOKEN_CLOSE_PAREN"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XPTRTOKEN_SHORTHAND</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"XPTRTOKEN_SHORTHAND"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XPTRTOKEN_SCHEMENAME</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"XPTRTOKEN_SCHEMENAME"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>XPTRTOKEN_SCHEMEDATA</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>"XPTRTOKEN_SCHEMEDATA"</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Returns the token String
                        * @param token The index of the token
                        * @return String The token string
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>String</name>
                        </type>
                        <name>getTokenString</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <return>return
                                <expr>(<name>String</name>)
                                    <call>
                                        <name><name>fTokenNames</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>Integer</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>token</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Add the specified string as a token
                        *
                        * @param token The token string
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>tokenStr</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Integer</name>
                                    </type>
                                    <name>tokenInt</name> =
                                    <init>
                                        <expr>(<name>Integer</name>)
                                            <call>
                                                <name><name>fTokenNames</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>tokenStr</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>tokenInt</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>tokenInt</name>
                                                = new
                                                <call>
                                                    <name>Integer</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>fTokenNames</name>.
                                                                        <name>size</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>fTokenNames</name>.
                                                        <name>put</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>tokenInt</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>tokenStr</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>addToken</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>tokenInt</name>.
                                                            <name>intValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Add the specified int token
                        *
                        * @param token The int specifying the token
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <try>try
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fTokens</name>
                                                <index>[
                                                    <expr>
                                                        <name>fTokenCount</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            =
                                            <name>token</name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>ArrayIndexOutOfBoundsException</name>
                                            </type>
                                            <name>ex</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>int</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>oldList</name> =
                                                <init>
                                                    <expr>
                                                        <name>fTokens</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fTokens</name>
                                                = new
                                                <name>
                                                    <name>int</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fTokenCount</name>
                                                            &lt;&lt; 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>oldList</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fTokens</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>fTokenCount</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>fTokens</name>
                                                    <index>[
                                                        <expr>
                                                            <name>fTokenCount</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name>token</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </catch>
                            </try>
                            <expr_stmt>
                                <expr><name>fTokenCount</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Resets the current position to the head of the token list.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>rewind</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>fCurrentTokenIndex</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns true if the {@link #getNextToken()} method
                        * returns a valid token.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>boolean</name>
                        </type>
                        <name>hasMore</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name>fCurrentTokenIndex</name>
                                    &lt;
                                    <name>fTokenCount</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Obtains the token at the current position, then advance
                        * the current position by one.
                        *
                        * throws If there's no such next token, this method throws
                        * &lt;tt&gt;new XNIException("XPointerProcessingError");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>nextToken</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XNIException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fCurrentTokenIndex</name>
                                        ==
                                        <name>fTokenCount</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"XPointerProcessingError"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>
                                        <name>fTokens</name>
                                        <index>[
                                            <expr><name>fCurrentTokenIndex</name>++
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Obtains the token at the current position, without advancing
                        * the current position.
                        *
                        * If there's no such next token, this method throws
                        * &lt;tt&gt;new XNIException("XPointerProcessingError");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>peekToken</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XNIException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>fCurrentTokenIndex</name>
                                        ==
                                        <name>fTokenCount</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"XPointerProcessingError"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>
                                        <name>fTokens</name>
                                        <index>[
                                            <expr>
                                                <name>fCurrentTokenIndex</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Obtains the token at the current position as a String.
                        *
                        * If there's no current token or if the current token
                        * is not a string token, this method throws
                        * If there's no such next token, this method throws
                        * &lt;tt&gt;new XNIException("XPointerProcessingError");&lt;/tt&gt;.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>String</name>
                        </type>
                        <name>nextTokenAsString</name>
                        <parameter_list>()</parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XNIException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>tokenStrint</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name>getTokenString</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>nextToken</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>tokenStrint</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"XPointerProcessingError"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <name>tokenStrint</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>
                    }
                </block>
            </class>

            <comment type="javadoc">/**
                *
                * The XPointer expression scanner. Scans the XPointer framework expression.
                *
                * @xerces.internal
                *
                */
            </comment>
            <class>
                <specifier>private</specifier>
                class <name>Scanner</name>
                <block>{

                    <comment type="javadoc">/**
                        * 7-bit ASCII subset
                        *
                        * 0 1 2 3 4 5 6 7 8 9 A B C D E F
                        * 0, 0, 0, 0, 0, 0, 0, 0, 0, HT, LF, 0, 0, CR, 0, 0, // 0
                        * 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 1
                        * SP, !, ", #, $, %, &amp;, ', (, ), *, +, ,, -, ., /, // 2
                        * 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, :, ;, &lt;, =, &gt;, ?, // 3
                        * @, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, // 4
                        * P, Q, R, S, T, U, V, W, X, Y, Z, [, \, ], ^, _, // 5
                        * `, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, // 6
                        * p, q, r, s, t, u, v, w, x, y, z, {, |, }, ~, DEL // 7
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>byte</name>
                            </type>
                            <name>CHARTYPE_INVALID</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                            ,
                            <comment type="line">// invalid XML character</comment>
                            <name>CHARTYPE_OTHER</name>
                            =
                            <init>
                                <expr>1</expr>
                            </init>
                            ,
                            <comment type="line">// not special - one of "#%&amp;;?\`{}~" or DEL</comment>
                            <name>CHARTYPE_WHITESPACE</name>
                            =
                            <init>
                                <expr>2</expr>
                            </init>
                            ,
                            <comment type="line">// one of "\t\n\r " (0x09, 0x0A, 0x0D, 0x20)</comment>
                            <name>CHARTYPE_CARRET</name>
                            =
                            <init>
                                <expr>3</expr>
                            </init>
                            ,
                            <comment type="line">// ^</comment>
                            <name>CHARTYPE_OPEN_PAREN</name>
                            =
                            <init>
                                <expr>4</expr>
                            </init>
                            ,
                            <comment type="line">// '(' (0x28)</comment>
                            <name>CHARTYPE_CLOSE_PAREN</name>
                            =
                            <init>
                                <expr>5</expr>
                            </init>
                            ,
                            <comment type="line">// ')' (0x29)</comment>
                            <name>CHARTYPE_MINUS</name>
                            =
                            <init>
                                <expr>6</expr>
                            </init>
                            ,
                            <comment type="line">// '-' (0x2D)</comment>
                            <name>CHARTYPE_PERIOD</name>
                            =
                            <init>
                                <expr>7</expr>
                            </init>
                            ,
                            <comment type="line">// '.' (0x2E)</comment>
                            <name>CHARTYPE_SLASH</name>
                            =
                            <init>
                                <expr>8</expr>
                            </init>
                            ,
                            <comment type="line">// '/' (0x2F)</comment>
                            <name>CHARTYPE_DIGIT</name>
                            =
                            <init>
                                <expr>9</expr>
                            </init>
                            ,
                            <comment type="line">// '0'-'9' (0x30 to 0x39)</comment>
                            <name>CHARTYPE_COLON</name>
                            =
                            <init>
                                <expr>10</expr>
                            </init>
                            ,
                            <comment type="line">// ':' (0x3A)</comment>
                            <name>CHARTYPE_EQUAL</name>
                            =
                            <init>
                                <expr>11</expr>
                            </init>
                            ,
                            <comment type="line">// '=' (0x3D)</comment>
                            <name>CHARTYPE_LETTER</name>
                            =
                            <init>
                                <expr>12</expr>
                            </init>
                            ,
                            <comment type="line">// 'A'-'Z' or 'a'-'z' (0x41 to 0x5A and 0x61 to 0x7A)</comment>
                            <name>CHARTYPE_UNDERSCORE</name>
                            =
                            <init>
                                <expr>13</expr>
                            </init>
                            ,
                            <comment type="line">// '_' (0x5F)</comment>
                            <name>CHARTYPE_NONASCII</name>
                            =
                            <init>
                                <expr>14</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// Non-ASCII Unicode codepoint (&gt;= 0x80)</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <specifier>final</specifier>
                                <name>byte</name>
                                <index>[]</index>
                            </type>
                            <name>fASCIICharMap</name> =
                            <init>
                                <expr>
                                    <block>{ <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                        0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                        2</expr>, <expr>2</expr>,
                                        <expr>0</expr>, <expr>0</expr>, <expr>2</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                            0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                            0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                            0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>
                                            0</expr>, <expr>0</expr>, <expr>0</expr>, <expr>0</expr>,
                                        <expr>2</expr>, <expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>
                                            1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>4</expr>, <expr>
                                            5</expr>, <expr>1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>
                                            6</expr>, <expr>7</expr>, <expr>8</expr>, <expr>9</expr>, <expr>
                                            9</expr>, <expr>9</expr>, <expr>9</expr>, <expr>9</expr>,
                                        <expr>9</expr>, <expr>9</expr>, <expr>9</expr>, <expr>9</expr>, <expr>9</expr>, <expr>
                                            10</expr>, <expr>1</expr>, <expr>1</expr>, <expr>11</expr>, <expr>1</expr>, <expr>
                                            1</expr>, <expr>1</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>,
                                        <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>,
                                        <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>3</expr>, <expr>
                                            13</expr>, <expr>1</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>,
                                        <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>
                                            12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>12</expr>,
                                        <expr>12</expr>, <expr>12</expr>, <expr>12</expr>, <expr>1</expr>, <expr>
                                            1</expr>, <expr>1</expr>, <expr>1</expr>, <expr>1</expr> }
                                    </block>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Data</comment>
                    <comment type="line">//</comment>
                    <comment type="javadoc">/** Symbol table. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>SymbolTable</name>
                            </type>
                            <name>fSymbolTable</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Constructs an XPointer Framework expression scanner.
                        *
                        * @param symbolTable SymbolTable
                        */
                    </comment>
                    <constructor>
                        <specifier>private</specifier>
                        <name>Scanner</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <comment type="line">// save pool and tokens</comment>
                            <expr_stmt>
                                <expr>
                                    <name>fSymbolTable</name>
                                    =
                                    <name>symbolTable</name>
                                </expr>
                                ;
                            </expr_stmt>

                            }
                        </block>
                    </constructor>
                    <comment type="line">// &lt;init&gt;(SymbolTable)</comment>

                    <comment type="javadoc">/**
                        * Scans the XPointer Expression
                        *
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>boolean</name>
                        </type>
                        <name>scanExpr</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>SymbolTable</name>
                                    </type>
                                    <name>symbolTable</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Tokens</name>
                                    </type>
                                    <name>tokens</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XNIException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>openParen</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>closeParen</name> =
                                    <init>
                                        <expr>0</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>nameOffset</name>,
                                    <name>dataOffset</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>boolean</name>
                                    </type>
                                    <name>isQName</name> =
                                    <init>
                                        <expr>false</expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>name</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>prefix</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>schemeData</name> =
                                    <init>
                                        <expr>
                                            <name>null</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>schemeDataBuff</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>StringBuffer</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <while>while
                                <condition>(<expr>true</expr>)
                                </condition>
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>currentOffset</name>
                                                ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <expr_stmt>
                                        <expr>
                                            <name>ch</name>
                                            =
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    <comment type="line">//</comment>
                                    <while>while
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                == ' ' || <name>ch</name> == 0x0A || <name>ch</name> == 0x09 || <name>
                                                ch
                                            </name> == 0x0D
                                            </expr>
                                            )
                                        </condition>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>++<name>currentOffset</name> ==
                                                        <name>endOffset</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <break>break;</break>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name>ch</name>
                                                    =
                                                    <call>
                                                        <name><name>data</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </while>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>currentOffset</name>
                                                ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">//</comment>
                                    <comment type="line">// [1] Pointer ::= Shorthand | SchemeBased</comment>
                                    <comment type="line">// [2] Shorthand ::= NCName</comment>
                                    <comment type="line">// [3] SchemeBased ::= PointerPart (S? PointerPart)*</comment>
                                    <comment type="line">// [4] PointerPart ::= SchemeName '(' SchemeData ')'</comment>
                                    <comment type="line">// [5] SchemeName ::= QName</comment>
                                    <comment type="line">// [6] SchemeData ::= EscapedData*</comment>
                                    <comment type="line">// [7] EscapedData ::= NormalChar | '^(' | '^)' | '^^' | '('
                                        SchemeData ')'
                                    </comment>
                                    <comment type="line">// [8] NormalChar ::= UnicodeChar - [()^]</comment>
                                    <comment type="line">// [9] UnicodeChar ::= [#x0-#x10FFFF]</comment>
                                    <comment type="line">// [?] QName ::= (NCName ':')? NCName</comment>
                                    <comment type="line">// [?] NCName ::= (Letter | '_') (NCNameChar)*</comment>
                                    <comment type="line">// [?] NCNameChar ::= Letter | Digit | '.' | '-' | '_' (ascii
                                        subset of 'NCNameChar')
                                    </comment>
                                    <comment type="line">// [?] Letter ::= [A-Za-z] (ascii subset of 'Letter')</comment>
                                    <comment type="line">// [?] Digit ::= [0-9] (ascii subset of 'Digit')</comment>
                                    <comment type="line">//</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>byte</name>
                                            </type>
                                            <name>chartype</name> =
                                            <init>
                                                <expr>(<name>ch</name> &gt;= 0x80) ?
                                                    <name>CHARTYPE_NONASCII</name>
                                                    :
                                                    <name>
                                                        <name>fASCIICharMap</name>
                                                        <index>[
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>chartype</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_OPEN_PAREN</name>
                                                </expr>
                                                :
                                                <comment type="line">// '('</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Tokens</name>.
                                                                            <name>XPTRTOKEN_OPEN_PAREN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>openParen</name>++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>++
                                                        <name>currentOffset</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_CLOSE_PAREN</name>
                                                </expr>
                                                :
                                                <comment type="line">// ')'</comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>addToken</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tokens</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Tokens</name>.
                                                                            <name>XPTRTOKEN_CLOSE_PAREN</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>closeParen</name>++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>++
                                                        <name>currentOffset</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <break>break;</break>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_CARRET</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_COLON</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_DIGIT</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_EQUAL</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_LETTER</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_MINUS</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_NONASCII</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_OTHER</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_PERIOD</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_SLASH</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_UNDERSCORE</name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name>CHARTYPE_WHITESPACE</name>
                                                </expr>
                                                :
                                                <comment type="line">// Scanning SchemeName | Shorthand</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>openParen</name>
                                                            == 0
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>nameOffset</name>
                                                                    =
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                    =
                                                                    <call>
                                                                        <name>scanNCName</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>data</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        ==
                                                                        <name>nameOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>reportError</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                "InvalidShortHandPointer"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>Object</name>
                                                                                                    <index>[]</index>
                                                                                                </name>
                                                                                                <block>{
                                                                                                    <expr>
                                                                                                        <name>data
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    }
                                                                                                </block>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <return>return <expr>false</expr>;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>

                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        &lt;
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>data</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>currentOffset
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                = -1
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>

                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>name</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>symbolTable</name>.
                                                                            <name>addSymbol</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>data</name>.
                                                                                            <name>substring</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>nameOffset
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        currentOffset
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>prefix</name>
                                                                    =
                                                                    <name><name>XMLSymbols</name>.
                                                                        <name>EMPTY_STRING</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <comment type="line">// The name is a QName =&gt; a
                                                                SchemeName
                                                            </comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        == ':'
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>++<name>currentOffset</name> ==
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <return>return <expr>false</expr>;
                                                                                    </return>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>

                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>ch</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>data</name>.
                                                                                        <name>charAt</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>currentOffset
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>prefix</name>
                                                                                =
                                                                                <name>name</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>nameOffset</name>
                                                                                =
                                                                                <name>currentOffset</name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                                =
                                                                                <call>
                                                                                    <name>scanNCName</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>data</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>endOffset</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>currentOffset
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>

                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                    ==
                                                                                    <name>nameOffset</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <return>return <expr>false</expr>;
                                                                                    </return>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                        </if>

                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name>currentOffset</name>
                                                                                    &lt;
                                                                                    <name>endOffset</name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>ch</name>
                                                                                            =
                                                                                            <call>
                                                                                                <name><name>data</name>.
                                                                                                    <name>charAt</name>
                                                                                                </name>
                                                                                                <argument_list>(
                                                                                                    <argument>
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                currentOffset
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                    </argument>
                                                                                                    )
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </then>
                                                                            <else>else
                                                                                <block>{
                                                                                    <expr_stmt>
                                                                                        <expr>
                                                                                            <name>ch</name>
                                                                                            = -1
                                                                                        </expr>
                                                                                        ;
                                                                                    </expr_stmt>
                                                                                    }
                                                                                </block>
                                                                            </else>
                                                                        </if>

                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>isQName</name>
                                                                                = true
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>name</name>
                                                                                =
                                                                                <call>
                                                                                    <name><name>symbolTable</name>.
                                                                                        <name>addSymbol</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        data</name>.
                                                                                                        <name>
                                                                                                            substring
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    nameOffset
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    currentOffset
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>

                                                            <comment type="line">// REVISIT:</comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                        !=
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>addToken</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>tokens</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    Tokens</name>.
                                                                                                    <name>
                                                                                                        XPTRTOKEN_SCHEMENAME
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tokens</name>.
                                                                                        <name>addToken</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>prefix</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tokens</name>.
                                                                                        <name>addToken</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>name</name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>isQName</name>
                                                                                = false
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                                ==
                                                                                <name>endOffset</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <comment type="line">// NCName =&gt;
                                                                                    Shorthand
                                                                                </comment>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>addToken</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>tokens
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            Tokens</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                XPTRTOKEN_SHORTHAND
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>tokens</name>.
                                                                                                <name>addToken</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>name
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>isQName</name>
                                                                                        = false
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                </else>
                                                            </if>

                                                            <comment type="line">// reset open/close paren for the next
                                                                pointer part
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>closeParen</name>
                                                                    = 0
                                                                </expr>
                                                                ;
                                                            </expr_stmt>

                                                            <break>break;</break>

                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>openParen</name>
                                                                    &gt; 0 &amp;&amp; <name>closeParen</name> == 0 &amp;&amp; <name>
                                                                    name
                                                                </name> !=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <comment type="line">// Scanning SchemeData
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>dataOffset</name>
                                                                            =
                                                                            <name>currentOffset</name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>currentOffset</name>
                                                                            =
                                                                            <call>
                                                                                <name>scanData</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>data</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>schemeDataBuff</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>endOffset</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>currentOffset</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>

                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                                ==
                                                                                <name>dataOffset</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>reportError</name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "InvalidSchemeDataInXPointer"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    data
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <return>return <expr>false</expr>;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>

                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>currentOffset</name>
                                                                                &lt;
                                                                                <name>endOffset</name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        =
                                                                                        <call>
                                                                                            <name><name>data</name>.
                                                                                                <name>charAt</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            currentOffset
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>ch</name>
                                                                                        = -1
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>

                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>schemeData</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>symbolTable</name>.
                                                                                    <name>addSymbol</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>
                                                                                                    <name>
                                                                                                        schemeDataBuff
                                                                                                    </name>
                                                                                                    .
                                                                                                    <name>toString
                                                                                                    </name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>addToken</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>tokens</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>Tokens</name>.
                                                                                                <name>
                                                                                                    XPTRTOKEN_SCHEMEDATA
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>tokens</name>.
                                                                                    <name>addToken</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>schemeData</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>

                                                                    <comment type="line">// reset open/close paren for
                                                                        the next pointer part
                                                                    </comment>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>openParen</name>
                                                                            = 0
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>schemeDataBuff</name>.
                                                                                    <name>delete</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>0</expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name><name>
                                                                                                    schemeDataBuff</name>
                                                                                                    .
                                                                                                    <name>length</name>
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>

                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <comment type="line">// ex. schemeName()</comment>
                                                                    <comment type="line">// Should we throw an exception
                                                                        with a more suitable message instead??
                                                                    </comment>
                                                                    <return>return <expr>false</expr>;
                                                                    </return>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </case>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>
                            </while>
                            <comment type="line">// end while</comment>
                            <return>return <expr>true</expr>;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Scans a NCName.
                        * From Namespaces in XML
                        * [5] NCName ::= (Letter | '_') (NCNameChar)*
                        * [6] NCNameChar ::= Letter | Digit | '.' | '-' | '_' | CombiningChar | Extender
                        *
                        * @param data A String containing the XPointer expression
                        * @param endOffset The int XPointer expression length
                        * @param currentOffset An int representing the current position of the XPointer expression
                        pointer
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>scanNCName</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>ch</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>ch</name>
                                        &gt;= 0x80
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>!
                                                    <call>
                                                        <name><name>XMLChar</name>.
                                                            <name>isNameStart</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>byte</name>
                                                </type>
                                                <name>chartype</name> =
                                                <init>
                                                    <expr>
                                                        <name>
                                                            <name>fASCIICharMap</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>chartype</name>
                                                    !=
                                                    <name>CHARTYPE_LETTER</name>
                                                    &amp;&amp; <name>chartype</name> !=
                                                    <name>CHARTYPE_UNDERSCORE</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </else>
                            </if>

                            <comment type="line">//while (currentOffset++ &lt; endOffset) {</comment>
                            <while>while
                                <condition>(
                                    <expr>++<name>currentOffset</name> &lt;
                                        <name>endOffset</name>
                                    </expr>
                                    )
                                </condition>
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>ch</name>
                                            =
                                            <call>
                                                <name><name>data</name>.
                                                    <name>charAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>currentOffset</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>ch</name>
                                                &gt;= 0x80
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>XMLChar</name>.
                                                                    <name>isName</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>byte</name>
                                                        </type>
                                                        <name>chartype</name> =
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>fASCIICharMap</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>chartype</name>
                                                            !=
                                                            <name>CHARTYPE_LETTER</name>
                                                            &amp;&amp; <name>chartype</name> !=
                                                            <name>CHARTYPE_DIGIT</name>
                                                            &amp;&amp; <name>chartype</name> !=
                                                            <name>CHARTYPE_PERIOD</name>
                                                            &amp;&amp; <name>chartype</name> !=
                                                            <name>CHARTYPE_MINUS</name>
                                                            &amp;&amp; <name>chartype</name> !=
                                                            <name>CHARTYPE_UNDERSCORE</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <break>break;</break>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </while>
                            <return>return
                                <expr>
                                    <name>currentOffset</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Scans the SchemeData.
                        * [6] SchemeData ::= EscapedData*
                        * [7] EscapedData ::= NormalChar | '^(' | '^)' | '^^' | '(' SchemeData ')'
                        * [8] NormalChar ::= UnicodeChar - [()^]
                        * [9] UnicodeChar ::= [#x0-#x10FFFF]
                        *
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>int</name>
                        </type>
                        <name>scanData</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>data</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>StringBuffer</name>
                                    </type>
                                    <name>schemeData</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>endOffset</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>currentOffset</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <while>while
                                <condition>(<expr>true</expr>)
                                </condition>
                                <block>{

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>currentOffset</name>
                                                ==
                                                <name>endOffset</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <break>break;</break>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>ch</name> =
                                            <init>
                                                <expr>
                                                    <call>
                                                        <name><name>data</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>byte</name>
                                            </type>
                                            <name>chartype</name> =
                                            <init>
                                                <expr>(<name>ch</name> &gt;= 0x80) ?
                                                    <name>CHARTYPE_NONASCII</name>
                                                    :
                                                    <name>
                                                        <name>fASCIICharMap</name>
                                                        <index>[
                                                            <expr>
                                                                <name>ch</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>chartype</name>
                                                ==
                                                <name>CHARTYPE_OPEN_PAREN</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>schemeData</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">//schemeData.append(Tokens.XPTRTOKEN_OPEN_PAREN);
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>currentOffset</name>
                                                        =
                                                        <call>
                                                            <name>scanData</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>data</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>schemeData</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>endOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>++
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>currentOffset</name>
                                                            ==
                                                            <name>endOffset</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>currentOffset</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>

                                                <expr_stmt>
                                                    <expr>
                                                        <name>ch</name>
                                                        =
                                                        <call>
                                                            <name><name>data</name>.
                                                                <name>charAt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>chartype</name>
                                                        = (<name>ch</name> &gt;= 0x80) ?
                                                        <name>CHARTYPE_NONASCII</name>
                                                        :
                                                        <name>
                                                            <name>fASCIICharMap</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>ch</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>

                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>chartype</name>
                                                            !=
                                                            <name>CHARTYPE_CLOSE_PAREN</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <return>return
                                                                <expr>
                                                                    <name>endOffset</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>schemeData</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>char</name>)
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>++
                                                        <name>currentOffset</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <comment type="line">//</comment>

                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>chartype</name>
                                                        ==
                                                        <name>CHARTYPE_CLOSE_PAREN</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <name>currentOffset</name>
                                                            </expr>
                                                            ;
                                                        </return>

                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>chartype</name>
                                                                ==
                                                                <name>CHARTYPE_CARRET</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>data</name>.
                                                                                <name>charAt</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>++
                                                                                        <name>currentOffset</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>chartype</name>
                                                                        = (<name>ch</name> &gt;= 0x80) ?
                                                                        <name>CHARTYPE_NONASCII</name>
                                                                        :
                                                                        <name>
                                                                            <name>fASCIICharMap</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>ch</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>

                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>chartype</name>
                                                                            !=
                                                                            <name>CHARTYPE_CARRET</name>
                                                                            &amp;&amp; <name>chartype</name> !=
                                                                            <name>CHARTYPE_OPEN_PAREN</name>
                                                                            &amp;&amp; <name>chartype</name> !=
                                                                            <name>CHARTYPE_CLOSE_PAREN</name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <break>break;</break>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>schemeData</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>++
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>

                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>schemeData</name>.
                                                                                <name>append</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>(<name>char</name>)
                                                                                        <name>ch</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>++
                                                                        <name>currentOffset</name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <comment type="line">//</comment>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </while>

                            <return>return
                                <expr>
                                    <name>currentOffset</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="line">//</comment>
                    <comment type="line">// Protected methods</comment>
                    <comment type="line">//</comment>

                    <comment type="javadoc">/**
                        * This method adds the specified token to the token list. By
                        * default, this method allows all tokens. However, subclasses
                        * of the XPathExprScanner can override this method in order
                        * to disallow certain tokens from being used in the scanned
                        * XPath expression. This is a convenient way of allowing only
                        * a subset of XPath.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>protected</specifier>
                            <name>void</name>
                        </type>
                        <name>addToken</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Tokens</name>
                                    </type>
                                    <name>tokens</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>token</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>XNIException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>tokens</name>.
                                            <name>addToken</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>token</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>
                    <comment type="line">// addToken(int)</comment>

                    }
                </block>
            </class>
            <comment type="line">// class Scanner</comment>

            <comment type="line">// ************************************************************************</comment>
            <comment type="line">// Overridden XMLDocumentHandler methods</comment>
            <comment type="line">// ************************************************************************</comment>
            <comment type="javadoc">/**
                * If the comment is a child of a matched element, then pass else return.
                *
                * @param text The text in the comment.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by application to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>comment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>comment</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>text</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A processing instruction. Processing instructions consist of a
                * target name and, optionally, text data. The data is only meaningful
                * to the application.
                * &lt;p&gt;
                * Typically, a processing instruction's data will contain a series
                * of pseudo-attributes. These pseudo-attributes follow the form of
                * element attributes but are &lt;strong&gt;not&lt;/strong&gt; parsed or presented
                * to the application as anything other than text. The application is
                * responsible for parsing the data.
                *
                * @param target The target.
                * @param data The data or null if none specified.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>processingInstruction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>target</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>processingInstruction</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>target</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>data</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The start of an element.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>resolveXPointer</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>attributes</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>augs</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>XPointerPart</name>.
                                                    <name>EVENT_ELEMENT_START</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// xml:base and xml:lang processing</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupBase</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>processXMLBaseAttributes</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupLang</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>processXMLLangAttributes</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// set the context invalid if the element till an element from the
                                    result infoset is included
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fNamespaceContext</name>.
                                                <name>setContextInvalid</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>startElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * An empty element.
                *
                * @param element The name of the element.
                * @param attributes The element attributes.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>emptyElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>resolveXPointer</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>attributes</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>augs</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>XPointerPart</name>.
                                                    <name>EVENT_ELEMENT_EMPTY</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// xml:base and xml:lang processing</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupBase</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>processXMLBaseAttributes</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>fFixupLang</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>processXMLLangAttributes</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attributes</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <comment type="line">// no need to restore restoreBaseURI() for xml:base and xml:lang
                                    processing
                                </comment>

                                <comment type="line">// set the context invalid if the element till an element from the
                                    result infoset is included
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>fNamespaceContext</name>.
                                                <name>setContextInvalid</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>emptyElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attributes</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Character content.
                *
                * @param text The content.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>characters</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>text</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Ignorable whitespace. For this method to be called, the document
                * source must have some way of determining that the text containing
                * only whitespace characters should be considered ignorable. For
                * example, the validator can determine if a length of whitespace
                * characters in the document are ignorable based on the element
                * content model.
                *
                * @param text The ignorable whitespace.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>ignorableWhitespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLString</name>
                            </type>
                            <name>text</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>ignorableWhitespace</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>text</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The end of an element.
                *
                * @param element The name of the element.
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>resolveXPointer</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>element</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>augs</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>XPointerPart</name>.
                                                    <name>EVENT_ELEMENT_END</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <comment type="line">// no need to restore restoreBaseURI() for xml:base and xml:lang
                                    processing
                                </comment>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>endElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The start of a CDATA section.
                *
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>startCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>startCDATA</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * The end of a CDATA section.
                *
                * @param augs Additional information that may include infoset augmentations
                *
                * @exception XNIException
                * Thrown by handler to signal an error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>endCDATA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Augmentations</name>
                            </type>
                            <name>augs</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XNIException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isChildFragmentResolved</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>endCDATA</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>augs</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// ************************************************************************</comment>
            <comment type="line">// Overridden XMLComponent methods</comment>
            <comment type="line">// ************************************************************************</comment>
            <comment type="javadoc">/**
                * &lt;p&gt;
                * Sets the value of a property. This method is called by the component
                * manager any time after reset when a property changes value.
                * &lt;/p&gt;
                * &lt;strong&gt;Note:&lt;/strong&gt; Components should silently ignore properties
                * that do not affect the operation of the component.
                *
                * @param propertyId The property identifier.
                * @param value The value of the property.
                *
                * @throws XMLConfigurationException Thrown for configuration error.
                * In general, components should
                * only throw this exception if
                * it is &lt;strong&gt;really&lt;/strong&gt;
                * a critical error.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setProperty</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>propertyId</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLConfigurationException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// Error reporter</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>propertyId</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XERCES_PROPERTY_PREFIX</name>
                                </name>
                                +
                                <name><name>Constants</name>.
                                    <name>ERROR_REPORTER_PROPERTY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fXPointerErrorReporter</name>
                                                    = (<name>XMLErrorReporter</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fXPointerErrorReporter</name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Error handler</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>propertyId</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XERCES_PROPERTY_PREFIX</name>
                                </name>
                                +
                                <name><name>Constants</name>.
                                    <name>ERROR_HANDLER_PROPERTY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fErrorHandler</name>
                                                    = (<name>XMLErrorHandler</name>)
                                                    <name>value</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fErrorHandler</name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// xml:lang</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>propertyId</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XERCES_FEATURE_PREFIX</name>
                                </name>
                                +
                                <name><name>Constants</name>.
                                    <name>XINCLUDE_FIXUP_LANGUAGE_FEATURE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFixupLang</name>
                                                    = ((<name>Boolean</name>)<name>value</name>).
                                                    <call>
                                                        <name>booleanValue</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFixupLang</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// xml:base</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>propertyId</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XERCES_FEATURE_PREFIX</name>
                                </name>
                                +
                                <name><name>Constants</name>.
                                    <name>XINCLUDE_FIXUP_BASE_URIS_FEATURE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>value</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFixupBase</name>
                                                    = ((<name>Boolean</name>)<name>value</name>).
                                                    <call>
                                                        <name>booleanValue</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>fFixupBase</name>
                                                    = false
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>propertyId</name>
                                ==
                                <name><name>Constants</name>.
                                    <name>XERCES_PROPERTY_PREFIX</name>
                                </name>
                                +
                                <name><name>Constants</name>.
                                    <name>NAMESPACE_CONTEXT_PROPERTY</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNamespaceContext</name>
                                        = (<name>XIncludeNamespaceSupport</name>)
                                        <name>value</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>setProperty</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>propertyId</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
