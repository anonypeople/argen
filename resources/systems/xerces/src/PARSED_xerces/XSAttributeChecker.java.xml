<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\traversers\XSAttributeChecker.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>traversers</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Enumeration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Hashtable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>StringTokenizer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSSimpleType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaGrammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaNamespaceSupport</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSAttributeDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSGrammarBucket</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSWildcardDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XInt</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XIntPool</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>DOMUtil</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolTable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Attr</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Class &lt;code&gt;XSAttributeCheck&lt;/code&gt; is used to check the validity of attributes
        * appearing in the schema document. It
        * - reports an error for invalid element (invalid namespace, invalid name)
        * - reports an error for invalid attribute (invalid namespace, invalid name)
        * - reports an error for invalid attribute value
        * - return compiled values for attriute values
        * - provide default value for missing optional attributes
        * - provide default value for incorrect attribute values
        *
        * But it's the caller's responsibility to check whether a required attribute
        * is present.
        *
        * Things need revisiting:
        * - Whether to return non-schema attributes/values
        * - Do we need to update NamespaceScope and ErrorReporter when reset()?
        * - Should have the datatype validators return compiled value
        * - use symbol table instead of many hashtables
        *
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        * @version $Id: XSAttributeChecker.java,v 1.36 2004/10/29 05:05:13 mrglavas Exp $
        */
    </comment>

    <class>
        <specifier>public</specifier>
        class <name>XSAttributeChecker</name>
        <block>{

            <comment type="line">// REVISIT: only local element and attribute are different from others.</comment>
            <comment type="line">// it's possible to have either name or ref. all the others</comment>
            <comment type="line">// are only allowed to have one of name or ref, or neither of them.</comment>
            <comment type="line">// we'd better move such checking to the traverser.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ELEMENT_N</name> =
                    <init>
                        <expr>"element_n"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ELEMENT_R</name> =
                    <init>
                        <expr>"element_r"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ATTRIBUTE_N</name> =
                    <init>
                        <expr>"attribute_n"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>String</name>
                    </type>
                    <name>ATTRIBUTE_R</name> =
                    <init>
                        <expr>"attribute_r"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_COUNT</name>           =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_ABSTRACT</name>        =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_AFORMDEFAULT</name>    =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_BASE</name>            =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_BLOCK</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_BLOCKDEFAULT</name>    =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_DEFAULT</name>         =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_EFORMDEFAULT</name>    =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_FINAL</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_FINALDEFAULT</name>    =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_FIXED</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_FORM</name>            =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_ID</name>              =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_ITEMTYPE</name>        =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_MAXOCCURS</name>       =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_MEMBERTYPES</name>     =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_MINOCCURS</name>       =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_MIXED</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_NAME</name>            =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_NAMESPACE</name>       =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_NAMESPACE_LIST</name>  =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_NILLABLE</name>        =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_NONSCHEMA</name>       =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_PROCESSCONTENTS</name> =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_PUBLIC</name>          =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_REF</name>             =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_REFER</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_SCHEMALOCATION</name>  =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_SOURCE</name>          =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_SUBSGROUP</name>       =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_SYSTEM</name>          =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_TARGETNAMESPACE</name> =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_TYPE</name>            =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_USE</name>             =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_VALUE</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_ENUMNSDECLS</name>     =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_VERSION</name>         =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_XML_LANG</name>        =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_XPATH</name>           =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_FROMDEFAULT</name>     =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">//public static final int ATTIDX_OTHERVALUES = ATTIDX_COUNT++;</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>ATTIDX_ISRETURNED</name>      =
                    <init>
                        <expr><name>ATTIDX_COUNT</name>++
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XIntPool</name>
                    </type>
                    <name>fXIntPool</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>XIntPool</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// constants to return</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_QUALIFIED</name>      =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>FORM_QUALIFIED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_UNQUALIFIED</name>    =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>FORM_UNQUALIFIED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_EMPTY_SET</name>      =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSConstants</name>.
                                                <name>DERIVATION_NONE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_STRICT</name>     =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>PC_STRICT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_LAX</name>        =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>PC_LAX</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_SKIP</name>       =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>PC_SKIP</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_ANY</name>        =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>NSCONSTRAINT_ANY</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_LIST</name>       =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>NSCONSTRAINT_LIST</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_ANY_NOT</name>        =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSWildcardDecl</name>.
                                                <name>NSCONSTRAINT_NOT</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_USE_OPTIONAL</name>   =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>USE_OPTIONAL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_USE_REQUIRED</name>   =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>USE_REQUIRED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_USE_PROHIBITED</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>USE_PROHIBITED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_WS_PRESERVE</name>    =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSSimpleType</name>.
                                                <name>WS_PRESERVE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_WS_REPLACE</name>     =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSSimpleType</name>.
                                                <name>WS_REPLACE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_WS_COLLAPSE</name>    =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>XSSimpleType</name>.
                                                <name>WS_COLLAPSE</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XInt</name>
                    </type>
                    <name>INT_UNBOUNDED</name>      =
                    <init>
                        <expr>
                            <call>
                                <name><name>fXIntPool</name>.
                                    <name>getXInt</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>OCCURRENCE_UNBOUNDED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used to store the map from element name to attribute list</comment>
            <comment type="line">// for 14 global elements</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fEleAttrsMapG</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>(
                                    <argument>
                                        <expr>29</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// for 39 local elememnts</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fEleAttrsMapL</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>(
                                    <argument>
                                        <expr>79</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used to initialize fEleAttrsMap</comment>
            <comment type="line">// step 1: all possible data types</comment>
            <comment type="line">// DT_??? &gt;= 0 : validate using a validator, which is initialized staticly</comment>
            <comment type="line">// DT_??? &lt; 0 : validate directly, which is done in "validate()"</comment>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_ANYURI</name>           =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_ID</name>               =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_QNAME</name>            =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_STRING</name>           =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_TOKEN</name>            =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_NCNAME</name>           =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_XPATH</name>            =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_XPATH1</name>           =
                    <init>
                        <expr>7</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_LANGUAGE</name>         =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used to store extra datatype validators</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_COUNT</name>            =
                    <init>
                        <expr>
                            <name>DT_LANGUAGE</name>
                            + 1
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XSSimpleType</name>
                        <index>[]</index>
                    </type>
                    <name>fExtraDVs</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>XSSimpleType</name>
                                <index>[
                                    <expr>
                                        <name>DT_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            static
            <block>{
                <comment type="line">// step 5: register all datatype validators for new types</comment>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>SchemaGrammar</name>
                        </type>
                        <name>grammar</name> =
                        <init>
                            <expr>
                                <name><name>SchemaGrammar</name>.
                                    <name>SG_SchemaNS</name>
                                </name>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <comment type="line">// anyURI</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_ANYURI</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_ANYURI</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// ID</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_ID</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_ID</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// QName</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_QNAME</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_QNAME</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// string</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_STRING</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_STRING</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// token</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_TOKEN</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_TOKEN</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// NCName</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_NCNAME</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_NCNAME</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// xpath = a subset of XPath expression</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_XPATH</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_STRING</name>
                                </expr>
                                ]
                            </index>
                        </name>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// xpath = a subset of XPath expression</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_XPATH</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        =
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_STRING</name>
                                </expr>
                                ]
                            </index>
                        </name>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// language</comment>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>fExtraDVs</name>
                            <index>[
                                <expr>
                                    <name>DT_LANGUAGE</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = (<name>XSSimpleType</name>)
                        <call>
                            <name><name>grammar</name>.
                                <name>getGlobalTypeDecl</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATTVAL_LANGUAGE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                }
            </block>

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_BLOCK</name>            =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_BLOCK1</name>           =
                    <init>
                        <expr>-2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_FINAL</name>            =
                    <init>
                        <expr>-3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_FINAL1</name>           =
                    <init>
                        <expr>-4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_FINAL2</name>           =
                    <init>
                        <expr>-5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_FORM</name>             =
                    <init>
                        <expr>-6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_MAXOCCURS</name>        =
                    <init>
                        <expr>-7</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_MAXOCCURS1</name>       =
                    <init>
                        <expr>-8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_MEMBERTYPES</name>      =
                    <init>
                        <expr>-9</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_MINOCCURS1</name>       =
                    <init>
                        <expr>-10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_NAMESPACE</name>        =
                    <init>
                        <expr>-11</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_PROCESSCONTENTS</name>  =
                    <init>
                        <expr>-12</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_USE</name>              =
                    <init>
                        <expr>-13</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_WHITESPACE</name>       =
                    <init>
                        <expr>-14</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_BOOLEAN</name>          =
                    <init>
                        <expr>-15</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_NONNEGINT</name>        =
                    <init>
                        <expr>-16</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>DT_POSINT</name>           =
                    <init>
                        <expr>-17</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            static
            <block>{
                <comment type="line">// step 2: all possible attributes for all elements</comment>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>attCount</name> =
                        <init>
                            <expr>0</expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_ABSTRACT_D</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_ATTRIBUTE_FD_D</name>      =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_BASE_R</name>              =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_BASE_N</name>              =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_BLOCK_N</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_BLOCK1_N</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_BLOCK_D_D</name>           =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_DEFAULT_N</name>           =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_ELEMENT_FD_D</name>        =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FINAL_N</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FINAL1_N</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FINAL_D_D</name>           =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FIXED_N</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FIXED_D</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_FORM_N</name>              =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_ID_N</name>                =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_ITEMTYPE_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MAXOCCURS_D</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MAXOCCURS1_D</name>        =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MEMBER_T_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MINOCCURS_D</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MINOCCURS1_D</name>        =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MIXED_D</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_MIXED_N</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_NAME_R</name>              =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_NAMESPACE_D</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_NAMESPACE_N</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_NILLABLE_D</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_PROCESS_C_D</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_PUBLIC_R</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_REF_R</name>               =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_REFER_R</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_SCHEMA_L_R</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_SCHEMA_L_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_SOURCE_N</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_SUBSTITUTION_G_N</name>    =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_SYSTEM_N</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_TARGET_N_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_TYPE_N</name>              =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_USE_D</name>               =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_VALUE_NNI_N</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_VALUE_PI_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_VALUE_STR_N</name>         =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_VALUE_WS_N</name>          =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_VERSION_N</name>           =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_XML_LANG</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_XPATH_R</name>             =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>int</name>
                        </type>
                        <name>ATT_XPATH1_R</name>            =
                        <init>
                            <expr><name>attCount</name>++
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>

                <comment type="line">// step 3: store all these attributes in an array</comment>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>OneAttr</name>
                            <index>[]</index>
                        </type>
                        <name>allAttrs</name> =
                        <init>
                            <expr>new
                                <name>
                                    <name>OneAttr</name>
                                    <index>[
                                        <expr>
                                            <name>attCount</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                        </init>
                    </decl>
                    ;
                </decl_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_ABSTRACT_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_ABSTRACT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BOOLEAN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_ABSTRACT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>Boolean</name>.
                                            <name>FALSE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_ATTRIBUTE_FD_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_ATTRIBUTEFORMDEFAULT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FORM</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_AFORMDEFAULT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_UNQUALIFIED</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_BASE_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_BASE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_BASE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_BASE_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_BASE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_BASE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_BLOCK_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_BLOCK</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BLOCK</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_BLOCK</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_BLOCK1_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_BLOCK</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BLOCK1</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_BLOCK</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_BLOCK_D_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_BLOCKDEFAULT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BLOCK</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_BLOCKDEFAULT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_EMPTY_SET</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_DEFAULT_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_DEFAULT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_STRING</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_DEFAULT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_ELEMENT_FD_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_ELEMENTFORMDEFAULT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FORM</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_EFORMDEFAULT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_UNQUALIFIED</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FINAL_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FINAL</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FINAL</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FINAL</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FINAL1_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FINAL</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FINAL1</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FINAL</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FINAL_D_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FINALDEFAULT</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FINAL2</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FINALDEFAULT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_EMPTY_SET</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FIXED_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FIXED</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_STRING</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FIXED</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FIXED_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FIXED</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BOOLEAN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FIXED</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>Boolean</name>.
                                            <name>FALSE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_FORM_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_FORM</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_FORM</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_FORM</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_ID_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_ID</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ID</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_ID</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_ITEMTYPE_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_ITEMTYPE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_ITEMTYPE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MAXOCCURS_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MAXOCCURS</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_MAXOCCURS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MAXOCCURS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MAXOCCURS1_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MAXOCCURS</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_MAXOCCURS1</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MAXOCCURS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MEMBER_T_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MEMBERTYPES</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_MEMBERTYPES</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MEMBERTYPES</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MINOCCURS_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MINOCCURS</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_NONNEGINT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MINOCCURS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MINOCCURS1_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MINOCCURS</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_MINOCCURS1</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MINOCCURS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MIXED_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MIXED</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BOOLEAN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MIXED</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>Boolean</name>.
                                            <name>FALSE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_MIXED_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_MIXED</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BOOLEAN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_MIXED</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_NAME_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_NAME</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_NCNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_NAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_NAMESPACE_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_NAMESPACE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_NAMESPACE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_NAMESPACE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_ANY_ANY</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_NAMESPACE_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_NAMESPACE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_NAMESPACE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_NILLABLE_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_NILLABLE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_BOOLEAN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_NILLABLE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name><name>Boolean</name>.
                                            <name>FALSE</name>
                                        </name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_PROCESS_C_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_PROCESSCONTENTS</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_PROCESSCONTENTS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_PROCESSCONTENTS</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_ANY_STRICT</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_PUBLIC_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_PUBLIC</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_TOKEN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_PUBLIC</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_REF_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_REF</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_REF</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_REFER_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_REFER</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_REFER</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_SCHEMA_L_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_SCHEMALOCATION</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_SCHEMALOCATION</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_SCHEMA_L_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_SCHEMALOCATION</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_SCHEMALOCATION</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_SOURCE_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_SOURCE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_SOURCE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_SUBSTITUTION_G_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_SUBSTITUTIONGROUP</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_SUBSGROUP</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_SYSTEM_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_SYSTEM</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_SYSTEM</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_TARGET_N_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_TARGETNAMESPACE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_ANYURI</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_TARGETNAMESPACE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_TYPE_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_TYPE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_QNAME</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_TYPE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_USE_D</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_USE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_USE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_USE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>INT_USE_OPTIONAL</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_VALUE_NNI_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_VALUE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_NONNEGINT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_VALUE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_VALUE_PI_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_VALUE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_POSINT</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_VALUE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_VALUE_STR_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_VALUE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_STRING</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_VALUE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_VALUE_WS_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_VALUE</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_WHITESPACE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_VALUE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_VERSION_N</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_VERSION</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_TOKEN</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_VERSION</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_XML_LANG</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_XML_LANG</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_LANGUAGE</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_XML_LANG</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_XPATH_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_XPATH</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_XPATH</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_XPATH</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <expr_stmt>
                    <expr>
                        <name>
                            <name>allAttrs</name>
                            <index>[
                                <expr>
                                    <name>ATT_XPATH1_R</name>
                                </expr>
                                ]
                            </index>
                        </name>
                        = new
                        <call>
                            <name>OneAttr</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name><name>SchemaSymbols</name>.
                                            <name>ATT_XPATH</name>
                                        </name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>DT_XPATH1</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>ATTIDX_XPATH</name>
                                    </expr>
                                </argument>
                                ,
                                <argument>
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>

                <comment type="line">// step 4: for each element, make a list of possible attributes</comment>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>Container</name>
                        </type>
                        <name>attrList</name>
                    </decl>
                    ;
                </decl_stmt>
                <decl_stmt>
                    <decl>
                        <type>
                            <name>OneElement</name>
                        </type>
                        <name>oneEle</name>
                    </decl>
                    ;
                </decl_stmt>

                <comment type="line">// for element "attribute" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>5</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// default = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_DEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_DEFAULT_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// type = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_TYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_TYPE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ATTRIBUTE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "attribute" - local name</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>7</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// default = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_DEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_DEFAULT_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// form = (qualified | unqualified)</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FORM</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FORM_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// type = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_TYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_TYPE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// use = (optional | prohibited | required) : optional</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_USE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_USE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>ATTRIBUTE_N</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "attribute" - local ref</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>5</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// default = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_DEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_DEFAULT_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// ref = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_REF</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_REF_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// use = (optional | prohibited | required) : optional</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_USE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_USE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>ATTRIBUTE_R</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "element" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>10</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// abstract = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ABSTRACT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ABSTRACT_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// block = (#all | List of (substitution | extension | restriction | list |
                    union))
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BLOCK</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BLOCK_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// default = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_DEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_DEFAULT_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// final = (#all | List of (extension | restriction))</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FINAL</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FINAL_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// nillable = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NILLABLE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NILLABLE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// substitutionGroup = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SUBSTITUTIONGROUP</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SUBSTITUTION_G_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// type = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_TYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_TYPE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ELEMENT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "element" - local name</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>10</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// block = (#all | List of (substitution | extension | restriction | list |
                    union))
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BLOCK</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BLOCK_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// default = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_DEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_DEFAULT_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// form = (qualified | unqualified)</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FORM</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FORM_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = nonNegativeInteger : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// nillable = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NILLABLE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NILLABLE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// type = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_TYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_TYPE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>ELEMENT_N</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "element" - local ref</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>4</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = nonNegativeInteger : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// ref = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_REF</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_REF_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name>ELEMENT_R</name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "complexType" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>6</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// abstract = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ABSTRACT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ABSTRACT_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// block = (#all | List of (extension | restriction))</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BLOCK</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BLOCK1_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// final = (#all | List of (extension | restriction))</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FINAL</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FINAL_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// mixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_COMPLEXTYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "notation" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>4</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// public = A public identifier, per ISO 8879</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_PUBLIC</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_PUBLIC_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// system = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SYSTEM</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SYSTEM_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_NOTATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>


                <comment type="line">// for element "complexType" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// mixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_COMPLEXTYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "simpleContent" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>1</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SIMPLECONTENT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "restriction" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// base = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BASE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BASE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_RESTRICTION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "extension" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// base = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BASE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BASE_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_EXTENSION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "attributeGroup" - local ref</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// ref = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_REF</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_REF_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ATTRIBUTEGROUP</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "anyAttribute" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace |
                    ##local)) ) : ##any
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAMESPACE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAMESPACE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// processContents = (lax | skip | strict) : strict</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_PROCESSCONTENTS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_PROCESS_C_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ANYATTRIBUTE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "complexContent" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// mixed = boolean</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MIXED_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_COMPLEXCONTENT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "attributeGroup" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ATTRIBUTEGROUP</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "group" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_GROUP</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "group" - local ref</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>4</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = nonNegativeInteger : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// ref = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_REF</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_REF_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_GROUP</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "all" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = 1 : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS1_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = (0 | 1) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS1_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ALL</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "choice" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = nonNegativeInteger : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_CHOICE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "sequence" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SEQUENCE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "any" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>5</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded) : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MAXOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MAXOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// minOccurs = nonNegativeInteger : 1</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MINOCCURS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MINOCCURS_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace |
                    ##local)) ) : ##any
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAMESPACE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAMESPACE_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// processContents = (lax | skip | strict) : strict</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_PROCESSCONTENTS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_PROCESS_C_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ANY</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "unique" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_UNIQUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "key" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_KEY</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "keyref" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// refer = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_REFER</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_REFER_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_KEYREF</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "selector" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// xpath = a subset of XPath expression</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_XPATH</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_XPATH_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SELECTOR</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "field" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// xpath = a subset of XPath expression</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_XPATH</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_XPATH1_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_FIELD</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "annotation" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>1</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ANNOTATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "annotation" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ANNOTATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "appinfo" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>1</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// source = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SOURCE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SOURCE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_APPINFO</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_APPINFO</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "documentation" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// source = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SOURCE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SOURCE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// xml:lang = language</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_XML_LANG</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_XML_LANG</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_DOCUMENTATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_DOCUMENTATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "simpleType" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// final = (#all | List of (list | union | restriction))</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FINAL</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FINAL1_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// name = NCName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAME</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAME_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SIMPLETYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "simpleType" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// final = (#all | List of (list | union | restriction))</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FINAL</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FINAL1_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SIMPLETYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "restriction" - local</comment>
                <comment type="line">// already registered for complexType</comment>

                <comment type="line">// for element "list" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// itemType = QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ITEMTYPE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ITEMTYPE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_LIST</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "union" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// memberTypes = List of QName</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_MEMBERTYPES</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_MEMBER_T_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_UNION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "schema" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>8</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// attributeFormDefault = (qualified | unqualified) : unqualified</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ATTRIBUTEFORMDEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ATTRIBUTE_FD_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// blockDefault = (#all | List of (substitution | extension | restriction | list |
                    union)) : ''
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_BLOCKDEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_BLOCK_D_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// elementFormDefault = (qualified | unqualified) : unqualified</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ELEMENTFORMDEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ELEMENT_FD_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// finalDefault = (#all | List of (extension | restriction | list | union)) : ''
                </comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FINALDEFAULT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FINAL_D_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// targetNamespace = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_TARGETNAMESPACE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_TARGET_N_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// version = token</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VERSION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VERSION_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// xml:lang = language</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_XML_LANG</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_XML_LANG</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_SCHEMA</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "include" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// schemaLocation = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SCHEMALOCATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SCHEMA_L_R</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_INCLUDE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "redefine" - global</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_REDEFINE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "import" - global</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// namespace = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_NAMESPACE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_NAMESPACE_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// schemaLocation = anyURI</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_SCHEMALOCATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_SCHEMA_L_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapG</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_IMPORT</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "length" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = nonNegativeInteger</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_NNI_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_LENGTH</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "minLength" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MINLENGTH</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "maxLength" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MAXLENGTH</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "fractionDigits" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_FRACTIONDIGITS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "totalDigits" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = positiveInteger</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_PI_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_TOTALDIGITS</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "pattern" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = string</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_STR_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_PATTERN</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "enumeration" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>2</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = anySimpleType</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_STR_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_ENUMERATION</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "whiteSpace" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = preserve | replace | collapse</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_WS_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_WHITESPACE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>

                <comment type="line">// for element "maxInclusive" - local</comment>
                <expr_stmt>
                    <expr>
                        <name>attrList</name>
                        =
                        <call>
                            <name><name>Container</name>.
                                <name>getContainer</name>
                            </name>
                            <argument_list>(
                                <argument>
                                    <expr>3</expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <comment type="line">// id = ID</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_ID</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_ID_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// value = anySimpleType</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_VALUE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_VALUE_STR_N</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// fixed = boolean : false</comment>
                <constructor_decl>
                    <name><name>attrList</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ATT_FIXED</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>
                                        <name>allAttrs</name>
                                        <index>[
                                            <expr>
                                                <name>ATT_FIXED_D</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <expr_stmt>
                    <expr>
                        <name>oneEle</name>
                        = new
                        <call>
                            <name>OneElement</name>
                            <argument_list>(
                                <argument>
                                    <expr>
                                        <name>attrList</name>
                                    </expr>
                                </argument>
                                )
                            </argument_list>
                        </call>
                    </expr>
                    ;
                </expr_stmt>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MAXINCLUSIVE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "maxExclusive" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MAXEXCLUSIVE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "minInclusive" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MININCLUSIVE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                <comment type="line">// for element "minExclusive" - local</comment>
                <constructor_decl>
                    <name><name>fEleAttrsMapL</name>.
                        <name>put</name>
                    </name>
                    <parameter_list>(
                        <param>
                            <decl>
                                <type>
                                    <name><name>SchemaSymbols</name>.
                                        <name>ELT_MINEXCLUSIVE</name>
                                    </name>
                                </type>
                            </decl>
                        </param>
                        ,
                        <param>
                            <decl>
                                <type>
                                    <name>oneEle</name>
                                </type>
                            </decl>
                        </param>
                        )
                    </parameter_list>
                    ;
                </constructor_decl>
                }
            </block>

            <comment type="line">// used to resolver namespace prefixes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XSDHandler</name>
                    </type>
                    <name>fSchemaHandler</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used to store symbols.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>SymbolTable</name>
                    </type>
                    <name>fSymbolTable</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// used to store the mapping from processed element to attributes</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Hashtable</name>
                    </type>
                    <name>fNonSchemaAttrs</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// temprory vector, used to hold the namespace list</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Vector</name>
                    </type>
                    <name>fNamespaceList</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Vector</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// whether this attribute appeared in the current element</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>fSeen</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>fSeenTemp</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// constructor. Sets fErrorReproter and get datatype validators</comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSAttributeChecker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSDHandler</name>
                            </type>
                            <name>schemaHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSchemaHandler</name>
                            =
                            <name>schemaHandler</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>SymbolTable</name>
                            </type>
                            <name>symbolTable</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fSymbolTable</name>
                            =
                            <name>symbolTable</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fNonSchemaAttrs</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the specified element conforms to the attributes restriction
                * an array of attribute values is returned. the caller must call
                * &lt;code&gt;returnAttrArray&lt;/code&gt; to return that array.
                *
                * @param element which element to check
                * @param isGlobal whether a child of &amp;lt;schema&amp;gt; or &amp;lt;redefine&amp;gt;
                * @param schemaDoc the document where the element lives in
                * @return an array containing attribute values
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>checkAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isGlobal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>checkAttributes</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>isGlobal</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>schemaDoc</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Check whether the specified element conforms to the attributes restriction
                * an array of attribute values is returned. the caller must call
                * &lt;code&gt;returnAttrArray&lt;/code&gt; to return that array. This method also takes
                * an extra parameter: if the element is "enumeration", whether to make a
                * copy of the namespace context, so that the value can be resolved as a
                * QName later.
                *
                * @param element which element to check
                * @param isGlobal whether a child of &amp;lt;schema&amp;gt; or &amp;lt;redefine&amp;gt;
                * @param schemaDoc the document where the element lives in
                * @param enumAsQName whether to tread enumeration value as QName
                * @return an array containing attribute values
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>checkAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isGlobal</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>enumAsQName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>element</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// get all attributes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attr</name>
                                <index>[]</index>
                            </type>
                            <name>attrs</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMUtil</name>.
                                            <name>getAttrs</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// update NamespaceSupport</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>resolveNamespace</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>attrs</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>schemaDoc</name>.
                                                <name>fNamespaceSupport</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>uri</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMUtil</name>.
                                            <name>getNamespaceURI</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>elName</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMUtil</name>.
                                            <name>getLocalName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>SchemaSymbols</name>.<name>URI_SCHEMAFORSCHEMA</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>uri</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportSchemaError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"s4s-elt-schema-ns"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>elName</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Hashtable</name>
                            </type>
                            <name>eleAttrsMap</name> =
                            <init>
                                <expr>
                                    <name>fEleAttrsMapG</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>lookupName</name> =
                            <init>
                                <expr>
                                    <name>elName</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// REVISIT: only local element and attribute are different from others.
                    </comment>
                    <comment type="line">// it's possible to have either name or ref. all the others</comment>
                    <comment type="line">// are only allowed to have one of name or ref, or neither of them.</comment>
                    <comment type="line">// we'd better move such checking to the traverser.</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>isGlobal</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>eleAttrsMap</name>
                                        =
                                        <name>fEleAttrsMapL</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>elName</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ELT_ELEMENT</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>DOMUtil</name>.
                                                                <name>getAttr</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>element</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>SchemaSymbols</name>.
                                                                            <name>ATT_REF</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>lookupName</name>
                                                            =
                                                            <name>ELEMENT_R</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                                <else>else
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>lookupName</name>
                                                            =
                                                            <name>ELEMENT_N</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>elName</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ELT_ATTRIBUTE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>DOMUtil</name>.
                                                                        <name>getAttr</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>element</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATT_REF</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>lookupName</name>
                                                                    =
                                                                    <name>ATTRIBUTE_R</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                        <else>else
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>lookupName</name>
                                                                    =
                                                                    <name>ATTRIBUTE_N</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// get desired attribute list of this element</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>OneElement</name>
                            </type>
                            <name>oneEle</name> =
                            <init>
                                <expr>(<name>OneElement</name>)
                                    <call>
                                        <name><name>eleAttrsMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>lookupName</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>oneEle</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// should never gets here.</comment>
                                <comment type="line">// when this method is called, the call already knows that
                                </comment>
                                <comment type="line">// the element can appear.</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>reportSchemaError</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"s4s-elt-invalid"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name>elName</name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>element</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//Hashtable attrValues = new Hashtable();</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>attrValues</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getAvailableArray</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//Hashtable otherValues = new Hashtable();</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>fromDefault</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>attrList</name> =
                            <init>
                                <expr>
                                    <name><name>oneEle</name>.
                                        <name>attrList</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// clear the "seen" flag.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fSeenTemp</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fSeen</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ATTIDX_COUNT</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// traverse all attributes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>attrs</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>sattr</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>sattr</name>
                                    =
                                    <name>
                                        <name>attrs</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// get the attribute name/value</comment>
                            <comment type="line">//String attrName = DOMUtil.getLocalName(sattr);</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrName</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>sattr</name>.
                                                    <name>getName</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrURI</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>DOMUtil</name>.
                                                    <name>getNamespaceURI</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>sattr</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrVal</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>DOMUtil</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>sattr</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>attrName</name>.
                                                <name>startsWith</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"xml"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>attrPrefix</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>DOMUtil</name>.
                                                                <name>getPrefix</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>sattr</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <comment type="line">// we don't want to add namespace declarations to the
                                            non-schema attributes
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>"xmlns".
                                                    <call>
                                                        <name>equals</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attrPrefix</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    || "xmlns".
                                                    <call>
                                                        <name>equals</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>attrName</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <continue>continue;</continue>
                                                    }
                                                </block>
                                            </then>
                                            <comment type="line">// Both &lt;schema&gt; and &lt;documentation&gt; may
                                                have an xml:lang attribute.
                                            </comment>
                                            <comment type="line">// Set the URI for this attribute to null so that we
                                                process it
                                            </comment>
                                            <comment type="line">// like any other schema attribute.</comment>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>SchemaSymbols</name>.<name>
                                                                    ATT_XML_LANG</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attrName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            &amp;&amp;
                                                            (
                                                            <call>
                                                                <name><name>SchemaSymbols</name>.<name>ELT_SCHEMA</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            ||
                                                            <call>
                                                                <name><name>SchemaSymbols</name>.<name>
                                                                    ELT_DOCUMENTATION</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            )
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>attrURI</name>
                                                                    =
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// for attributes with namespace prefix</comment>
                            <comment type="line">//</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>attrURI</name>
                                        != <name>null</name> &amp;&amp;
                                        <call>
                                            <name><name>attrURI</name>.
                                                <name>length</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        != 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// attributes with schema namespace are not allowed
                                        </comment>
                                        <comment type="line">// and not allowed on "document" and "appInfo"</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>attrURI</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>URI_SCHEMAFORSCHEMA</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    !
                                                    <name><name>oneEle</name>.
                                                        <name>allowNonSchemaAttr</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>reportSchemaError</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"s4s-att-not-allowed"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>elName</name>
                                                                                </expr>
                                                                                ,
                                                                                <expr>
                                                                                    <name>attrName</name>
                                                                                </expr>
                                                                                }
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>element</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>
                                                                    <name>attrValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ATTIDX_NONSCHEMA</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                ==
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <comment type="line">// these are usually small
                                                                </comment>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>
                                                                            <name>attrValues</name>
                                                                            <index>[
                                                                                <expr>
                                                                                    <name>ATTIDX_NONSCHEMA</name>
                                                                                </expr>
                                                                                ]
                                                                            </index>
                                                                        </name>
                                                                        = new
                                                                        <call>
                                                                            <name>Vector</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>4</expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>2</expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>((<name>Vector</name>)
                                                            <name>
                                                                <name>attrValues</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>ATTIDX_NONSCHEMA</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            ).
                                                            <call>
                                                                <name>addElement</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attrName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>((<name>Vector</name>)
                                                            <name>
                                                                <name>attrValues</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>ATTIDX_NONSCHEMA</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            ).
                                                            <call>
                                                                <name>addElement</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attrVal</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <comment type="line">// for attributes from other namespace
                                                    </comment>
                                                    <comment type="line">// store them in a list, and TRY to validate
                                                        them after
                                                    </comment>
                                                    <comment type="line">// schema traversal (because it's "lax")
                                                    </comment>
                                                    <comment type="line">//otherValues.put(attrName, attrVal);</comment>
                                                    <comment type="line">// REVISIT: actually use this some day...
                                                    </comment>
                                                    <comment type="line">// String attrRName = attrURI + "," +
                                                        attrName;
                                                    </comment>
                                                    <comment type="line">// Vector values =
                                                        (Vector)fNonSchemaAttrs.get(attrRName);
                                                    </comment>
                                                    <comment type="line">// if (values == null) {</comment>
                                                    <comment type="line">// values = new Vector();</comment>
                                                    <comment type="line">// values.addElement(attrName);</comment>
                                                    <comment type="line">// values.addElement(elName);</comment>
                                                    <comment type="line">// values.addElement(attrVal);</comment>
                                                    <comment type="line">// fNonSchemaAttrs.put(attrRName, values);
                                                    </comment>
                                                    <comment type="line">// }</comment>
                                                    <comment type="line">// else {</comment>
                                                    <comment type="line">// values.addElement(elName);</comment>
                                                    <comment type="line">// values.addElement(attrVal);</comment>
                                                    <comment type="line">// }</comment>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// check whether this attribute is allowed</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>OneAttr</name>
                                    </type>
                                    <name>oneAttr</name> =
                                    <init>
                                        <expr>(<name>OneAttr</name>)
                                            <call>
                                                <name><name>attrList</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>attrName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>oneAttr</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportSchemaError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"s4s-att-not-allowed"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>elName</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <name>attrName</name>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>element</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <continue>continue;</continue>
                                        }
                                    </block>
                                </then>
                            </if>

                            <comment type="line">// we've seen this attribute</comment>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fSeen</name>
                                        <index>[
                                            <expr>
                                                <name><name>oneAttr</name>.
                                                    <name>valueIndex</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = true
                                </expr>
                                ;
                            </expr_stmt>

                            <comment type="line">// check the value against the datatype</comment>
                            <try>try
                                <block>{
                                    <comment type="line">// no checking on string needs to be done here.</comment>
                                    <comment type="line">// no checking on xpath needs to be done here.</comment>
                                    <comment type="line">// xpath values are validated in xpath parser</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name><name>oneAttr</name>.
                                                    <name>dvIndex</name>
                                                </name>
                                                &gt;= 0
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>oneAttr</name>.
                                                                <name>dvIndex</name>
                                                            </name>
                                                            != <name>DT_STRING</name> &amp;&amp;
                                                            <name><name>oneAttr</name>.
                                                                <name>dvIndex</name>
                                                            </name>
                                                            != <name>DT_XPATH</name> &amp;&amp;
                                                            <name><name>oneAttr</name>.
                                                                <name>dvIndex</name>
                                                            </name>
                                                            !=
                                                            <name>DT_XPATH1</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>XSSimpleType</name>
                                                                    </type>
                                                                    <name>dv</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <name>
                                                                                <name>fExtraDVs</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name><name>oneAttr</name>.
                                                                                            <name>dvIndex</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Object</name>
                                                                    </type>
                                                                    <name>avalue</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dv</name>.
                                                                                    <name>validate</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>attrVal</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name><name>schemaDoc</name>
                                                                                                .
                                                                                                <name>
                                                                                                    fValidationContext
                                                                                                </name>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>null</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <comment type="line">// kludge to handle chameleon
                                                                includes/redefines...
                                                            </comment>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name><name>oneAttr</name>.
                                                                            <name>dvIndex</name>
                                                                        </name>
                                                                        ==
                                                                        <name>DT_QNAME</name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <decl_stmt>
                                                                            <decl>
                                                                                <type>
                                                                                    <name>QName</name>
                                                                                </type>
                                                                                <name>qname</name> =
                                                                                <init>
                                                                                    <expr>(<name>QName</name>)
                                                                                        <name>avalue</name>
                                                                                    </expr>
                                                                                </init>
                                                                            </decl>
                                                                            ;
                                                                        </decl_stmt>
                                                                        <if>if
                                                                            <condition>(
                                                                                <expr>
                                                                                    <name><name>qname</name>.
                                                                                        <name>prefix</name>
                                                                                    </name>
                                                                                    ==
                                                                                    <name><name>XMLSymbols</name>.
                                                                                        <name>EMPTY_STRING</name>
                                                                                    </name>
                                                                                    &amp;&amp;
                                                                                    <name><name>qname</name>.
                                                                                        <name>uri</name>
                                                                                    </name>
                                                                                    == <name>null</name> &amp;&amp;
                                                                                    <name><name>schemaDoc</name>.
                                                                                        <name>fIsChameleonSchema</name>
                                                                                    </name>
                                                                                </expr>
                                                                                )
                                                                            </condition>
                                                                            <then>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name><name>qname</name>.
                                                                                            <name>uri</name>
                                                                                        </name>
                                                                                        =
                                                                                        <name><name>schemaDoc</name>.
                                                                                            <name>fTargetNamespace
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                            </then>
                                                                        </if>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>attrValues</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name><name>oneAttr</name>.
                                                                                    <name>valueIndex</name>
                                                                                </name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name>avalue</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>
                                                                        <name>attrValues</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name><name>oneAttr</name>.
                                                                                    <name>valueIndex</name>
                                                                                </name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                    =
                                                                    <name>attrVal</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>attrValues</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>oneAttr</name>.
                                                                        <name>valueIndex</name>
                                                                    </name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <call>
                                                            <name>validate</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>attrValues</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>attrName</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>attrVal</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>oneAttr</name>.
                                                                            <name>dvIndex</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>schemaDoc</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                                <catch>catch (
                                    <param>
                                        <decl>
                                            <type>
                                                <name>InvalidDatatypeValueException</name>
                                            </type>
                                            <name>ide</name>
                                        </decl>
                                    </param>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>reportSchemaError</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"s4s-att-invalid-value"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>elName</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <name>attrName</name>
                                                                    </expr>
                                                                    ,
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>ide</name>.
                                                                                <name>getMessage</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    }
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>element</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>oneAttr</name>.
                                                        <name>dfltValue</name>
                                                    </name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <comment type="line">//attrValues.put(attrName, oneAttr.dfltValue);
                                                </comment>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>attrValues</name>
                                                            <index>[
                                                                <expr>
                                                                    <name><name>oneAttr</name>.
                                                                        <name>valueIndex</name>
                                                                    </name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name><name>oneAttr</name>.
                                                            <name>dfltValue</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </catch>
                            </try>

                            <comment type="line">// For "enumeration", and type is possible to be a QName, we need
                            </comment>
                            <comment type="line">// to return namespace context for later QName resolution.</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>elName</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>SchemaSymbols</name>.
                                                            <name>ELT_ENUMERATION</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        &amp;&amp;
                                        <name>enumAsQName</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name>ATTIDX_ENUMNSDECLS</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name>SchemaNamespaceSupport</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>schemaDoc</name>.
                                                                    <name>fNamespaceSupport</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// apply default values</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>OneAttr</name>
                                <index>[]</index>
                            </type>
                            <name>reqAttrs</name> =
                            <init>
                                <expr>
                                    <name><name>oneEle</name>.<name>attrList</name>.
                                        <name>values</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>reqAttrs</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>OneAttr</name>
                                    </type>
                                    <name>oneAttr</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>reqAttrs</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <comment type="line">// if the attribute didn't apprear, and</comment>
                            <comment type="line">// if the attribute is optional with default value, apply it</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>oneAttr</name>.
                                            <name>dfltValue</name>
                                        </name>
                                        != <name>null</name> &amp;&amp; !
                                        <name>
                                            <name>fSeen</name>
                                            <index>[
                                                <expr>
                                                    <name><name>oneAttr</name>.
                                                        <name>valueIndex</name>
                                                    </name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">//attrValues.put(oneAttr.name, oneAttr.dfltValue);
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>oneAttr</name>.
                                                                <name>valueIndex</name>
                                                            </name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                =
                                                <name><name>oneAttr</name>.
                                                    <name>dfltValue</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>fromDefault</name>
                                                |= (1&lt;&lt;
                                                <name><name>oneAttr</name>.
                                                    <name>valueIndex</name>
                                                </name>
                                                )
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>attrValues</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_FROMDEFAULT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <call>
                                <name>Long</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fromDefault</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//attrValues[ATTIDX_OTHERVALUES] = otherValues;</comment>

                    <comment type="line">// Check that minOccurs isn't greater than maxOccurs.</comment>
                    <comment type="line">// p-props-correct 2.1</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>attrValues</name>
                                    <index>[
                                        <expr>
                                            <name>ATTIDX_MAXOCCURS</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>min</name> =
                                        <init>
                                            <expr>((<name>XInt</name>)
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name>ATTIDX_MINOCCURS</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>max</name> =
                                        <init>
                                            <expr>((<name>XInt</name>)
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name>ATTIDX_MAXOCCURS</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>max</name>
                                            !=
                                            <name><name>SchemaSymbols</name>.
                                                <name>OCCURRENCE_UNBOUNDED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>min</name>
                                                        &gt;
                                                        <name>max</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>reportSchemaError</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"p-props-correct.2.1"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>elName</name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>attrValues</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        ATTIDX_MINOCCURS
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ,
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>attrValues</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        ATTIDX_MAXOCCURS
                                                                                                    </name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                    }
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>element</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>attrValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ATTIDX_MINOCCURS</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <name>
                                                                    <name>attrValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>ATTIDX_MAXOCCURS</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>attrValues</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>Object</name>
                </type>
                <name>validate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>attrValues</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>attr</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>ivalue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dvIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>InvalidDatatypeValueException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>ivalue</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// To validate these types, we don't actually need to normalize the</comment>
                    <comment type="line">// strings. We only need to remove the whitespace from both ends.</comment>
                    <comment type="line">// In some special cases (list types), StringTokenizer can correctly</comment>
                    <comment type="line">// process the un-normalized whitespace.</comment>
                    <comment type="javadoc">/**
                        * REVISIT: Trim removes all leading and trailing characters less
                        * than or equal to U+0020. This is okay for XML 1.0 since all
                        * of the valid characters in that range are white space but
                        * in XML 1.1 control chars are allowed. We shouldn't be trimming
                        * those. -- mrglavas
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ivalue</name>.
                                            <name>trim</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>retValue</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>memberType</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>choice</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dvIndex</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name>DT_BOOLEAN</name>
                                </expr>
                                :
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_FALSE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ||
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_FALSE_0</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>retValue</name>
                                                    =
                                                    <name><name>Boolean</name>.
                                                        <name>FALSE</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_TRUE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    ||
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_TRUE_1</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>retValue</name>
                                                            =
                                                            <name><name>Boolean</name>.
                                                                <name>TRUE</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>InvalidDatatypeValueException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                                , <expr>"boolean"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_NONNEGINT</name>
                                </expr>
                                :
                                <try>try
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 0 &amp;&amp;
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == '+'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>value</name>
                                                        =
                                                        <call>
                                                            <name><name>value</name>.
                                                                <name>substring</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <call>
                                                    <name><name>fXIntPool</name>.
                                                        <name>getXInt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>parseInt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>NumberFormatException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                        , <expr>"nonNegativeInteger"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <if>if
                                    <condition>(
                                        <expr>((<name>XInt</name>)<name>retValue</name>).
                                            <call>
                                                <name>intValue</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &lt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InvalidDatatypeValueException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                    , <expr>"nonNegativeInteger"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_POSINT</name>
                                </expr>
                                :
                                <try>try
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt; 0 &amp;&amp;
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>charAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>0</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    == '+'
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>value</name>
                                                        =
                                                        <call>
                                                            <name><name>value</name>.
                                                                <name>substring</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <call>
                                                    <name><name>fXIntPool</name>.
                                                        <name>getXInt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>parseInt</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>NumberFormatException</name>
                                                </type>
                                                <name>e</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                        , <expr>"positiveInteger"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <if>if
                                    <condition>(
                                        <expr>((<name>XInt</name>)<name>retValue</name>).
                                            <call>
                                                <name>intValue</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &lt;= 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InvalidDatatypeValueException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cvc-datatype-valid.1.2.1"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                    , <expr>"positiveInteger"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </then>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_BLOCK</name>
                                </expr>
                                :
                                <comment type="line">// block = (#all | List of (substitution | extension | restriction
                                    | list | union))
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name>choice</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_POUNDALL</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>choice</name>
                                                    =
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_SUBSTITUTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_EXTENSION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_LIST</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_UNION</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// use the default \t\r\n\f delimiters</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>StringTokenizer</name>
                                                    </type>
                                                    <name>t</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>StringTokenizer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>t</name>.
                                                                <name>hasMoreTokens</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>token</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t</name>.
                                                                            <name>nextToken</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>token</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATTVAL_SUBSTITUTION</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>choice</name>
                                                                        |=
                                                                        <name><name>XSConstants</name>.
                                                                            <name>DERIVATION_SUBSTITUTION</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>token</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>SchemaSymbols</name>
                                                                                            .
                                                                                            <name>ATTVAL_EXTENSION
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>choice</name>
                                                                                |=
                                                                                <name><name>XSConstants</name>.
                                                                                    <name>DERIVATION_EXTENSION</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>token</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    SchemaSymbols</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        ATTVAL_RESTRICTION
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>choice</name>
                                                                                        |=
                                                                                        <name><name>XSConstants</name>.
                                                                                            <name>
                                                                                                DERIVATION_RESTRICTION
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>token</name>.
                                                                                                <name>equals</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            SchemaSymbols</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                ATTVAL_LIST
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>choice</name>
                                                                                                |=
                                                                                                <name><name>
                                                                                                    XSConstants</name>.
                                                                                                    <name>
                                                                                                        DERIVATION_LIST
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        token</name>.
                                                                                                        <name>equals
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        SchemaSymbols</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        ATTVAL_UNION
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>choice
                                                                                                        </name>
                                                                                                        |=
                                                                                                        <name><name>
                                                                                                            XSConstants</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                DERIVATION_RESTRICTION
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <block>{
                                                                                                <throw>throw
                                                                                                    <expr>new
                                                                                                        <call>
                                                                                                            <name>
                                                                                                                InvalidDatatypeValueException
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        "cvc-datatype-valid.1.2.3"
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        new
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                Object
                                                                                                                            </name>
                                                                                                                            <index>
                                                                                                                                []
                                                                                                                            </index>
                                                                                                                        </name>
                                                                                                                        <block>
                                                                                                                            {
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    value
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            , <expr>
                                                                                                                            "(#all
                                                                                                                            |
                                                                                                                            List
                                                                                                                            of
                                                                                                                            (substitution
                                                                                                                            |
                                                                                                                            extension
                                                                                                                            |
                                                                                                                            restriction
                                                                                                                            |
                                                                                                                            list
                                                                                                                            |
                                                                                                                            union))"</expr>}
                                                                                                                        </block>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </throw>
                                                                                                }
                                                                                            </block>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </while>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>retValue</name>
                                        =
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>choice</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_BLOCK1</name>
                                </expr>
                                :
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_FINAL</name>
                                </expr>
                                :
                                <comment type="line">// block = (#all | List of (extension | restriction))</comment>
                                <comment type="line">// final = (#all | List of (extension | restriction))</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>choice</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_POUNDALL</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//choice =
                                                SchemaSymbols.EXTENSION|SchemaSymbols.RESTRICTION;
                                            </comment>
                                            <comment type="line">// REVISIT: if #all, then make the result the
                                                combination of
                                            </comment>
                                            <comment type="line">// everything:
                                                substitution/externsion/restriction/list/union.
                                            </comment>
                                            <comment type="line">// would this be a problem?</comment>
                                            <comment type="line">// the reason doing so is that when final/blockFinal on
                                                &lt;schema&gt;</comment>
                                            <comment type="line">// is #all, it's not always the same as the conbination
                                                of those
                                            </comment>
                                            <comment type="line">// values allowed by final/blockFinal.</comment>
                                            <comment type="line">// for example, finalDefault="#all" is not always the
                                                same as
                                            </comment>
                                            <comment type="line">// finalDefault="extension restriction".</comment>
                                            <comment type="line">// if finalDefault="#all", final on any simple type
                                                would be
                                            </comment>
                                            <comment type="line">// "extension restriction list union".</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>choice</name>
                                                    =
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_SUBSTITUTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_EXTENSION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_LIST</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_UNION</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// use the default \t\r\n\f delimiters</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>StringTokenizer</name>
                                                    </type>
                                                    <name>t</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>StringTokenizer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>t</name>.
                                                                <name>hasMoreTokens</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>token</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t</name>.
                                                                            <name>nextToken</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>token</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATTVAL_EXTENSION</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>choice</name>
                                                                        |=
                                                                        <name><name>XSConstants</name>.
                                                                            <name>DERIVATION_EXTENSION</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>token</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>SchemaSymbols</name>
                                                                                            .
                                                                                            <name>ATTVAL_RESTRICTION
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>choice</name>
                                                                                |=
                                                                                <name><name>XSConstants</name>.
                                                                                    <name>DERIVATION_RESTRICTION</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <block>{
                                                                        <throw>throw
                                                                            <expr>new
                                                                                <call>
                                                                                    <name>
                                                                                        InvalidDatatypeValueException
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                "cvc-datatype-valid.1.2.3"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>Object</name>
                                                                                                    <index>[]</index>
                                                                                                </name>
                                                                                                <block>{
                                                                                                    <expr>
                                                                                                        <name>value
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    , <expr>"(#all |
                                                                                                        List of
                                                                                                        (extension |
                                                                                                        restriction))"</expr>}
                                                                                                </block>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </throw>
                                                                        }
                                                                    </block>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </while>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>retValue</name>
                                        =
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>choice</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_FINAL1</name>
                                </expr>
                                :
                                <comment type="line">// final = (#all | List of (list | union | restriction))</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>choice</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_POUNDALL</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//choice =
                                                SchemaSymbols.RESTRICTION|SchemaSymbols.LIST|
                                            </comment>
                                            <comment type="line">// SchemaSymbols.UNION;</comment>
                                            <comment type="line">// REVISIT: if #all, then make the result the
                                                combination of
                                            </comment>
                                            <comment type="line">// everything:
                                                substitution/externsion/restriction/list/union.
                                            </comment>
                                            <comment type="line">// would this be a problem?</comment>
                                            <comment type="line">// same reason as above DT_BLOCK1/DT_FINAL</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>choice</name>
                                                    =
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_SUBSTITUTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_EXTENSION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_LIST</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_UNION</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// use the default \t\r\n\f delimiters</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>StringTokenizer</name>
                                                    </type>
                                                    <name>t</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>StringTokenizer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>t</name>.
                                                                <name>hasMoreTokens</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>token</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t</name>.
                                                                            <name>nextToken</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>token</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATTVAL_LIST</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>choice</name>
                                                                        |=
                                                                        <name><name>XSConstants</name>.
                                                                            <name>DERIVATION_LIST</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>token</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>SchemaSymbols</name>
                                                                                            .
                                                                                            <name>ATTVAL_UNION</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>choice</name>
                                                                                |=
                                                                                <name><name>XSConstants</name>.
                                                                                    <name>DERIVATION_UNION</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>token</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    SchemaSymbols</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        ATTVAL_RESTRICTION
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>choice</name>
                                                                                        |=
                                                                                        <name><name>XSConstants</name>.
                                                                                            <name>
                                                                                                DERIVATION_RESTRICTION
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <throw>throw
                                                                                    <expr>new
                                                                                        <call>
                                                                                            <name>
                                                                                                InvalidDatatypeValueException
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "cvc-datatype-valid.1.2.3"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    value
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            , <expr>
                                                                                                                "(#all |
                                                                                                                List of
                                                                                                                (list |
                                                                                                                union |
                                                                                                                restriction))"</expr>}
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </throw>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </while>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>retValue</name>
                                        =
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>choice</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_FINAL2</name>
                                </expr>
                                :
                                <comment type="line">// finalDefault = (#all | List of (extension | restriction | list |
                                    union))
                                </comment>
                                <expr_stmt>
                                    <expr>
                                        <name>choice</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_POUNDALL</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">//choice =
                                                SchemaSymbols.RESTRICTION|SchemaSymbols.LIST|
                                            </comment>
                                            <comment type="line">// SchemaSymbols.UNION;</comment>
                                            <comment type="line">// REVISIT: if #all, then make the result the
                                                combination of
                                            </comment>
                                            <comment type="line">// everything:
                                                substitution/externsion/restriction/list/union.
                                            </comment>
                                            <comment type="line">// would this be a problem?</comment>
                                            <comment type="line">// same reason as above DT_BLOCK1/DT_FINAL</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>choice</name>
                                                    =
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_SUBSTITUTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_EXTENSION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_RESTRICTION</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_LIST</name>
                                                    </name>
                                                    |
                                                    <name><name>XSConstants</name>.
                                                        <name>DERIVATION_UNION</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <comment type="line">// use the default \t\r\n\f delimiters</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>StringTokenizer</name>
                                                    </type>
                                                    <name>t</name> =
                                                    <init>
                                                        <expr>new
                                                            <call>
                                                                <name>StringTokenizer</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <while>while
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>t</name>.
                                                                <name>hasMoreTokens</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>token</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>t</name>.
                                                                            <name>nextToken</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>

                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>token</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>SchemaSymbols</name>.
                                                                                    <name>ATTVAL_EXTENSION</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>choice</name>
                                                                        |=
                                                                        <name><name>XSConstants</name>.
                                                                            <name>DERIVATION_EXTENSION</name>
                                                                        </name>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>token</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>SchemaSymbols</name>
                                                                                            .
                                                                                            <name>ATTVAL_RESTRICTION
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>choice</name>
                                                                                |=
                                                                                <name><name>XSConstants</name>.
                                                                                    <name>DERIVATION_RESTRICTION</name>
                                                                                </name>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>token</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    SchemaSymbols</name>
                                                                                                    .
                                                                                                    <name>ATTVAL_LIST
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>choice</name>
                                                                                        |=
                                                                                        <name><name>XSConstants</name>.
                                                                                            <name>DERIVATION_LIST</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>token</name>.
                                                                                                <name>equals</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            SchemaSymbols</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                ATTVAL_UNION
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>choice</name>
                                                                                                |=
                                                                                                <name><name>
                                                                                                    XSConstants</name>.
                                                                                                    <name>
                                                                                                        DERIVATION_UNION
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <block>{
                                                                                        <throw>throw
                                                                                            <expr>new
                                                                                                <call>
                                                                                                    <name>
                                                                                                        InvalidDatatypeValueException
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                "cvc-datatype-valid.1.2.3"
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>new
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        Object
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        []
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                <block>{
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            value
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    , <expr>
                                                                                                                        "(#all
                                                                                                                        |
                                                                                                                        List
                                                                                                                        of
                                                                                                                        (extension
                                                                                                                        |
                                                                                                                        restriction
                                                                                                                        |
                                                                                                                        list
                                                                                                                        |
                                                                                                                        union))"</expr>}
                                                                                                                </block>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </throw>
                                                                                        }
                                                                                    </block>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </while>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name>retValue</name>
                                        =
                                        <call>
                                            <name><name>fXIntPool</name>.
                                                <name>getXInt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>choice</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_FORM</name>
                                </expr>
                                :
                                <comment type="line">// form = (qualified | unqualified)</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_QUALIFIED</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <name>INT_QUALIFIED</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_UNQUALIFIED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>retValue</name>
                                                        =
                                                        <name>INT_UNQUALIFIED</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>InvalidDatatypeValueException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"cvc-enumeration-valid"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                            , <expr>"(qualified | unqualified)"</expr>}
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_MAXOCCURS</name>
                                </expr>
                                :
                                <comment type="line">// maxOccurs = (nonNegativeInteger | unbounded)</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_UNBOUNDED</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>retValue</name>
                                                    =
                                                    <name>INT_UNBOUNDED</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <try>try
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>retValue</name>
                                                            =
                                                            <call>
                                                                <name>validate</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attrValues</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>attr</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>DT_NONNEGINT</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>schemaDoc</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                                <catch>catch (
                                                    <param>
                                                        <decl>
                                                            <type>
                                                                <name>NumberFormatException</name>
                                                            </type>
                                                            <name>e</name>
                                                        </decl>
                                                    </param>
                                                    )
                                                    <block>{
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-datatype-valid.1.2.3"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    , <expr>"(nonNegativeInteger |
                                                                                        unbounded)"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                        }
                                                    </block>
                                                </catch>
                                            </try>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_MAXOCCURS1</name>
                                </expr>
                                :
                                <comment type="line">// maxOccurs = 1</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"1"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <call>
                                                    <name><name>fXIntPool</name>.
                                                        <name>getXInt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>1</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>InvalidDatatypeValueException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cvc-enumeration-valid"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <name>
                                                                    <name>Object</name>
                                                                    <index>[]</index>
                                                                </name>
                                                                <block>{
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                    , <expr>"(1)"</expr>}
                                                                </block>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_MEMBERTYPES</name>
                                </expr>
                                :
                                <comment type="line">// memberTypes = List of QName</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>memberType</name>
                                        = new
                                        <call>
                                            <name>Vector</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <try>try
                                    <block>{
                                        <comment type="line">// use the default \t\r\n\f delimiters</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>StringTokenizer</name>
                                                </type>
                                                <name>t</name> =
                                                <init>
                                                    <expr>new
                                                        <call>
                                                            <name>StringTokenizer</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>value</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <while>while
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>t</name>.
                                                            <name>hasMoreTokens</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>String</name>
                                                        </type>
                                                        <name>token</name> =
                                                        <init>
                                                            <expr>
                                                                <call>
                                                                    <name><name>t</name>.
                                                                        <name>nextToken</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>QName</name>
                                                        </type>
                                                        <name>qname</name> =
                                                        <init>
                                                            <expr>(<name>QName</name>)
                                                                <name>
                                                                    <name>fExtraDVs</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>DT_QNAME</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>validate</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>token</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>schemaDoc</name>.
                                                                                    <name>fValidationContext</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <comment type="line">// kludge to handle chameleon
                                                    includes/redefines...
                                                </comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name><name>qname</name>.
                                                                <name>prefix</name>
                                                            </name>
                                                            ==
                                                            <name><name>XMLSymbols</name>.
                                                                <name>EMPTY_STRING</name>
                                                            </name>
                                                            &amp;&amp;
                                                            <name><name>qname</name>.
                                                                <name>uri</name>
                                                            </name>
                                                            == <name>null</name> &amp;&amp;
                                                            <name><name>schemaDoc</name>.
                                                                <name>fIsChameleonSchema</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name><name>qname</name>.
                                                                    <name>uri</name>
                                                                </name>
                                                                =
                                                                <name><name>schemaDoc</name>.
                                                                    <name>fTargetNamespace</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>memberType</name>.
                                                                <name>addElement</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>qname</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </while>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <name>memberType</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                    <catch>catch (
                                        <param>
                                            <decl>
                                                <type>
                                                    <name>InvalidDatatypeValueException</name>
                                                </type>
                                                <name>ide</name>
                                            </decl>
                                        </param>
                                        )
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>InvalidDatatypeValueException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cvc-datatype-valid.1.2.2"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                        , <expr>"(List of QName)"</expr>}
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </catch>
                                </try>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_MINOCCURS1</name>
                                </expr>
                                :
                                <comment type="line">// minOccurs = (0 | 1)</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>"0"</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <call>
                                                    <name><name>fXIntPool</name>.
                                                        <name>getXInt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"1"</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>retValue</name>
                                                        =
                                                        <call>
                                                            <name><name>fXIntPool</name>.
                                                                <name>getXInt</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>1</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <throw>throw
                                                    <expr>new
                                                        <call>
                                                            <name>InvalidDatatypeValueException</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"cvc-enumeration-valid"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>value</name>
                                                                            </expr>
                                                                            , <expr>"(0 | 1)"</expr>}
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </throw>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_NAMESPACE</name>
                                </expr>
                                :
                                <comment type="line">// namespace = ((##any | ##other) | List of (anyURI |
                                    (##targetNamespace | ##local)) )
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_TWOPOUNDANY</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// ##any</comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>retValue</name>
                                                    =
                                                    <name>INT_ANY_ANY</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_TWOPOUNDOTHER</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// ##other</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>retValue</name>
                                                            =
                                                            <name>INT_ANY_NOT</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>list</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>String</name>
                                                                        <index>[<expr>2</expr>]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>list</name>
                                                                <index>[<expr>0</expr>]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name><name>schemaDoc</name>.
                                                                <name>fTargetNamespace</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>list</name>
                                                                <index>[<expr>1</expr>]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>attrValues</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>ATTIDX_NAMESPACE_LIST</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>list</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// list</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>retValue</name>
                                                            =
                                                            <name>INT_ANY_LIST</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fNamespaceList</name>.
                                                                    <name>removeAllElements</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <comment type="line">// tokenize</comment>
                                                    <comment type="line">// use the default \t\r\n\f delimiters
                                                    </comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>StringTokenizer</name>
                                                            </type>
                                                            <name>tokens</name> =
                                                            <init>
                                                                <expr>new
                                                                    <call>
                                                                        <name>StringTokenizer</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>value</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>token</name>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>tempNamespace</name>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <try>try
                                                        <block>{
                                                            <while>while
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tokens</name>.
                                                                                <name>hasMoreTokens</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>token</name>
                                                                            =
                                                                            <call>
                                                                                <name><name>tokens</name>.
                                                                                    <name>nextToken</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>token</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    SchemaSymbols</name>
                                                                                                    .
                                                                                                    <name>
                                                                                                        ATTVAL_TWOPOUNDLOCAL
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>tempNamespace</name>
                                                                                        =
                                                                                        <name>null</name>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>token</name>.
                                                                                                <name>equals</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name><name>
                                                                                                            SchemaSymbols</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                ATTVAL_TWOPOUNDTARGETNS
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>tempNamespace
                                                                                                </name>
                                                                                                =
                                                                                                <name><name>
                                                                                                    schemaDoc</name>.
                                                                                                    <name>
                                                                                                        fTargetNamespace
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <block>{
                                                                                        <comment type="line">// we have
                                                                                            found namespace URI here
                                                                                        </comment>
                                                                                        <comment type="line">// need to
                                                                                            add it to the symbol table
                                                                                        </comment>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>fExtraDVs
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>
                                                                                                                DT_ANYURI
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                                .
                                                                                                <call>
                                                                                                    <name>validate
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    token
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        schemaDoc</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        fValidationContext
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    null
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>tempNamespace
                                                                                                </name>
                                                                                                =
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        fSymbolTable</name>
                                                                                                        .
                                                                                                        <name>
                                                                                                            addSymbol
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    token
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>

                                                                    <comment type="line">//check for duplicate
                                                                        namespaces in the list
                                                                    </comment>
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>!
                                                                                <call>
                                                                                    <name><name>fNamespaceList</name>.
                                                                                        <name>contains</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>tempNamespace
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>
                                                                                                fNamespaceList</name>.
                                                                                                <name>addElement</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            tempNamespace
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                    </if>
                                                                    }
                                                                </block>
                                                            </while>
                                                            }
                                                        </block>
                                                        <catch>catch (
                                                            <param>
                                                                <decl>
                                                                    <type>
                                                                        <name>InvalidDatatypeValueException</name>
                                                                    </type>
                                                                    <name>ide</name>
                                                                </decl>
                                                            </param>
                                                            )
                                                            <block>{
                                                                <throw>throw
                                                                    <expr>new
                                                                        <call>
                                                                            <name>InvalidDatatypeValueException</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>"cvc-datatype-valid.1.2.3"
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>new
                                                                                        <name>
                                                                                            <name>Object</name>
                                                                                            <index>[]</index>
                                                                                        </name>
                                                                                        <block>{
                                                                                            <expr>
                                                                                                <name>value</name>
                                                                                            </expr>
                                                                                            , <expr>"((##any | ##other)
                                                                                                | List of (anyURI |
                                                                                                (##targetNamespace |
                                                                                                ##local)) )"</expr>}
                                                                                        </block>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </throw>
                                                                }
                                                            </block>
                                                        </catch>
                                                    </try>

                                                    <comment type="line">// convert the vector to an array</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>num</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>fNamespaceList</name>.
                                                                            <name>size</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                                <index>[]</index>
                                                            </type>
                                                            <name>list</name> =
                                                            <init>
                                                                <expr>new
                                                                    <name>
                                                                        <name>String</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>num</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>fNamespaceList</name>.
                                                                    <name>copyInto</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>list</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>attrValues</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>ATTIDX_NAMESPACE_LIST</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>list</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_PROCESSCONTENTS</name>
                                </expr>
                                :
                                <comment type="line">// processContents = (lax | skip | strict)</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_STRICT</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <name>INT_ANY_STRICT</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_LAX</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>retValue</name>
                                                        =
                                                        <name>INT_ANY_LAX</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>value</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>SchemaSymbols</name>.
                                                                                <name>ATTVAL_SKIP</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>retValue</name>
                                                                =
                                                                <name>INT_ANY_SKIP</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-enumeration-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    , <expr>"(lax | skip |
                                                                                        strict)"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_USE</name>
                                </expr>
                                :
                                <comment type="line">// use = (optional | prohibited | required)</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_OPTIONAL</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <name>INT_USE_OPTIONAL</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_REQUIRED</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>retValue</name>
                                                        =
                                                        <name>INT_USE_REQUIRED</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>value</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>SchemaSymbols</name>.
                                                                                <name>ATTVAL_PROHIBITED</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>retValue</name>
                                                                =
                                                                <name>INT_USE_PROHIBITED</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-enumeration-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    , <expr>"(optional | prohibited |
                                                                                        required)"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            <case>case
                                <expr>
                                    <name>DT_WHITESPACE</name>
                                </expr>
                                :
                                <comment type="line">// value = preserve | replace | collapse</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>value</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ATTVAL_PRESERVE</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>retValue</name>
                                                =
                                                <name>INT_WS_PRESERVE</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>value</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>ATTVAL_REPLACE</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>retValue</name>
                                                        =
                                                        <name>INT_WS_REPLACE</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>value</name>.
                                                                    <name>equals</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>SchemaSymbols</name>.
                                                                                <name>ATTVAL_COLLAPSE</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>retValue</name>
                                                                =
                                                                <name>INT_WS_COLLAPSE</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                    </then>
                                                    <else>else
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>InvalidDatatypeValueException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"cvc-enumeration-valid"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>new
                                                                                <name>
                                                                                    <name>Object</name>
                                                                                    <index>[]</index>
                                                                                </name>
                                                                                <block>{
                                                                                    <expr>
                                                                                        <name>value</name>
                                                                                    </expr>
                                                                                    , <expr>"(preserve | replace |
                                                                                        collapse)"</expr>}
                                                                                </block>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                <break>break;</break>
                            </case>
                            }
                        </block>
                    </switch>

                    <return>return
                        <expr>
                            <name>retValue</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <name>void</name>
                </type>
                <name>reportSchemaError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>ele</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fSchemaHandler</name>.
                                    <name>reportSchemaError</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>args</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>ele</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// validate attriubtes from non-schema namespaces</comment>
            <comment type="line">// REVISIT: why we store the attributes in this way? why not just a list</comment>
            <comment type="line">// of structure {element node, attr name/qname, attr value)?</comment>
            <comment type="line">// REVISIT: pass the proper element node to reportSchemaError</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>checkNonSchemaAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSGrammarBucket</name>
                            </type>
                            <name>grammarBucket</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// for all attributes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Enumeration</name>
                            </type>
                            <name>keys</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fNonSchemaAttrs</name>.
                                            <name>keys</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAttributeDecl</name>
                            </type>
                            <name>attrDecl</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>keys</name>.
                                        <name>hasMoreElements</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <comment type="line">// get name, uri, localpart</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrRName</name> =
                                    <init>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>keys</name>.
                                                    <name>nextElement</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrURI</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>attrRName</name>.
                                                    <name>substring</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>attrRName</name>.
                                                                    <name>indexOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>','</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrLocal</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>attrRName</name>.
                                                    <name>substring</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>attrRName</name>.
                                                                    <name>indexOf</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>','</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                            +1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// find associated grammar</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SchemaGrammar</name>
                                    </type>
                                    <name>sGrammar</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>grammarBucket</name>.
                                                    <name>getGrammar</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>attrURI</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>sGrammar</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <continue>continue;</continue>
                                </then>
                            </if>
                            <comment type="line">// and get the datatype validator, if there is one</comment>
                            <expr_stmt>
                                <expr>
                                    <name>attrDecl</name>
                                    =
                                    <call>
                                        <name><name>sGrammar</name>.
                                            <name>getGlobalAttributeDecl</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>attrLocal</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>attrDecl</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <continue>continue;</continue>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSSimpleType</name>
                                    </type>
                                    <name>dv</name> =
                                    <init>
                                        <expr>(<name>XSSimpleType</name>)
                                            <call>
                                                <name><name>attrDecl</name>.
                                                    <name>getTypeDefinition</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>dv</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <continue>continue;</continue>
                                </then>
                            </if>

                            <comment type="line">// get all values appeared with this attribute name</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Vector</name>
                                    </type>
                                    <name>values</name> =
                                    <init>
                                        <expr>(<name>Vector</name>)
                                            <call>
                                                <name><name>fNonSchemaAttrs</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>attrRName</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>elName</name>,
                                    <name>attrVal</name>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>attrName</name> =
                                    <init>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>values</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <comment type="line">// for each of the values</comment>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>count</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>values</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>1</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>count</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr>
                                        <name>i</name>
                                        += 2
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>elName</name>
                                            = (<name>String</name>)
                                            <call>
                                                <name><name>values</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <try>try
                                        <block>{
                                            <comment type="line">// and validate it using the XSSimpleType</comment>
                                            <comment type="line">// REVISIT: what would be the proper validation
                                                context?
                                            </comment>
                                            <comment type="line">// guess we need to save that in the vectors too.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>dv</name>.
                                                            <name>validate</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>String</name>)
                                                                    <call>
                                                                        <name><name>values</name>.
                                                                            <name>elementAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr><name>i</name>+1
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                        <catch>catch(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>InvalidDatatypeValueException</name>
                                                    </type>
                                                    <name>ide</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name>reportSchemaError</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>"s4s-att-invalid-value"</expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>new
                                                                        <name>
                                                                            <name>Object</name>
                                                                            <index>[]</index>
                                                                        </name>
                                                                        <block>{
                                                                            <expr>
                                                                                <name>elName</name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <name>attrName</name>
                                                                            </expr>
                                                                            ,
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>ide</name>.
                                                                                        <name>getMessage</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            }
                                                                        </block>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>null</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <comment type="line">// normalize the string according to the whiteSpace facet</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>String</name>
                </type>
                <name>normalize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>content</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>ws</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <name>content</name>
                                    == <name>null</name> ? 0 :
                                    <call>
                                        <name><name>content</name>.
                                            <name>length</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>len</name>
                                == 0 || <name>ws</name> ==
                                <name><name>XSSimpleType</name>.
                                    <name>WS_PRESERVE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>content</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StringBuffer</name>
                            </type>
                            <name>sb</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>StringBuffer</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>ws</name>
                                ==
                                <name><name>XSSimpleType</name>.
                                    <name>WS_REPLACE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's replace, just replace #x9, #xa, #xd by #x20</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>ch</name> !=
                                                    0xd
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>ch</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </then>
                                            <else>else
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>sb</name>.
                                                                <name>append</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>char</name>)0x20
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>char</name>
                                        </type>
                                        <name>ch</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isLeading</name> =
                                        <init>
                                            <expr>true</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// when it's collapse</comment>
                                <for>for (
                                    <init>
                                        <expr>
                                            <name>i</name>
                                            = 0
                                        </expr>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>len</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>ch</name>
                                                =
                                                <call>
                                                    <name><name>content</name>.
                                                        <name>charAt</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// append real characters, so we passed leading ws
                                        </comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>ch</name>
                                                    != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>ch</name> !=
                                                    0xd &amp;&amp; <name>ch</name> != 0x20
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>sb</name>.
                                                                    <name>append</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ch</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>isLeading</name>
                                                            = false
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// for whitespaces, we skip all following ws
                                                    </comment>
                                                    <for>for (<init>;</init>
                                                        <condition>
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name>-1
                                                            </expr>
                                                            ;
                                                        </condition>
                                                        <incr>
                                                            <expr><name>i</name>++
                                                            </expr>
                                                        </incr>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>ch</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>content</name>.
                                                                            <name>charAt</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr><name>i</name>+1
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>ch</name>
                                                                        != 0x9 &amp;&amp; <name>ch</name> != 0xa &amp;&amp; <name>
                                                                        ch
                                                                    </name> != 0xd &amp;&amp; <name>ch</name> != 0x20
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <break>break;</break>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </for>
                                                    <comment type="line">// if it's not a leading or tailing ws, then
                                                        append a space
                                                    </comment>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>i</name>
                                                                &lt; <name>len</name> - 1 &amp;&amp; !
                                                                <name>isLeading</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>sb</name>.
                                                                            <name>append</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>(<name>char</name>)0x20
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>sb</name>.
                                    <name>toString</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// the following part implements an attribute-value-array pool.</comment>
            <comment type="line">// when checkAttribute is called, it calls getAvailableArray to get</comment>
            <comment type="line">// an array from the pool; when the caller is done with the array,</comment>
            <comment type="line">// it calls returnAttrArray to return that array to the pool.</comment>

            <comment type="line">// initial size of the array pool. 10 is big enough</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INIT_POOL_SIZE</name> =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the incremental size of the array pool</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INC_POOL_SIZE</name>  =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the array pool</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>Object</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fArrayPool</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>INIT_POOL_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// used to clear the returned array</comment>
            <comment type="line">// I think System.arrayCopy is more efficient than setting 35 fields to null</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <name>Object</name>
                        <index>[]</index>
                    </type>
                    <name>fTempArray</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>Object</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// current position of the array pool (# of arrays not returned)</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>fPoolPos</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// get the next available array</comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>getAvailableArray</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// if no array left in the pool, increase the pool size</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>fArrayPool</name>.
                                    <name>length</name>
                                </name>
                                ==
                                <name>fPoolPos</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// increase size</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>fArrayPool</name>
                                        = new
                                        <name>
                                            <name>Object</name>
                                            <index>[
                                                <expr><name>fPoolPos</name>+
                                                    <name>INC_POOL_SIZE</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[]</index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <comment type="line">// initialize each *new* array</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>
                                                    <name>fPoolPos</name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name><name>fArrayPool</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>fArrayPool</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = new
                                            <name>
                                                <name>Object</name>
                                                <index>[
                                                    <expr>
                                                        <name>ATTIDX_COUNT</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// get the next available one</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>retArray</name> =
                            <init>
                                <expr>
                                    <name>
                                        <name>fArrayPool</name>
                                        <index>[
                                            <expr>
                                                <name>fPoolPos</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// clear it from the pool. this is for GC: if a caller forget to</comment>
                    <comment type="line">// return the array, we want that array to be GCed.</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fArrayPool</name>
                                <index>[
                                    <expr><name>fPoolPos</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// to make sure that one array is not returned twice, we use</comment>
                    <comment type="line">// the last entry to indicate whether an array is already returned</comment>
                    <comment type="line">// now set it to false.</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fTempArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>retArray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr><name>ATTIDX_COUNT</name>-1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>retArray</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_ISRETURNED</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>Boolean</name>.
                                <name>FALSE</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>retArray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// return an array back to the pool</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>returnAttrArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>attrArray</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// pop the namespace context</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>schemaDoc</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>schemaDoc</name>.<name>fNamespaceSupport</name>.
                                            <name>popContext</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <comment type="line">// if 1. the pool is full; 2. the array is null;</comment>
                    <comment type="line">// 3. the array is of wrong size; 4. the array is already returned</comment>
                    <comment type="line">// then we can't accept this array to be returned</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fPoolPos</name>
                                == 0 ||
                                <name>attrArray</name>
                                == <name>null</name> ||
                                <name><name>attrArray</name>.
                                    <name>length</name>
                                </name>
                                != <name>ATTIDX_COUNT</name> ||
                                ((<name>Boolean</name>)
                                <name>
                                    <name>attrArray</name>
                                    <index>[
                                        <expr>
                                            <name>ATTIDX_ISRETURNED</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ).
                                <call>
                                    <name>booleanValue</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// mark this array as returned</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>attrArray</name>
                                <index>[
                                    <expr>
                                        <name>ATTIDX_ISRETURNED</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name><name>Boolean</name>.
                                <name>TRUE</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// better clear nonschema vector</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>attrArray</name>
                                    <index>[
                                        <expr>
                                            <name>ATTIDX_NONSCHEMA</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>((<name>Vector</name>)
                                    <name>
                                        <name>attrArray</name>
                                        <index>[
                                            <expr>
                                                <name>ATTIDX_NONSCHEMA</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    ).
                                    <call>
                                        <name>clear</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <comment type="line">// and put it into the pool</comment>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fArrayPool</name>
                                <index>[
                                    <expr>--
                                        <name>fPoolPos</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>attrArray</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>resolveNamespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Attr</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>attrs</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SchemaNamespaceSupport</name>
                            </type>
                            <name>nsSupport</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// push the namespace context</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>nsSupport</name>.
                                    <name>pushContext</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// search for new namespace bindings</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>attrs</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Attr</name>
                            </type>
                            <name>sattr</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>rawname</name>, <name>prefix</name>,
                            <name>uri</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>length</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>sattr</name>
                                    =
                                    <name>
                                        <name>attrs</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>rawname</name>
                                    =
                                    <call>
                                        <name><name>DOMUtil</name>.
                                            <name>getName</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>sattr</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>prefix</name>
                                    =
                                    <name>null</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>rawname</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLSymbols</name>.
                                                            <name>PREFIX_XMLNS</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>prefix</name>
                                            =
                                            <name><name>XMLSymbols</name>.
                                                <name>EMPTY_STRING</name>
                                            </name>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>rawname</name>.
                                                        <name>startsWith</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"xmlns:"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <name>prefix</name>
                                                    =
                                                    <call>
                                                        <name><name>fSymbolTable</name>.
                                                            <name>addSymbol</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>DOMUtil</name>.
                                                                            <name>getLocalName</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>sattr</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>
                                </else>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>prefix</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>uri</name>
                                                =
                                                <call>
                                                    <name><name>fSymbolTable</name>.
                                                        <name>addSymbol</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>DOMUtil</name>.
                                                                        <name>getValue</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>sattr</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>nsSupport</name>.
                                                        <name>declarePrefix</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>prefix</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>uri</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                !=0 ? <name>uri</name> :
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>
            }
        </block>
    </class>

    <class>class <name>OneAttr</name>
        <block>{
            <comment type="line">// name of the attribute</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>String</name>
                    </type>
                    <name>name</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// index of the datatype validator</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>int</name>
                    </type>
                    <name>dvIndex</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// whether it's optional, and has default value</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>int</name>
                    </type>
                    <name>valueIndex</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// the default value of this attribute</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>Object</name>
                    </type>
                    <name>dfltValue</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>OneAttr</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dvIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>valueIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>dfltValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>name</name>
                            </name>
                            =
                            <name>name</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>dvIndex</name>
                            </name>
                            =
                            <name>dvIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>valueIndex</name>
                            </name>
                            =
                            <name>valueIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>dfltValue</name>
                            </name>
                            =
                            <name>dfltValue</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            }
        </block>
    </class>

    <class>class <name>OneElement</name>
        <block>{
            <comment type="line">// the list of attributes that can appear in one element</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>Container</name>
                    </type>
                    <name>attrList</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// does this element allow attributes from non-schema namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <name>boolean</name>
                    </type>
                    <name>allowNonSchemaAttr</name>
                </decl>
                ;
            </decl_stmt>

            <constructor>
                <specifier>public</specifier>
                <name>OneElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>attrList</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attrList</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <constructor>
                <specifier>public</specifier>
                <name>OneElement</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Container</name>
                            </type>
                            <name>attrList</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>allowNonSchemaAttr</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>attrList</name>
                            </name>
                            =
                            <name>attrList</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>allowNonSchemaAttr</name>
                            </name>
                            =
                            <name>allowNonSchemaAttr</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            }
        </block>
    </class>

    <class>
        <specifier>abstract</specifier>
        class <name>Container</name>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>THRESHOLD</name> =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <function>
                <type>
                    <specifier>static</specifier>
                    <name>Container</name>
                </type>
                <name>getContainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>size</name>
                                &gt;
                                <name>THRESHOLD</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>new
                                    <call>
                                        <name>LargeContainer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>size</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <return>return
                                <expr>new
                                    <call>
                                        <name>SmallContainer</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>size</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>
            <function_decl>
                <type>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>put</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OneAttr</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <function_decl>
                <type>
                    <specifier>abstract</specifier>
                    <name>OneAttr</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <decl_stmt>
                <decl>
                    <type>
                        <name>OneAttr</name>
                        <index>[]</index>
                    </type>
                    <name>values</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>pos</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            }
        </block>
    </class>

    <class>class <name>SmallContainer</name>
        <super>
            <extends>extends
                <name>Container</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>keys</name>
                </decl>
                ;
            </decl_stmt>
            <constructor>
                <name>SmallContainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>keys</name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>size</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>values</name>
                            = new
                            <name>
                                <name>OneAttr</name>
                                <index>[
                                    <expr>
                                        <name>size</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>put</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OneAttr</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>keys</name>
                                <index>[
                                    <expr>
                                        <name>pos</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>key</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>values</name>
                                <index>[
                                    <expr><name>pos</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <name>OneAttr</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>pos</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>keys</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name>
                                                    <name>values</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>

    <class>class <name>LargeContainer</name>
        <super>
            <extends>extends
                <name>Container</name>
            </extends>
        </super>
        <block>{
            <decl_stmt>
                <decl>
                    <type>
                        <name>Hashtable</name>
                    </type>
                    <name>items</name>
                </decl>
                ;
            </decl_stmt>
            <constructor>
                <name>LargeContainer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>items</name>
                            = new
                            <call>
                                <name>Hashtable</name>
                                <argument_list>(
                                    <argument>
                                        <expr><name>size</name>*2+1
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>values</name>
                            = new
                            <name>
                                <name>OneAttr</name>
                                <index>[
                                    <expr>
                                        <name>size</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>
            <function>
                <type>
                    <name>void</name>
                </type>
                <name>put</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>OneAttr</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>items</name>.
                                    <name>put</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>
                                <name>values</name>
                                <index>[
                                    <expr><name>pos</name>++
                                    </expr>
                                    ]
                                </index>
                            </name>
                            =
                            <name>value</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>
            <function>
                <type>
                    <name>OneAttr</name>
                </type>
                <name>get</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>OneAttr</name>
                            </type>
                            <name>ret</name> =
                            <init>
                                <expr>(<name>OneAttr</name>)
                                    <call>
                                        <name><name>items</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>key</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>ret</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>
