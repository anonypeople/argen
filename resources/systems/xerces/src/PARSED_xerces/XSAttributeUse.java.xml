<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xs\XSAttributeUse.java">
    <comment type="block">/*
        * Copyright 2003,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <comment type="javadoc">/**
        * This interface represents the Attribute Use schema component.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XSAttributeUse</name>
        <super>
            <extends>extends
                <name>XSObject</name>
            </extends>
        </super>
        <block>{
            <comment type="javadoc">/**
                * [required]: determines whether this use of an attribute declaration
                * requires an appropriate attribute information item to be present, or
                * merely allows it.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getRequired</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * [attribute declaration]: provides the attribute declaration itself,
                * which will in turn determine the simple type definition used.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XSAttributeDeclaration</name>
                </type>
                <name>getAttrDeclaration</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Value Constraint: one of default, fixed.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getConstraintType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Value Constraint: The constraint value, otherwise &lt;code&gt;null&lt;/code&gt;.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getConstraintValue</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Value Constraint: Binding specific actual constraint value or
                * &lt;code&gt;null&lt;/code&gt; if the value is in error or there is no value
                * constraint.
                * @exception XSException
                * NOT_SUPPORTED_ERR: Raised if the implementation does not support this
                * method.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>getActualVC</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XSException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * The actual constraint value built-in datatype, e.g.
                * &lt;code&gt;STRING_DT, SHORT_DT&lt;/code&gt;. If the type definition of this
                * value is a list type definition, this method returns
                * &lt;code&gt;LIST_DT&lt;/code&gt;. If the type definition of this value is a list
                * type definition whose item type is a union type definition, this
                * method returns &lt;code&gt;LISTOFUNION_DT&lt;/code&gt;. To query the actual
                * constraint value of the list or list of union type definitions use
                * &lt;code&gt;itemValueTypes&lt;/code&gt;. If the &lt;code&gt;actualNormalizedValue&lt;/code&gt;
                * is &lt;code&gt;null&lt;/code&gt;, this method returns &lt;code&gt;UNAVAILABLE_DT&lt;/code&gt;
                * .
                * @exception XSException
                * NOT_SUPPORTED_ERR: Raised if the implementation does not support this
                * method.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getActualVCType</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XSException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * In the case the actual constraint value represents a list, i.e. the
                * &lt;code&gt;actualValueType&lt;/code&gt; is &lt;code&gt;LIST_DT&lt;/code&gt;, the returned
                * array consists of one type kind which represents the itemType. If the
                * actual constraint value represents a list type definition whose item
                * type is a union type definition, i.e. &lt;code&gt;LISTOFUNION_DT&lt;/code&gt;,
                * for each actual constraint value in the list the array contains the
                * corresponding memberType kind. For examples, see
                * &lt;code&gt;ItemPSVI.itemValueTypes&lt;/code&gt;.
                * @exception XSException
                * NOT_SUPPORTED_ERR: Raised if the implementation does not support this
                * method.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ShortList</name>
                </type>
                <name>getItemValueTypes</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XSException</name>
                        </expr>
                    </argument>
                </throws>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>
