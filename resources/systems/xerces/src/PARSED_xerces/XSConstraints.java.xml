<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\XSConstraints.java">
    <comment type="block">/*
        * Copyright 1999-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>XSSimpleType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>InvalidDatatypeValueException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidatedInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>XMLErrorReporter</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            models</name>.
            <name>CMBuilder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            models</name>.
            <name>XSCMValidator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>SimpleLocator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.
            <name>ValidationContext</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolHash</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Constaints shared by traversers and validator
        *
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        *
        * @version $Id: XSConstraints.java,v 1.41 2004/10/06 15:14:54 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XSConstraints</name>
        <block>{

            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>OCCURRENCE_UNKNOWN</name> =
                    <init>
                        <expr>
                            <name><name>SchemaSymbols</name>.
                                <name>OCCURRENCE_UNBOUNDED</name>
                            </name>
                            -1
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XSSimpleType</name>
                    </type>
                    <name>STRING_TYPE</name> =
                    <init>
                        <expr>(<name>XSSimpleType</name>)
                            <call>
                                <name><name>SchemaGrammar</name>.<name>SG_SchemaNS</name>.
                                    <name>getGlobalTypeDecl</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>SchemaSymbols</name>.
                                                <name>ATTVAL_STRING</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * check whether derived is valid derived from base, given a subset
                * of {restriction, extension}.B
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkTypeDerivationOk</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>block</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if derived is anyType, then it's valid only if base is anyType too</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnyType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>derived</name>
                                    ==
                                    <name>base</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <comment type="line">// if derived is anySimpleType, then it's valid only if the base</comment>
                    <comment type="line">// is ur-type</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnySimpleType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>(<name>base</name> ==
                                        <name><name>SchemaGrammar</name>.
                                            <name>fAnyType</name>
                                        </name>
                                        ||
                                        <name>base</name>
                                        ==
                                        <name><name>SchemaGrammar</name>.
                                            <name>fAnySimpleType</name>
                                        </name>
                                        )
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// if derived is simple type</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>derived</name>.
                                        <name>getTypeCategory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSTypeDefinition</name>.
                                    <name>SIMPLE_TYPE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// if base is complex type</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>base</name>.
                                                    <name>getTypeCategory</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>COMPLEX_TYPE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// if base is anyType, change base to anySimpleType,
                                            </comment>
                                            <comment type="line">// otherwise, not valid</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>base</name>
                                                        ==
                                                        <name><name>SchemaGrammar</name>.
                                                            <name>fAnyType</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>base</name>
                                                            =
                                                            <name><name>SchemaGrammar</name>.
                                                                <name>fAnySimpleType</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                                <else>else
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>
                                        <call>
                                            <name>checkSimpleDerivation</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <name>derived</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <name>base</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>block</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name>checkComplexDerivation</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XSComplexTypeDecl</name>)
                                                        <name>derived</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>base</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>block</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * check whether simple type derived is valid derived from base,
                * given a subset of {restriction, extension}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkSimpleDerivationOk</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleType</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>block</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if derived is anySimpleType, then it's valid only if the base</comment>
                    <comment type="line">// is ur-type</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnySimpleType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>(<name>base</name> ==
                                        <name><name>SchemaGrammar</name>.
                                            <name>fAnyType</name>
                                        </name>
                                        ||
                                        <name>base</name>
                                        ==
                                        <name><name>SchemaGrammar</name>.
                                            <name>fAnySimpleType</name>
                                        </name>
                                        )
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// if base is complex type</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>base</name>.
                                        <name>getTypeCategory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSTypeDefinition</name>.
                                    <name>COMPLEX_TYPE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// if base is anyType, change base to anySimpleType,</comment>
                                <comment type="line">// otherwise, not valid</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>base</name>
                                            ==
                                            <name><name>SchemaGrammar</name>.
                                                <name>fAnyType</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <expr_stmt>
                                            <expr>
                                                <name>base</name>
                                                =
                                                <name><name>SchemaGrammar</name>.
                                                    <name>fAnySimpleType</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                    </then>
                                    <else>else
                                        <return>return <expr>false</expr>;
                                        </return>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>checkSimpleDerivation</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>XSSimpleType</name>)
                                            <name>derived</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>XSSimpleType</name>)
                                            <name>base</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>block</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * check whether complex type derived is valid derived from base,
                * given a subset of {restriction, extension}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkComplexDerivationOk</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>block</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if derived is anyType, then it's valid only if base is anyType too</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnyType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>derived</name>
                                    ==
                                    <name>base</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>checkComplexDerivation</name>
                                <argument_list>(
                                    <argument>
                                        <expr>(<name>XSComplexTypeDecl</name>)
                                            <name>derived</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>base</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>block</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Note: this will be a private method, and it assumes that derived is not
                * anySimpleType, and base is not anyType. Another method will be
                * introduced for public use, which will call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkSimpleDerivation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleType</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleType</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>block</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// 1 They are the same type definition.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name>base</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 2 All of the following must be true:</comment>
                    <comment type="line">// 2.1 restriction is not in the subset, or in the {final} of its own {base
                        type definition};
                    </comment>
                    <if>if
                        <condition>(
                            <expr>(<name>block</name> &amp;
                                <name><name>XSConstants</name>.
                                    <name>DERIVATION_RESTRICTION</name>
                                </name>
                                ) != 0 ||
                                (
                                <call>
                                    <name><name>derived</name>.
                                        <name>getBaseType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                .
                                <call>
                                    <name>getFinal</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;
                                <name><name>XSConstants</name>.
                                    <name>DERIVATION_RESTRICTION</name>
                                </name>
                                ) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 2.2 One of the following must be true:</comment>
                    <comment type="line">// 2.2.1 D's base type definition is B.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSSimpleType</name>
                            </type>
                            <name>directBase</name> =
                            <init>
                                <expr>(<name>XSSimpleType</name>)
                                    <call>
                                        <name><name>derived</name>.
                                            <name>getBaseType</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>directBase</name>
                                ==
                                <name>base</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 2.2.2 D's base type definition is not the simple ur-type definition and is
                        validly derived from B given the subset, as defined by this constraint.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>directBase</name>
                                !=
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnySimpleType</name>
                                </name>
                                &amp;&amp;
                                <call>
                                    <name>checkSimpleDerivation</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>directBase</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>base</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>block</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 2.2.3 D's {variety} is list or union and B is the simple ur-type
                        definition.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <call>
                                    <name><name>derived</name>.
                                        <name>getVariety</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSSimpleType</name>.
                                    <name>VARIETY_LIST</name>
                                </name>
                                ||
                                <call>
                                    <name><name>derived</name>.
                                        <name>getVariety</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSSimpleType</name>.
                                    <name>VARIETY_UNION</name>
                                </name>
                                ) &amp;&amp;
                                <name>base</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnySimpleType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 2.2.4 B's {variety} is union and D is validly derived from a type definition
                        in B's {member type definitions} given the subset, as defined by this constraint.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>base</name>.
                                        <name>getVariety</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSSimpleType</name>.
                                    <name>VARIETY_UNION</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSObjectList</name>
                                        </type>
                                        <name>subUnionMemberDV</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>base</name>.
                                                        <name>getMemberTypes</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>subUnionSize</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>subUnionMemberDV</name>.
                                                        <name>getLength</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name>=
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr><name>i</name>&lt;
                                            <name>subUnionSize</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>base</name>
                                                = (<name>XSSimpleType</name>)
                                                <call>
                                                    <name><name>subUnionMemberDV</name>.
                                                        <name>item</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>checkSimpleDerivation</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>derived</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>base</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>block</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return <expr>true</expr>;
                                                </return>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Note: this will be a private method, and it assumes that derived is not
                * anyType. Another method will be introduced for public use,
                * which will call this method.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkComplexDerivation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>derived</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>base</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>block</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// 2.1 B and D must be the same type definition.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>derived</name>
                                ==
                                <name>base</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 1 If B and D are not the same type definition, then the {derivation method}
                        of D must not be in the subset.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>derived</name>.
                                    <name>fDerivedBy</name>
                                </name>
                                &amp; <name>block</name>) != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 2 One of the following must be true:</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>directBase</name> =
                            <init>
                                <expr>
                                    <name><name>derived</name>.
                                        <name>fBaseType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// 2.2 B must be D's {base type definition}.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>directBase</name>
                                ==
                                <name>base</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 2.3 All of the following must be true:</comment>
                    <comment type="line">// 2.3.1 D's {base type definition} must not be the ur-type definition.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>directBase</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnyType</name>
                                </name>
                                ||
                                <name>directBase</name>
                                ==
                                <name><name>SchemaGrammar</name>.
                                    <name>fAnySimpleType</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 2.3.2 The appropriate case among the following must be true:</comment>
                    <comment type="line">// 2.3.2.1 If D's {base type definition} is complex, then it must be validly
                        derived from B given the subset as defined by this constraint.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>directBase</name>.
                                        <name>getTypeCategory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSTypeDefinition</name>.
                                    <name>COMPLEX_TYPE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name>checkComplexDerivation</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>XSComplexTypeDecl</name>)
                                                    <name>directBase</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>base</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>block</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// 2.3.2.2 If D's {base type definition} is simple, then it must be validly
                        derived from B given the subset as defined in Type Derivation OK (Simple) (3.14.6).
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>directBase</name>.
                                        <name>getTypeCategory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSTypeDefinition</name>.
                                    <name>SIMPLE_TYPE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// if base is complex type</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>base</name>.
                                                    <name>getTypeCategory</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>COMPLEX_TYPE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// if base is anyType, change base to anySimpleType,
                                            </comment>
                                            <comment type="line">// otherwise, not valid</comment>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>base</name>
                                                        ==
                                                        <name><name>SchemaGrammar</name>.
                                                            <name>fAnyType</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>base</name>
                                                            =
                                                            <name><name>SchemaGrammar</name>.
                                                                <name>fAnySimpleType</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                                <else>else
                                                    <return>return <expr>false</expr>;
                                                    </return>
                                                </else>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return
                                    <expr>
                                        <call>
                                            <name>checkSimpleDerivation</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <name>directBase</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>XSSimpleType</name>)
                                                        <name>base</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>block</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * check whether a value is a valid default for some type
                * returns the compiled form of the value
                * The parameter value could be either a String or a ValidatedInfo object
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Object</name>
                </type>
                <name>ElementDefaultValidImmediate</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSTypeDefinition</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidationContext</name>
                            </type>
                            <name>context</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValidatedInfo</name>
                            </type>
                            <name>vinfo</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSSimpleType</name>
                            </type>
                            <name>dv</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// e-props-correct</comment>
                    <comment type="line">// For a string to be a valid default with respect to a type definition the
                        appropriate case among the following must be true:
                    </comment>
                    <comment type="line">// 1 If the type definition is a simple type definition, then the string must
                        be valid with respect to that definition as defined by String Valid (3.14.4).
                    </comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>type</name>.
                                        <name>getTypeCategory</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSTypeDefinition</name>.
                                    <name>SIMPLE_TYPE</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>dv</name>
                                        = (<name>XSSimpleType</name>)
                                        <name>type</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>

                        <comment type="line">// 2 If the type definition is a complex type definition, then all of the
                            following must be true:
                        </comment>
                        <else>else
                            <block>{
                                <comment type="line">// 2.1 its {content type} must be a simple type definition or
                                    mixed.
                                </comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSComplexTypeDecl</name>
                                        </type>
                                        <name>ctype</name> =
                                        <init>
                                            <expr>(<name>XSComplexTypeDecl</name>)
                                                <name>type</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// 2.2 The appropriate case among the following must be true:
                                </comment>
                                <comment type="line">// 2.2.1 If the {content type} is a simple type definition, then
                                    the string must be valid with respect to that simple type definition as defined by
                                    String Valid (3.14.4).
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>ctype</name>.
                                                <name>fContentType</name>
                                            </name>
                                            ==
                                            <name><name>XSComplexTypeDecl</name>.
                                                <name>CONTENTTYPE_SIMPLE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>dv</name>
                                                    =
                                                    <name><name>ctype</name>.
                                                        <name>fXSSimpleType</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <comment type="line">// 2.2.2 If the {content type} is mixed, then the {content
                                        type}'s particle must be emptiable as defined by Particle Emptiable (3.9.6).
                                    </comment>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>ctype</name>.
                                                        <name>fContentType</name>
                                                    </name>
                                                    ==
                                                    <name><name>XSComplexTypeDecl</name>.
                                                        <name>CONTENTTYPE_MIXED</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>!((<name>XSParticleDecl</name>)
                                                                <call>
                                                                    <name><name>ctype</name>.
                                                                        <name>getParticle</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                ).
                                                                <call>
                                                                    <name>emptiable</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <return>return
                                                                <expr>
                                                                    <name>null</name>
                                                                </expr>
                                                                ;
                                                            </return>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <return>return
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                        ;
                                                    </return>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>

                    <comment type="line">// get the simple type declaration, and validate</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>actualValue</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dv</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// complex type with mixed. to make sure that we store correct
                                </comment>
                                <comment type="line">// information in vinfo and return the correct value, we use
                                </comment>
                                <comment type="line">// "string" type for validation</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>dv</name>
                                        =
                                        <name>STRING_TYPE</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <try>try
                        <block>{
                            <comment type="line">// validate the original lexical rep, and set the actual value
                            </comment>
                            <expr_stmt>
                                <expr>
                                    <name>actualValue</name>
                                    =
                                    <call>
                                        <name><name>dv</name>.
                                            <name>validate</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>context</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>vinfo</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// validate the canonical lexical rep</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>vinfo</name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>actualValue</name>
                                            =
                                            <call>
                                                <name><name>dv</name>.
                                                    <name>validate</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>vinfo</name>.
                                                                    <name>stringValue</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>context</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>vinfo</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>InvalidDatatypeValueException</name>
                                    </type>
                                    <name>ide</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </catch>
                    </try>

                    <return>return
                        <expr>
                            <name>actualValue</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>reportSchemaError</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>errorReporter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SimpleLocator</name>
                            </type>
                            <name>loc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>args</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>loc</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>errorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>loc</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XSMessageFormatter</name>.
                                                            <name>SCHEMA_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>args</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLErrorReporter</name>.
                                                            <name>SEVERITY_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>errorReporter</name>.
                                                <name>reportError</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>XSMessageFormatter</name>.
                                                            <name>SCHEMA_DOMAIN</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>key</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>args</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>XMLErrorReporter</name>.
                                                            <name>SEVERITY_ERROR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * used to check the 3 constraints against each complex type
                * (should be each model group):
                * Unique Particle Attribution, Particle Derivation (Restriction),
                * Element Declrations Consistent.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>fullSchemaChecking</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSGrammarBucket</name>
                            </type>
                            <name>grammarBucket</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>SGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CMBuilder</name>
                            </type>
                            <name>cmBuilder</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XMLErrorReporter</name>
                            </type>
                            <name>errorReporter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// get all grammars, and put all substitution group information</comment>
                    <comment type="line">// in the substitution group handler</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                                <index>[]</index>
                            </type>
                            <name>grammars</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>grammarBucket</name>.
                                            <name>getGrammars</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>grammars</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>SGHandler</name>.
                                            <name>addSubstitutionGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>grammars</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>getSubstitutionGroups</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>fakeDerived</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSParticleDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>fakeBase</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSParticleDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fakeDerived</name>.
                                <name>fType</name>
                            </name>
                            =
                            <name><name>XSParticleDecl</name>.
                                <name>PARTICLE_MODELGROUP</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>fakeBase</name>.
                                <name>fType</name>
                            </name>
                            =
                            <name><name>XSParticleDecl</name>.
                                <name>PARTICLE_MODELGROUP</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// before worrying about complexTypes, let's get</comment>
                    <comment type="line">// groups redefined by restriction out of the way.</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>g</name> =
                                <init>
                                    <expr>
                                        <name><name>grammars</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>g</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>g</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSGroupDecl</name>
                                        <index>[]</index>
                                    </type>
                                    <name>redefinedGroups</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>grammars</name>
                                                <index>[
                                                    <expr>
                                                        <name>g</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>getRedefinedGroupDecls</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SimpleLocator</name>
                                        <index>[]</index>
                                    </type>
                                    <name>rgLocators</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>grammars</name>
                                                <index>[
                                                    <expr>
                                                        <name>g</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>getRGLocators</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for(
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name>=
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>i</name>&lt;
                                        <name><name>redefinedGroups</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr/>)
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSGroupDecl</name>
                                            </type>
                                            <name>derivedGrp</name> =
                                            <init>
                                                <expr>
                                                    <name>
                                                        <name>redefinedGroups</name>
                                                        <index>[
                                                            <expr><name>i</name>++
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSModelGroupImpl</name>
                                            </type>
                                            <name>derivedMG</name> =
                                            <init>
                                                <expr>
                                                    <name><name>derivedGrp</name>.
                                                        <name>fModelGroup</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSGroupDecl</name>
                                            </type>
                                            <name>baseGrp</name> =
                                            <init>
                                                <expr>
                                                    <name>
                                                        <name>redefinedGroups</name>
                                                        <index>[
                                                            <expr><name>i</name>++
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSModelGroupImpl</name>
                                            </type>
                                            <name>baseMG</name> =
                                            <init>
                                                <expr>
                                                    <name><name>baseGrp</name>.
                                                        <name>fModelGroup</name>
                                                    </name>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>baseMG</name>
                                                ==
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>derivedMG</name>
                                                            !=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// can't be a restriction!</comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportSchemaError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>errorReporter</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>rgLocators</name>
                                                                                        <index>[
                                                                                            <expr><name>i</name>/2-1
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"src-redefine.6.2.2"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                derivedGrp</name>.
                                                                                                <name>fName</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        , <expr>"rcase-Recurse.2"</expr>}
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fakeDerived</name>.
                                                            <name>fValue</name>
                                                        </name>
                                                        =
                                                        <name>derivedMG</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name><name>fakeBase</name>.
                                                            <name>fValue</name>
                                                        </name>
                                                        =
                                                        <name>baseMG</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <try>try
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>particleValidRestriction</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fakeDerived</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>SGHandler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>fakeBase</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>SGHandler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                    <catch>catch (
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>XMLSchemaException</name>
                                                                </type>
                                                                <name>e</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                    </type>
                                                                    <name>key</name> =
                                                                    <init>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>e</name>.
                                                                                    <name>getKey</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportSchemaError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>errorReporter</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>rgLocators</name>
                                                                                        <index>[
                                                                                            <expr><name>i</name>/2-1
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>key</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getArgs</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportSchemaError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>errorReporter</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>rgLocators</name>
                                                                                        <index>[
                                                                                            <expr><name>i</name>/2-1
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>"src-redefine.6.2.2"</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>new
                                                                                    <name>
                                                                                        <name>Object</name>
                                                                                        <index>[]</index>
                                                                                    </name>
                                                                                    <block>{
                                                                                        <expr>
                                                                                            <name><name>
                                                                                                derivedGrp</name>.
                                                                                                <name>fName</name>
                                                                                            </name>
                                                                                        </expr>
                                                                                        ,
                                                                                        <expr>
                                                                                            <name>key</name>
                                                                                        </expr>
                                                                                        }
                                                                                    </block>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                }
                                            </block>
                                        </else>
                                    </if>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </for>

                    <comment type="line">// for each complex type, check the 3 constraints.</comment>
                    <comment type="line">// types need to be checked</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                                <index>[]</index>
                            </type>
                            <name>types</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SimpleLocator</name>
                                <index>[]</index>
                            </type>
                            <name>ctLocators</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// to hold the errors</comment>
                    <comment type="line">// REVISIT: do we want to report all errors? or just one?</comment>
                    <comment type="line">//XMLSchemaError1D errors = new XMLSchemaError1D();</comment>
                    <comment type="line">// whether need to check this type again;</comment>
                    <comment type="line">// whether only do UPA checking</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>further</name>,
                            <name>fullChecked</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// if do all checkings, how many need to be checked again.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>keepType</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// i: grammar; j: type; k: error</comment>
                    <comment type="line">// for all grammars</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SymbolHash</name>
                            </type>
                            <name>elemTable</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SymbolHash</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>grammars</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                                , <name>j</name>,
                                <name>k</name>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// get whether to skip EDC, and types need to be checked</comment>
                            <expr_stmt>
                                <expr>
                                    <name>keepType</name>
                                    = 0
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>fullChecked</name>
                                    =
                                    <name>
                                        <name>grammars</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name>fFullChecked</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>types</name>
                                    =
                                    <name>
                                        <name>grammars</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>getUncheckedComplexTypeDecls</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>ctLocators</name>
                                    =
                                    <name>
                                        <name>grammars</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>getUncheckedCTLocators</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// for each type</comment>
                            <for>for (
                                <init>
                                    <expr>
                                        <name>j</name>
                                        = 0
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;
                                        <name><name>types</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <comment type="line">// if we've already full-checked this grammar, then</comment>
                                    <comment type="line">// skip the EDC constraint</comment>
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <name>fullChecked</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// 1. Element Decl Consistent</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>types</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .<name>fParticle</name>!=
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>elemTable</name>.
                                                                            <name>clear</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <try>try
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>checkElementDeclsConsistent</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>types</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>j</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>types</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>j</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                            .
                                                                                            <name>fParticle</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>elemTable</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>SGHandler</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                                <catch>catch (
                                                                    <param>
                                                                        <decl>
                                                                            <type>
                                                                                <name>XMLSchemaException</name>
                                                                            </type>
                                                                            <name>e</name>
                                                                        </decl>
                                                                    </param>
                                                                    )
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>reportSchemaError</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>errorReporter
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>ctLocators
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>j
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>e</name>
                                                                                                        .
                                                                                                        <name>getKey
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <call>
                                                                                                    <name><name>e</name>
                                                                                                        .
                                                                                                        <name>getArgs
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>()
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </catch>
                                                            </try>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>

                                    <comment type="line">// 2. Particle Derivation</comment>

                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>
                                                    <name>types</name>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .<name>fBaseType</name> != <name>null</name> &amp;&amp;
                                                <name>
                                                    <name>types</name>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .<name>fBaseType</name> !=
                                                <name><name>SchemaGrammar</name>.
                                                    <name>fAnyType</name>
                                                </name>
                                                &amp;&amp;
                                                <name>
                                                    <name>types</name>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .<name>fDerivedBy</name> ==
                                                <name><name>XSConstants</name>.
                                                    <name>DERIVATION_RESTRICTION</name>
                                                </name>
                                                &amp;&amp;
                                                (
                                                <name>
                                                    <name>types</name>
                                                    <index>[
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .<name>fBaseType</name>
                                                <name>instanceof</name>
                                                <name>XSComplexTypeDecl</name>)
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{

                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSParticleDecl</name>
                                                        </type>
                                                        <name>derivedParticle</name>=
                                                        <init>
                                                            <expr>
                                                                <name>
                                                                    <name>types</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>j</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <name>fParticle</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <decl_stmt>
                                                    <decl>
                                                        <type>
                                                            <name>XSParticleDecl</name>
                                                        </type>
                                                        <name>baseParticle</name>=
                                                        <init>
                                                            <expr>(
                                                                <call>(<name>XSComplexTypeDecl</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>
                                                                                    <name>types</name>
                                                                                    <index>[
                                                                                        <expr>
                                                                                            <name>j</name>
                                                                                        </expr>
                                                                                        ]
                                                                                    </index>
                                                                                </name>
                                                                                .
                                                                                <name>fBaseType</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                                ).
                                                                <name>fParticle</name>
                                                            </expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </decl_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr><name>derivedParticle</name>==
                                                            <name>null</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <if>if
                                                                <condition>(
                                                                    <expr><name>baseParticle</name>!=<name>null</name> &amp;&amp;
                                                                        !
                                                                        <call>
                                                                            <name><name>baseParticle</name>.
                                                                                <name>emptiable</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <call>
                                                                                    <name>reportSchemaError</name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>errorReporter
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>
                                                                                                    <name>ctLocators
                                                                                                    </name>
                                                                                                    <index>[
                                                                                                        <expr>
                                                                                                            <name>j
                                                                                                            </name>
                                                                                                        </expr>
                                                                                                        ]
                                                                                                    </index>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                "derivation-ok-restriction.5.3.2"
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>new
                                                                                                <name>
                                                                                                    <name>Object</name>
                                                                                                    <index>[]</index>
                                                                                                </name>
                                                                                                <block>{
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                types
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        j
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        .
                                                                                                        <name>fName
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    ,
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                types
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        j
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        .
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                fBaseType</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getName
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    }
                                                                                                </block>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                            </if>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr><name>baseParticle</name>!=
                                                                    <name>null</name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <try>try
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>particleValidRestriction
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        <name>types
                                                                                                        </name>
                                                                                                        <index>[
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    j
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    .
                                                                                                    <name>fParticle
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>SGHandler
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>(
                                                                                                    <call>(<name>
                                                                                                        XSComplexTypeDecl</name>)
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            types
                                                                                                                        </name>
                                                                                                                        <index>
                                                                                                                            [
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    j
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            ]
                                                                                                                        </index>
                                                                                                                    </name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        fBaseType
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                    ).
                                                                                                    <name>fParticle
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>SGHandler
                                                                                                    </name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                        <catch>catch (
                                                                            <param>
                                                                                <decl>
                                                                                    <type>
                                                                                        <name>XMLSchemaException</name>
                                                                                    </type>
                                                                                    <name>e</name>
                                                                                </decl>
                                                                            </param>
                                                                            )
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>reportSchemaError
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            errorReporter
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                ctLocators
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        j
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                e</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getKey
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                e</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    getArgs
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                ()
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name>reportSchemaError
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            errorReporter
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                ctLocators
                                                                                                            </name>
                                                                                                            <index>[
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        j
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                                ]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        "derivation-ok-restriction.5.4.2"
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>new
                                                                                                        <name>
                                                                                                            <name>
                                                                                                                Object
                                                                                                            </name>
                                                                                                            <index>[]
                                                                                                            </index>
                                                                                                        </name>
                                                                                                        <block>{
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        types
                                                                                                                    </name>
                                                                                                                    <index>
                                                                                                                        [
                                                                                                                        <expr>
                                                                                                                            <name>
                                                                                                                                j
                                                                                                                            </name>
                                                                                                                        </expr>
                                                                                                                        ]
                                                                                                                    </index>
                                                                                                                </name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    fName
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            }
                                                                                                        </block>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </catch>
                                                                    </try>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name>reportSchemaError</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>errorReporter</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>
                                                                                                <name>ctLocators</name>
                                                                                                <index>[
                                                                                                    <expr>
                                                                                                        <name>j</name>
                                                                                                    </expr>
                                                                                                    ]
                                                                                                </index>
                                                                                            </name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            "derivation-ok-restriction.5.4.2"
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>new
                                                                                            <name>
                                                                                                <name>Object</name>
                                                                                                <index>[]</index>
                                                                                            </name>
                                                                                            <block>{
                                                                                                <expr>
                                                                                                    <name>
                                                                                                        <name>types
                                                                                                        </name>
                                                                                                        <index>[
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    j
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            ]
                                                                                                        </index>
                                                                                                    </name>
                                                                                                    .
                                                                                                    <name>fName</name>
                                                                                                </expr>
                                                                                                }
                                                                                            </block>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// 3. UPA</comment>
                                    <comment type="line">// get the content model and check UPA</comment>
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSCMValidator</name>
                                            </type>
                                            <name>cm</name> =
                                            <init>
                                                <expr>
                                                    <name>
                                                        <name>types</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>getContentModel</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>cmBuilder</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>further</name>
                                            = false
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>cm</name>
                                                !=
                                                <name>null</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <try>try
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>further</name>
                                                                =
                                                                <call>
                                                                    <name><name>cm</name>.
                                                                        <name>checkUniqueParticleAttribution</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>SGHandler</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                    <catch>catch (
                                                        <param>
                                                            <decl>
                                                                <type>
                                                                    <name>XMLSchemaException</name>
                                                                </type>
                                                                <name>e</name>
                                                            </decl>
                                                        </param>
                                                        )
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name>reportSchemaError</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>errorReporter</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>
                                                                                        <name>ctLocators</name>
                                                                                        <index>[
                                                                                            <expr>
                                                                                                <name>j</name>
                                                                                            </expr>
                                                                                            ]
                                                                                        </index>
                                                                                    </name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getKey</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>e</name>.
                                                                                            <name>getArgs</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </catch>
                                                </try>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    <comment type="line">// now report all errors</comment>
                                    <comment type="line">// REVISIT: do we want to report all errors? or just one?
                                    </comment>
                                    <comment type="block">/*for (k = errors.getErrorCodeNum()-1; k &gt;= 0; k--) {
                                        reportSchemaError(errorReporter, ctLocators[j],
                                        errors.getErrorCode(k),
                                        errors.getArgs(k));
                                        }*/
                                    </comment>

                                    <comment type="line">// if we are doing all checkings, and this one needs further
                                    </comment>
                                    <comment type="line">// checking, store it in the type array.</comment>
                                    <if>if
                                        <condition>(
                                            <expr>!<name>fullChecked</name> &amp;&amp;
                                                <name>further</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>types</name>
                                                        <index>[
                                                            <expr><name>keepType</name>++
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    =
                                                    <name>
                                                        <name>types</name>
                                                        <index>[
                                                            <expr>
                                                                <name>j</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </then>
                                    </if>

                                    <comment type="line">// clear errors for the next type.</comment>
                                    <comment type="line">// REVISIT: do we want to report all errors? or just one?
                                    </comment>
                                    <comment type="line">//errors.clear();</comment>
                                    }
                                </block>
                            </for>
                            <comment type="line">// we've done with the types in this grammar. if we are checking
                            </comment>
                            <comment type="line">// all constraints, need to trim type array to a proper size:</comment>
                            <comment type="line">// only contain those need further checking.</comment>
                            <comment type="line">// and mark this grammar that it only needs UPA checking.</comment>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>fullChecked</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>grammars</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>setUncheckedTypeNum</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>keepType</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>grammars</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .<name>fFullChecked</name> = true
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="block">/*
                Check that a given particle is a valid restriction of a base particle.
                */
            </comment>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkElementDeclsConsistent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SymbolHash</name>
                            </type>
                            <name>elemDeclHash</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>sgHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check for elements in the tree with the same name and namespace</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pType</name> =
                            <init>
                                <expr>
                                    <name><name>particle</name>.
                                        <name>fType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>pType</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_WILDCARD</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return;</return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>pType</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSElementDecl</name>
                                        </type>
                                        <name>elem</name> =
                                        <init>
                                            <expr>
                                                <call>(<name>XSElementDecl</name>)
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>particle</name>.
                                                                    <name>fValue</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>findElemInTable</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>type</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elem</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elemDeclHash</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>elem</name>.
                                                <name>fScope</name>
                                            </name>
                                            ==
                                            <name><name>XSConstants</name>.
                                                <name>SCOPE_GLOBAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Check for subsitution groups.</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XSElementDecl</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>subGroup</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>sgHandler</name>.
                                                                    <name>getSubstitutionGroup</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elem</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <for>for (
                                                <init>
                                                    <decl>
                                                        <type>
                                                            <name>int</name>
                                                        </type>
                                                        <name>i</name> =
                                                        <init>
                                                            <expr>0</expr>
                                                        </init>
                                                    </decl>
                                                    ;
                                                </init>
                                                <condition>
                                                    <expr>
                                                        <name>i</name>
                                                        &lt;
                                                        <name><name>subGroup</name>.
                                                            <name>length</name>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </condition>
                                                <incr>
                                                    <expr><name>i</name>++
                                                    </expr>
                                                </incr>
                                                )
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>findElemInTable</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>type</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>
                                                                                <name>subGroup</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>i</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elemDeclHash</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </for>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSModelGroupImpl</name>
                            </type>
                            <name>group</name> =
                            <init>
                                <expr>(<name>XSModelGroupImpl</name>)
                                    <name><name>particle</name>.
                                        <name>fValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>group</name>.
                                    <name>fParticleCount</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <call>
                                    <name>checkElementDeclsConsistent</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>type</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>group</name>.
                                                    <name>fParticles</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>elemDeclHash</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>sgHandler</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>findElemInTable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>type</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SymbolHash</name>
                            </type>
                            <name>elemDeclHash</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// How can we avoid this concat? LM.</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name> =
                            <init>
                                <expr>
                                    <name><name>elem</name>.
                                        <name>fName</name>
                                    </name>
                                    + "," +
                                    <name><name>elem</name>.
                                        <name>fTargetNamespace</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>existingElem</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>(<name>existingElem</name> =
                                <call>(<name>XSElementDecl</name>)
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>elemDeclHash</name>.
                                                        <name>get</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>name</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ) ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// just add it in</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>elemDeclHash</name>.
                                                <name>put</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>name</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>elem</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <comment type="line">// If this is the same check element, we're O.K.</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>elem</name>
                                            ==
                                            <name>existingElem</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <return>return;</return>
                                    </then>
                                </if>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>elem</name>.
                                                <name>fType</name>
                                            </name>
                                            !=
                                            <name><name>existingElem</name>.
                                                <name>fType</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Types are not the same</comment>
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLSchemaException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"cos-element-consistent"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>type</name>.
                                                                                <name>fName</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <name><name>elem</name>.
                                                                                <name>fName</name>
                                                                            </name>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>

                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="block">/*
                Check that a given particle is a valid restriction of a base particle.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>particleValidRestriction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>dParticle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>bParticle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>particleValidRestriction</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dParticle</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dSGHandler</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bParticle</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bSGHandler</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>particleValidRestriction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>dParticle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>bParticle</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>checkWCOccurrence</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>dChildren</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>bChildren</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMinEffectiveTotalRange</name>=
                            <init>
                                <expr>
                                    <name>OCCURRENCE_UNKNOWN</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMaxEffectiveTotalRange</name>=
                            <init>
                                <expr>
                                    <name>OCCURRENCE_UNKNOWN</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>


                    <comment type="line">// Check for empty particles. If either base or derived particle is empty,
                    </comment>
                    <comment type="line">// (and the other isn't) it's an error.</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>dParticle</name>.
                                        <name>isEmpty</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp; !
                                <call>
                                    <name><name>bParticle</name>.
                                        <name>emptiable</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"cos-particle-restrict.a"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>dParticle</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>bParticle</name>.
                                                <name>isEmpty</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>XMLSchemaException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"cos-particle-restrict.b"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Do setup prior to invoking the Particle (Restriction) cases.</comment>
                    <comment type="line">// This involves:</comment>
                    <comment type="line">// - removing pointless occurrences for groups, and retrieving a vector of
                    </comment>
                    <comment type="line">// non-pointless children</comment>
                    <comment type="line">// - turning top-level elements with substitution groups into CHOICE groups.
                    </comment>
                    <comment type="line">//</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>dType</name> =
                            <init>
                                <expr>
                                    <name><name>dParticle</name>.
                                        <name>fType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//</comment>
                    <comment type="line">// Handle pointless groups for the derived particle</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dType</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_MODELGROUP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>dType</name>
                                        = ((<name>XSModelGroupImpl</name>)
                                        <name><name>dParticle</name>.
                                            <name>fValue</name>
                                        </name>
                                        ).
                                        <name>fCompositor</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// Find a group, starting with this particle, with more than 1
                                    child. There
                                </comment>
                                <comment type="line">// may be none, and the particle of interest trivially becomes an
                                    element or
                                </comment>
                                <comment type="line">// wildcard.</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSParticleDecl</name>
                                        </type>
                                        <name>dtmp</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getNonUnaryGroup</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>dParticle</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>dtmp</name>
                                            !=
                                            <name>dParticle</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Particle has been replaced. Retrieve new type
                                                info.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>dParticle</name>
                                                    =
                                                    <name>dtmp</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>dType</name>
                                                    =
                                                    <name><name>dParticle</name>.
                                                        <name>fType</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>dType</name>
                                                        ==
                                                        <name><name>XSParticleDecl</name>.
                                                            <name>PARTICLE_MODELGROUP</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>dType</name>
                                                            = ((<name>XSModelGroupImpl</name>)
                                                            <name><name>dParticle</name>.
                                                                <name>fValue</name>
                                                            </name>
                                                            ).
                                                            <name>fCompositor</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// Fill in a vector with the children of the particle, removing
                                    any
                                </comment>
                                <comment type="line">// pointless model groups in the process.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>dChildren</name>
                                        =
                                        <call>
                                            <name>removePointlessChildren</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dParticle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMinOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>dParticle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMaxOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>dParticle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// For elements which are the heads of substitution groups, treat as CHOICE
                    </comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dSGHandler</name>
                                != <name>null</name> &amp;&amp; <name>dType</name> ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSElementDecl</name>
                                        </type>
                                        <name>dElement</name> =
                                        <init>
                                            <expr>(<name>XSElementDecl</name>)
                                                <name><name>dParticle</name>.
                                                    <name>fValue</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>dElement</name>.
                                                <name>fScope</name>
                                            </name>
                                            ==
                                            <name><name>XSConstants</name>.
                                                <name>SCOPE_GLOBAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Check for subsitution groups. Treat any element that
                                                has a
                                            </comment>
                                            <comment type="line">// subsitution group as a choice. Fill in the children
                                                vector with the
                                            </comment>
                                            <comment type="line">// members of the substitution group</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XSElementDecl</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>subGroup</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>dSGHandler</name>.
                                                                    <name>getSubstitutionGroup</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dElement</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>subGroup</name>.
                                                            <name>length</name>
                                                        </name>
                                                        &gt;0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// Now, set the type to be CHOICE. The
                                                            "group" will have the same
                                                        </comment>
                                                        <comment type="line">// occurrence information as the original
                                                            particle.
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>dType</name>
                                                                =
                                                                <name><name>XSModelGroupImpl</name>.
                                                                    <name>MODELGROUP_CHOICE</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>dMinEffectiveTotalRange</name>
                                                                =
                                                                <name>dMinOccurs</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>dMaxEffectiveTotalRange</name>
                                                                =
                                                                <name>dMaxOccurs</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// Fill in the vector of children</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>dChildren</name>
                                                                = new
                                                                <call>
                                                                    <name>Vector</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>subGroup</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                                +1
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>subGroup</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>addElementToParticleVector</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>dChildren</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>subGroup</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>addElementToParticleVector</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>dChildren</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>dElement</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <comment type="line">// Set the handler to null, to indicate
                                                            that we've finished handling
                                                        </comment>
                                                        <comment type="line">// substitution groups for this particle.
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>dSGHandler</name>
                                                                =
                                                                <name>null</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>bType</name> =
                            <init>
                                <expr>
                                    <name><name>bParticle</name>.
                                        <name>fType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//</comment>
                    <comment type="line">// Handle pointless groups for the base particle</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>bType</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_MODELGROUP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>bType</name>
                                        = ((<name>XSModelGroupImpl</name>)
                                        <name><name>bParticle</name>.
                                            <name>fValue</name>
                                        </name>
                                        ).
                                        <name>fCompositor</name>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <comment type="line">// Find a group, starting with this particle, with more than 1
                                    child. There
                                </comment>
                                <comment type="line">// may be none, and the particle of interest trivially becomes an
                                    element or
                                </comment>
                                <comment type="line">// wildcard.</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSParticleDecl</name>
                                        </type>
                                        <name>btmp</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getNonUnaryGroup</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>bParticle</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>btmp</name>
                                            !=
                                            <name>bParticle</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Particle has been replaced. Retrieve new type
                                                info.
                                            </comment>
                                            <expr_stmt>
                                                <expr>
                                                    <name>bParticle</name>
                                                    =
                                                    <name>btmp</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>bType</name>
                                                    =
                                                    <name><name>bParticle</name>.
                                                        <name>fType</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>bType</name>
                                                        ==
                                                        <name><name>XSParticleDecl</name>.
                                                            <name>PARTICLE_MODELGROUP</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>bType</name>
                                                            = ((<name>XSModelGroupImpl</name>)
                                                            <name><name>bParticle</name>.
                                                                <name>fValue</name>
                                                            </name>
                                                            ).
                                                            <name>fCompositor</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// Fill in a vector with the children of the particle, removing
                                    any
                                </comment>
                                <comment type="line">// pointless model groups in the process.</comment>
                                <expr_stmt>
                                    <expr>
                                        <name>bChildren</name>
                                        =
                                        <call>
                                            <name>removePointlessChildren</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>bParticle</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bMinOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>bParticle</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bMaxOccurs</name> =
                            <init>
                                <expr>
                                    <name><name>bParticle</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>bSGHandler</name>
                                != <name>null</name> &amp;&amp; <name>bType</name> ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>XSElementDecl</name>
                                        </type>
                                        <name>bElement</name> =
                                        <init>
                                            <expr>(<name>XSElementDecl</name>)
                                                <name><name>bParticle</name>.
                                                    <name>fValue</name>
                                                </name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>bElement</name>.
                                                <name>fScope</name>
                                            </name>
                                            ==
                                            <name><name>XSConstants</name>.
                                                <name>SCOPE_GLOBAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <comment type="line">// Check for subsitution groups. Treat any element that
                                                has a
                                            </comment>
                                            <comment type="line">// subsitution group as a choice. Fill in the children
                                                vector with the
                                            </comment>
                                            <comment type="line">// members of the substitution group</comment>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>XSElementDecl</name>
                                                        <index>[]</index>
                                                    </type>
                                                    <name>bsubGroup</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>bSGHandler</name>.
                                                                    <name>getSubstitutionGroup</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bElement</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>bsubGroup</name>.
                                                            <name>length</name>
                                                        </name>
                                                        &gt;0
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <comment type="line">// Now, set the type to be CHOICE</comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>bType</name>
                                                                =
                                                                <name><name>XSModelGroupImpl</name>.
                                                                    <name>MODELGROUP_CHOICE</name>
                                                                </name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>

                                                        <expr_stmt>
                                                            <expr>
                                                                <name>bChildren</name>
                                                                = new
                                                                <call>
                                                                    <name>Vector</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>bsubGroup</name>.
                                                                                    <name>length</name>
                                                                                </name>
                                                                                +1
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <for>for (
                                                            <init>
                                                                <decl>
                                                                    <type>
                                                                        <name>int</name>
                                                                    </type>
                                                                    <name>i</name> =
                                                                    <init>
                                                                        <expr>0</expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </init>
                                                            <condition>
                                                                <expr>
                                                                    <name>i</name>
                                                                    &lt;
                                                                    <name><name>bsubGroup</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </condition>
                                                            <incr>
                                                                <expr><name>i</name>++
                                                                </expr>
                                                            </incr>
                                                            )
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name>addElementToParticleVector</name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>bChildren</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>
                                                                                            <name>bsubGroup</name>
                                                                                            <index>[
                                                                                                <expr>
                                                                                                    <name>i</name>
                                                                                                </expr>
                                                                                                ]
                                                                                            </index>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </for>
                                                        <expr_stmt>
                                                            <expr>
                                                                <call>
                                                                    <name>addElementToParticleVector</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>bChildren</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>bElement</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <comment type="line">// Set the handler to null, to indicate
                                                            that we've finished handling
                                                        </comment>
                                                        <comment type="line">// substitution groups for this particle.
                                                        </comment>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>bSGHandler</name>
                                                                =
                                                                <name>null</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// O.K. - Figure out which particle derivation rule applies and call it
                    </comment>
                    <comment type="line">//</comment>
                    <switch>switch
                        <condition>(
                            <expr>
                                <name>dType</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <case>case
                                <expr>
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_ELEMENT</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>bType</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <comment type="line">// Elt:Elt NameAndTypeOK</comment>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNameAndTypeOK</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>XSElementDecl</name>)
                                                                            <name><name>dParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>XSElementDecl</name>)
                                                                            <name><name>bParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                                <comment type="line">// Elt:Any NSCompat</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNSCompat</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>XSElementDecl</name>)
                                                                            <name><name>dParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>XSWildcardDecl</name>)
                                                                            <name><name>bParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>checkWCOccurrence</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                                <comment type="line">// Elt:All RecurseAsIfGroup</comment>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_CHOICE</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <comment type="line">// Treat the element as if it were in a group
                                                        of the same type
                                                    </comment>
                                                    <comment type="line">// as the base Particle</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>dChildren</name>
                                                            = new
                                                            <call>
                                                                <name>Vector</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>dChildren</name>.
                                                                    <name>addElement</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dParticle</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurseLax</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_ALL</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <comment type="line">// Treat the element as if it were in a group
                                                        of the same type
                                                    </comment>
                                                    <comment type="line">// as the base Particle</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>dChildren</name>
                                                            = new
                                                            <call>
                                                                <name>Vector</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>dChildren</name>.
                                                                    <name>addElement</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dParticle</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurse</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>1</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <default>default:
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Internal-Error"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"in
                                                                                particleValidRestriction"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XSParticleDecl</name>.
                                        <name>PARTICLE_WILDCARD</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>bType</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <comment type="line">// Any:Any NSSubset</comment>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNSSubset</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>XSWildcardDecl</name>)
                                                                            <name><name>dParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>XSWildcardDecl</name>)
                                                                            <name><name>bParticle</name>.
                                                                                <name>fValue</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_CHOICE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_ALL</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cos-particle-restrict.2"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>
                                                                                "any:choice,sequence,all,elt"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>

                                            </case>
                                            <default>default:
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Internal-Error"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"in
                                                                                particleValidRestriction"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XSModelGroupImpl</name>.
                                        <name>MODELGROUP_ALL</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>bType</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <comment type="line">// All:Any NSRecurseCheckCardinality</comment>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMinEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMinEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>minEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMaxEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMaxEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>maxEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNSRecurseCheckCardinality</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bParticle</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>checkWCOccurrence</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>

                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_ALL</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurse</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_CHOICE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cos-particle-restrict.2"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>
                                                                                "all:choice,sequence,elt"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>

                                            </case>
                                            <default>default:
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Internal-Error"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"in
                                                                                particleValidRestriction"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>

                            </case>
                            <case>case
                                <expr>
                                    <name><name>XSModelGroupImpl</name>.
                                        <name>MODELGROUP_CHOICE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>bType</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <comment type="line">// Choice:Any NSRecurseCheckCardinality</comment>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMinEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMinEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>minEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMaxEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMaxEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>maxEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNSRecurseCheckCardinality</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bParticle</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>checkWCOccurrence</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_CHOICE</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurseLax</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_ALL</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                :
                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cos-particle-restrict.2"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>
                                                                                "choice:all,sequence,elt"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>

                                            </case>
                                            <default>default:
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Internal-Error"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"in
                                                                                particleValidRestriction"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>


                            </case>
                            <case>case
                                <expr>
                                    <name><name>XSModelGroupImpl</name>.
                                        <name>MODELGROUP_SEQUENCE</name>
                                    </name>
                                </expr>
                                :
                                <block>{
                                    <switch>switch
                                        <condition>(
                                            <expr>
                                                <name>bType</name>
                                            </expr>
                                            )
                                        </condition>
                                        <block>{

                                            <comment type="line">// Choice:Any NSRecurseCheckCardinality</comment>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMinEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMinEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>minEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>dMaxEffectiveTotalRange</name>
                                                                ==
                                                                <name>OCCURRENCE_UNKNOWN</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>dMaxEffectiveTotalRange</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>dParticle</name>.
                                                                            <name>maxEffectiveTotalRange</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                        </then>
                                                    </if>

                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkNSRecurseCheckCardinality</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxEffectiveTotalRange</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bParticle</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>checkWCOccurrence</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_ALL</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurseUnordered</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_SEQUENCE</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkRecurse</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSModelGroupImpl</name>.
                                                        <name>MODELGROUP_CHOICE</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>min1</name> =
                                                            <init>
                                                                <expr>
                                                                    <name>dMinOccurs</name>
                                                                    *
                                                                    <call>
                                                                        <name><name>dChildren</name>.
                                                                            <name>size</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>int</name>
                                                            </type>
                                                            <name>max1</name> =
                                                            <init>
                                                                <expr>(<name>dMaxOccurs</name> ==
                                                                    <name><name>SchemaSymbols</name>.
                                                                        <name>OCCURRENCE_UNBOUNDED</name>
                                                                    </name>
                                                                    )?
                                                                    <name>dMaxOccurs</name>
                                                                    : <name>dMaxOccurs</name> *
                                                                    <call>
                                                                        <name><name>dChildren</name>.
                                                                            <name>size</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name>checkMapAndSum</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>min1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>max1</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bChildren</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMinOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bMaxOccurs</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>bSGHandler</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <return>return;</return>
                                                    }
                                                </block>

                                            </case>
                                            <case>case
                                                <expr>
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_ELEMENT</name>
                                                    </name>
                                                </expr>
                                                :
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"cos-particle-restrict.2"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"seq:elt"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>

                                            </case>
                                            <default>default:
                                                <block>{
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"Internal-Error"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>Object</name>
                                                                                <index>[]</index>
                                                                            </name>
                                                                            <block>{<expr>"in
                                                                                particleValidRestriction"</expr>}
                                                                            </block>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                    }
                                                </block>
                                            </default>
                                            }
                                        </block>
                                    </switch>
                                    }
                                </block>

                            </case>
                            }
                        </block>
                    </switch>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>addElementToParticleVector</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>v</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>d</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSParticleDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>p</name>.
                                <name>fValue</name>
                            </name>
                            =
                            <name>d</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>p</name>.
                                <name>fType</name>
                            </name>
                            =
                            <name><name>XSParticleDecl</name>.
                                <name>PARTICLE_ELEMENT</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>v</name>.
                                    <name>addElement</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSParticleDecl</name>
                </type>
                <name>getNonUnaryGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>p</name>.
                                    <name>fType</name>
                                </name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                                ||
                                <name><name>p</name>.
                                    <name>fType</name>
                                </name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_WILDCARD</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>p</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>p</name>.
                                    <name>fMinOccurs</name>
                                </name>
                                ==1 &amp;&amp;
                                <name><name>p</name>.
                                    <name>fMaxOccurs</name>
                                </name>
                                ==1 &amp;&amp;
                                <name><name>p</name>.
                                    <name>fValue</name>
                                </name>
                                !=<name>null</name> &amp;&amp; ((<name>XSModelGroupImpl</name>)
                                <name><name>p</name>.
                                    <name>fValue</name>
                                </name>
                                ).<name>fParticleCount</name> == 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name>getNonUnaryGroup</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>((<name>XSModelGroupImpl</name>)
                                                    <name><name>p</name>.
                                                        <name>fValue</name>
                                                    </name>
                                                    ).
                                                    <name>
                                                        <name>fParticles</name>
                                                        <index>[<expr>0</expr>]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <return>return
                                <expr>
                                    <name>p</name>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>Vector</name>
                </type>
                <name>removePointlessChildren</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{


                    <if>if
                        <condition>(
                            <expr>
                                <name><name>p</name>.
                                    <name>fType</name>
                                </name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                                ||
                                <name><name>p</name>.
                                    <name>fType</name>
                                </name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_WILDCARD</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>children</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSModelGroupImpl</name>
                            </type>
                            <name>group</name> =
                            <init>
                                <expr>(<name>XSModelGroupImpl</name>)
                                    <name><name>p</name>.
                                        <name>fValue</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>group</name>.
                                    <name>fParticleCount</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <expr_stmt>
                            <expr>
                                <call>
                                    <name>gatherChildren</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>group</name>.
                                                    <name>fCompositor</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>group</name>.
                                                    <name>fParticles</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>children</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            ;
                        </expr_stmt>
                    </for>

                    <return>return
                        <expr>
                            <name>children</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>gatherChildren</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>parentType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>p</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>children</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min</name> =
                            <init>
                                <expr>
                                    <name><name>p</name>.
                                        <name>fMinOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max</name> =
                            <init>
                                <expr>
                                    <name><name>p</name>.
                                        <name>fMaxOccurs</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>type</name> =
                            <init>
                                <expr>
                                    <name><name>p</name>.
                                        <name>fType</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_MODELGROUP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>type</name>
                                    = ((<name>XSModelGroupImpl</name>)
                                    <name><name>p</name>.
                                        <name>fValue</name>
                                    </name>
                                    ).
                                    <name>fCompositor</name>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>type</name>
                                ==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_ELEMENT</name>
                                </name>
                                ||
                                <name>type</name>==
                                <name><name>XSParticleDecl</name>.
                                    <name>PARTICLE_WILDCARD</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>children</name>.
                                                <name>addElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>! (<name>min</name>==1 &amp;&amp; <name>max</name>==1)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>children</name>.
                                                <name>addElement</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>p</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>parentType</name>
                                        ==
                                        <name>type</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSModelGroupImpl</name>
                                                </type>
                                                <name>group</name> =
                                                <init>
                                                    <expr>(<name>XSModelGroupImpl</name>)
                                                        <name><name>p</name>.
                                                            <name>fValue</name>
                                                        </name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>i</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>i</name>
                                                    &lt;
                                                    <name><name>group</name>.
                                                        <name>fParticleCount</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>i</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>gatherChildren</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>type</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>group</name>.
                                                                        <name>fParticles</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>children</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                        </for>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>!
                                                <call>
                                                    <name><name>p</name>.
                                                        <name>isEmpty</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <call>
                                                            <name><name>children</name>.
                                                                <name>addElement</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>p</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkNameAndTypeOK</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>dElement</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMin</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>dMax</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>bElement</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bMin</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>bMax</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">//</comment>
                    <comment type="line">// Check that the names are the same</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>dElement</name>.
                                    <name>fName</name>
                                </name>
                                !=
                                <name><name>bElement</name>.
                                    <name>fName</name>
                                </name>
                                ||
                                <name><name>dElement</name>.
                                    <name>fTargetNamespace</name>
                                </name>
                                !=
                                <name><name>bElement</name>.
                                    <name>fTargetNamespace</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NameAndTypeOK.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>dElement</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name><name>dElement</name>.
                                                                    <name>fTargetNamespace</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name><name>bElement</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name><name>bElement</name>.
                                                                    <name>fTargetNamespace</name>
                                                                </name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Check nillable</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>bElement</name>.
                                        <name>getNillable</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &amp;&amp;
                                <call>
                                    <name><name>dElement</name>.
                                        <name>getNillable</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NameAndTypeOK.2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>dElement</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Check occurrence range</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>dMin</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>dMax</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>bMin</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>bMax</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NameAndTypeOK.3"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>dElement</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>dMin</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>dMax</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>dMax</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>bMin</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>bMax</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>bMax</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Check for consistent fixed values</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>bElement</name>.
                                        <name>getConstraintType</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                ==
                                <name><name>XSConstants</name>.
                                    <name>VC_FIXED</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// derived one has to have a fixed value</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>dElement</name>.
                                                    <name>getConstraintType</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            !=
                                            <name><name>XSConstants</name>.
                                                <name>VC_FIXED</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLSchemaException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"rcase-NameAndTypeOK.4.a"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>dElement</name>.
                                                                                <name>fName</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>bElement</name>.<name>
                                                                                    fDefault</name>.
                                                                                    <name>stringValue</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// get simple type</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>boolean</name>
                                        </type>
                                        <name>isSimple</name> =
                                        <init>
                                            <expr>false</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>dElement</name>.<name>fType</name>.
                                                    <name>getTypeCategory</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>SIMPLE_TYPE</name>
                                            </name>
                                            ||
                                            ((<name>XSComplexTypeDecl</name>)
                                            <name><name>dElement</name>.
                                                <name>fType</name>
                                            </name>
                                            ).<name>fContentType</name> ==
                                            <name><name>XSComplexTypeDecl</name>.
                                                <name>CONTENTTYPE_SIMPLE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>isSimple</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <comment type="line">// if there is no simple type, then compare based on string
                                </comment>
                                <if>if
                                    <condition>(
                                        <expr>!<name>isSimple</name> &amp;&amp; !
                                            <call>
                                                <name><name>bElement</name>.<name>fDefault</name>.<name>
                                                    normalizedValue</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>dElement</name>.<name>fDefault</name>.
                                                                <name>normalizedValue</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            ||
                                            <name>isSimple</name>
                                            &amp;&amp; !
                                            <call>
                                                <name><name>bElement</name>.<name>fDefault</name>.<name>
                                                    actualValue</name>.
                                                    <name>equals</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>dElement</name>.<name>fDefault</name>.
                                                                <name>actualValue</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>XMLSchemaException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"rcase-NameAndTypeOK.4.b"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{
                                                                        <expr>
                                                                            <name><name>dElement</name>.
                                                                                <name>fName</name>
                                                                            </name>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dElement</name>.<name>
                                                                                    fDefault</name>.
                                                                                    <name>stringValue</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>bElement</name>.<name>
                                                                                    fDefault</name>.
                                                                                    <name>stringValue</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">//</comment>
                    <comment type="line">// Check identity constraints</comment>
                    <comment type="line">//</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>checkIDConstraintRestriction</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dElement</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>bElement</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//</comment>
                    <comment type="line">// Check for disallowed substitutions</comment>
                    <comment type="line">//</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>blockSet1</name> =
                            <init>
                                <expr>
                                    <name><name>dElement</name>.
                                        <name>fBlock</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>blockSet2</name> =
                            <init>
                                <expr>
                                    <name><name>bElement</name>.
                                        <name>fBlock</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>((<name>blockSet1</name> &amp; <name>blockSet2</name>)!=<name>blockSet2</name>) ||
                                (<name>blockSet1</name>==
                                <name><name>XSConstants</name>.
                                    <name>DERIVATION_NONE</name>
                                </name>
                                &amp;&amp; <name>blockSet2</name>!=
                                <name><name>XSConstants</name>.
                                    <name>DERIVATION_NONE</name>
                                </name>
                                )
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XMLSchemaException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"rcase-NameAndTypeOK.6"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name><name>dElement</name>.
                                                                <name>fName</name>
                                                            </name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>


                    <comment type="line">//</comment>
                    <comment type="line">// Check that the derived element's type is derived from the base's.</comment>
                    <comment type="line">//</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkTypeDerivationOk</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>dElement</name>.
                                                    <name>fType</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>bElement</name>.
                                                    <name>fType</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <call>(<name>short</name>)
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>XSConstants</name>.
                                                                    <name>DERIVATION_EXTENSION</name>
                                                                </name>
                                                                |
                                                                <name><name>XSConstants</name>.
                                                                    <name>DERIVATION_LIST</name>
                                                                </name>
                                                                |
                                                                <name><name>XSConstants</name>.
                                                                    <name>DERIVATION_UNION</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NameAndTypeOK.7"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>dElement</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>dElement</name>.<name>fType</name>.
                                                                        <name>getName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>bElement</name>.<name>fType</name>.
                                                                        <name>getName</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkIDConstraintRestriction</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>derivedElemDecl</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>baseElemDecl</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <comment type="line">// TODO</comment>
                    }
                </block>
            </function>
            <comment type="line">// checkIDConstraintRestriction</comment>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>checkOccurrenceRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>(<name>min1</name> &gt;= <name>min2</name>) &amp;&amp;
                                ((<name>max2</name>==
                                <name><name>SchemaSymbols</name>.
                                    <name>OCCURRENCE_UNBOUNDED</name>
                                </name>
                                ) ||
                                (<name>max1</name>!=
                                <name><name>SchemaSymbols</name>.
                                    <name>OCCURRENCE_UNBOUNDED</name>
                                </name>
                                &amp;&amp; <name>max1</name>&lt;=<name>max2</name>))
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                        <else>else
                            <return>return <expr>false</expr>;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkNSCompat</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>elem</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>checkWCOccurrence</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>checkWCOccurrence</name>
                                &amp;&amp; !
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSCompat.2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>elem</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check wildcard allows namespace of element</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>wildcard</name>.
                                        <name>allowNamespace</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>elem</name>.
                                                    <name>fTargetNamespace</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSCompat.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <name><name>elem</name>.
                                                                    <name>fName</name>
                                                                </name>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <name><name>elem</name>.
                                                                    <name>fTargetNamespace</name>
                                                                </name>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkNSSubset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>dWildcard</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>bWildcard</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSSubset.2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check wildcard subset</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>dWildcard</name>.
                                        <name>isSubsetOf</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>bWildcard</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSSubset.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>dWildcard</name>.
                                        <name>weakerProcessContents</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>bWildcard</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSSubset.3"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>dWildcard</name>.
                                                                        <name>getProcessContentsAsString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>bWildcard</name>.
                                                                        <name>getProcessContentsAsString</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkNSRecurseCheckCardinality</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>children</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>wildcard</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>checkWCOccurrence</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>checkWCOccurrence</name>
                                &amp;&amp; !
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSRecurseCheckCardinality.2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// Check that each member of the group is a valid restriction of the wildcard
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>children</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>i</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>i</name>
                                        &lt;
                                        <name>count</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>i</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSParticleDecl</name>
                                            </type>
                                            <name>particle1</name> =
                                            <init>
                                                <expr>(<name>XSParticleDecl</name>)
                                                    <call>
                                                        <name><name>children</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <call>
                                                <name>particleValidRestriction</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>particle1</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>dSGHandler</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>wildcard</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>null</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>false</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>

                                    }
                                </block>
                            </for>
                            }
                        </block>
                        <comment type="line">// REVISIT: should we really just ignore original cause of this error?
                        </comment>
                        <comment type="line">// how can we report it?</comment>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>XMLSchemaException</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-NSRecurseCheckCardinality.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </catch>
                    </try>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkRecurse</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>dChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>bChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-Recurse.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count1</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>dChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count2</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>current</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <label><name>label</name>:
                    </label>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>count1</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle1</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>dChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>
                                                <name>current</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>j</name>&lt;
                                        <name>count2</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSParticleDecl</name>
                                            </type>
                                            <name>particle2</name> =
                                            <init>
                                                <expr>(<name>XSParticleDecl</name>)
                                                    <call>
                                                        <name><name>bChildren</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>current</name>
                                            +=1
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>particleValidRestriction</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>particle1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>dSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>particle2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>bSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <continue>continue label;</continue>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>XMLSchemaException</name>
                                                    </type>
                                                    <name>e</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>!
                                                            <call>
                                                                <name><name>particle2</name>.
                                                                    <name>emptiable</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <throw>throw
                                                            <expr>new
                                                                <call>
                                                                    <name>XMLSchemaException</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>"rcase-Recurse.2"</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </throw>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </for>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XMLSchemaException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"rcase-Recurse.2"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </for>

                    <comment type="line">// Now, see if there are some elements in the base we didn't match up</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>j</name>=
                                <init>
                                    <expr>
                                        <name>current</name>
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>j</name>
                                &lt;
                                <name>count2</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>j</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle2</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>bChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>particle2</name>.
                                                <name>emptiable</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>XMLSchemaException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"rcase-Recurse.2"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkRecurseUnordered</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>dChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>bChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{


                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-RecurseUnordered.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count1</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>dChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>
                                <name>foundIt</name>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>boolean</name>
                                        <index>[
                                            <expr>
                                                <name>count2</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <label><name>label</name>:
                    </label>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>count1</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle1</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>dChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>j</name>&lt;
                                        <name>count2</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSParticleDecl</name>
                                            </type>
                                            <name>particle2</name> =
                                            <init>
                                                <expr>(<name>XSParticleDecl</name>)
                                                    <call>
                                                        <name><name>bChildren</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>particleValidRestriction</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>particle1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>dSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>particle2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>bSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>
                                                            <name>foundIt</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <throw>throw
                                                        <expr>new
                                                            <call>
                                                                <name>XMLSchemaException</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"rcase-RecurseUnordered.2"</expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>null</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </throw>
                                                </then>
                                                <else>else
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>foundIt</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =true
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                </else>
                                            </if>

                                            <continue>continue label;</continue>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>XMLSchemaException</name>
                                                    </type>
                                                    <name>e</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </for>
                            <comment type="line">// didn't find a match. Detect an error</comment>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XMLSchemaException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"rcase-RecurseUnordered.2"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </for>

                    <comment type="line">// Now, see if there are some elements in the base we didn't match up</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>j</name>=
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>j</name>
                                &lt;
                                <name>count2</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>j</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle2</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>bChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <name>
                                            <name>foundIt</name>
                                            <index>[
                                                <expr>
                                                    <name>j</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        &amp;&amp; !
                                        <call>
                                            <name><name>particle2</name>.
                                                <name>emptiable</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>XMLSchemaException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"rcase-RecurseUnordered.2"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>null</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkRecurseLax</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>dChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>bChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-RecurseLax.1"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count1</name>=
                            <init>
                                <expr>
                                    <call>
                                        <name><name>dChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>current</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <label><name>label</name>:
                    </label>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>count1</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle1</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>dChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>
                                                <name>current</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>j</name>&lt;
                                        <name>count2</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSParticleDecl</name>
                                            </type>
                                            <name>particle2</name> =
                                            <init>
                                                <expr>(<name>XSParticleDecl</name>)
                                                    <call>
                                                        <name><name>bChildren</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <expr_stmt>
                                        <expr>
                                            <name>current</name>
                                            +=1
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>particleValidRestriction</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>particle1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>dSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>particle2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>bSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <continue>continue label;</continue>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>XMLSchemaException</name>
                                                    </type>
                                                    <name>e</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </for>
                            <comment type="line">// didn't find a match. Detect an error</comment>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XMLSchemaException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"rcase-RecurseLax.2"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>

                            }
                        </block>
                    </for>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>void</name>
                </type>
                <name>checkMapAndSum</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>dChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>dSGHandler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>bChildren</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>min2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>max2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>bSGHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>XMLSchemaException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <comment type="line">// See if the sequence group is a valid restriction of the choice</comment>

                    <comment type="line">// Here is an example of a valid restriction:</comment>
                    <comment type="line">// &lt;choice minOccurs="2"&gt;</comment>
                    <comment type="line">// &lt;a/&gt;</comment>
                    <comment type="line">// &lt;b/&gt;</comment>
                    <comment type="line">// &lt;c/&gt;</comment>
                    <comment type="line">// &lt;/choice&gt;</comment>
                    <comment type="line">//</comment>
                    <comment type="line">// &lt;sequence&gt;</comment>
                    <comment type="line">// &lt;b/&gt;</comment>
                    <comment type="line">// &lt;a/&gt;</comment>
                    <comment type="line">// &lt;/sequence&gt;</comment>

                    <comment type="line">// check Occurrence ranges</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>checkOccurrenceRange</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>min1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max1</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>min2</name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name>max2</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>XMLSchemaException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"rcase-MapAndSum.2"</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <name>
                                                            <name>Object</name>
                                                            <index>[]</index>
                                                        </name>
                                                        <block>{
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max1</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max1</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr>
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>min2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ,
                                                            <expr><name>max2</name>==
                                                                <name><name>SchemaSymbols</name>.
                                                                    <name>OCCURRENCE_UNBOUNDED</name>
                                                                </name>
                                                                ?"unbounded":
                                                                <call>
                                                                    <name><name>Integer</name>.
                                                                        <name>toString</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>max2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            }
                                                        </block>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>dChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>bChildren</name>.
                                            <name>size</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <label><name>label</name>:
                    </label>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr><name>i</name>&lt;
                                <name>count1</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>XSParticleDecl</name>
                                    </type>
                                    <name>particle1</name> =
                                    <init>
                                        <expr>(<name>XSParticleDecl</name>)
                                            <call>
                                                <name><name>dChildren</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr><name>j</name>&lt;
                                        <name>count2</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <decl_stmt>
                                        <decl>
                                            <type>
                                                <name>XSParticleDecl</name>
                                            </type>
                                            <name>particle2</name> =
                                            <init>
                                                <expr>(<name>XSParticleDecl</name>)
                                                    <call>
                                                        <name><name>bChildren</name>.
                                                            <name>elementAt</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </init>
                                        </decl>
                                        ;
                                    </decl_stmt>
                                    <try>try
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>particleValidRestriction</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>particle1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>dSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>particle2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>bSGHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <continue>continue label;</continue>
                                            }
                                        </block>
                                        <catch>catch (
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>XMLSchemaException</name>
                                                    </type>
                                                    <name>e</name>
                                                </decl>
                                            </param>
                                            )
                                            <block>{
                                                }
                                            </block>
                                        </catch>
                                    </try>
                                    }
                                </block>
                            </for>
                            <comment type="line">// didn't find a match. Detect an error</comment>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>XMLSchemaException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"rcase-MapAndSum.1"</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>
            <comment type="line">// to check whether two element overlap, as defined in constraint UPA</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>overlapUPA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>element1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>element2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>sgHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if the two element have the same name and namespace,</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>element1</name>.
                                    <name>fName</name>
                                </name>
                                ==
                                <name><name>element2</name>.
                                    <name>fName</name>
                                </name>
                                &amp;&amp;
                                <name><name>element1</name>.
                                    <name>fTargetNamespace</name>
                                </name>
                                ==
                                <name><name>element2</name>.
                                    <name>fTargetNamespace</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// or if there is an element decl in element1's substitution group,</comment>
                    <comment type="line">// who has the same name/namespace with element2</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                                <index>[]</index>
                            </type>
                            <name>subGroup</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>sgHandler</name>.
                                            <name>getSubstitutionGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>subGroup</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>subGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .<name>fName</name> ==
                                        <name><name>element2</name>.
                                            <name>fName</name>
                                        </name>
                                        &amp;&amp;
                                        <name>
                                            <name>subGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .<name>fTargetNamespace</name> ==
                                        <name><name>element2</name>.
                                            <name>fTargetNamespace</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <comment type="line">// or if there is an element decl in element2's substitution group,</comment>
                    <comment type="line">// who has the same name/namespace with element1</comment>
                    <expr_stmt>
                        <expr>
                            <name>subGroup</name>
                            =
                            <call>
                                <name><name>sgHandler</name>.
                                    <name>getSubstitutionGroup</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>element2</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>subGroup</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>subGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .<name>fName</name> ==
                                        <name><name>element1</name>.
                                            <name>fName</name>
                                        </name>
                                        &amp;&amp;
                                        <name>
                                            <name>subGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .<name>fTargetNamespace</name> ==
                                        <name><name>element1</name>.
                                            <name>fTargetNamespace</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// to check whether an element overlaps with a wildcard,</comment>
            <comment type="line">// as defined in constraint UPA</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>overlapUPA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>element</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>sgHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if the wildcard allows the element</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>wildcard</name>.
                                        <name>allowNamespace</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>element</name>.
                                                    <name>fTargetNamespace</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>true</expr>;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// or if the wildcard allows any element in the substitution group</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                                <index>[]</index>
                            </type>
                            <name>subGroup</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>sgHandler</name>.
                                            <name>getSubstitutionGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>element</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>subGroup</name>.
                                            <name>length</name>
                                        </name>
                                        -1
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>--
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>wildcard</name>.
                                                <name>allowNamespace</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>
                                                            <name>subGroup</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <name>fTargetNamespace</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <return>return <expr>true</expr>;
                                    </return>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>overlapUPA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard2</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// if the intersection of the two wildcard is not empty list</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>intersect</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>wildcard1</name>.
                                            <name>performIntersectionWith</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>wildcard2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>wildcard1</name>.
                                                        <name>fProcessContents</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>intersect</name>
                                == <name>null</name> ||
                                <name><name>intersect</name>.
                                    <name>fType</name>
                                </name>
                                !=
                                <name><name>XSWildcardDecl</name>.
                                    <name>NSCONSTRAINT_LIST</name>
                                </name>
                                ||
                                <name><name>intersect</name>.<name>fNamespaceList</name>.
                                    <name>length</name>
                                </name>
                                != 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return <expr>false</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// call one of the above methods according to the type of decls</comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>boolean</name>
                </type>
                <name>overlapUPA</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>decl1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>decl2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>sgHandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>decl1</name>
                                <name>instanceof</name>
                                <name>XSElementDecl</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>decl2</name>
                                            <name>instanceof</name>
                                            <name>XSElementDecl</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name>overlapUPA</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XSElementDecl</name>)
                                                                    <name>decl1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>XSElementDecl</name>)
                                                                    <name>decl2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sgHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name>overlapUPA</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XSElementDecl</name>)
                                                                    <name>decl1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>XSWildcardDecl</name>)
                                                                    <name>decl2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sgHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>decl2</name>
                                            <name>instanceof</name>
                                            <name>XSElementDecl</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name>overlapUPA</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XSElementDecl</name>)
                                                                    <name>decl2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>XSWildcardDecl</name>)
                                                                    <name>decl1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>sgHandler</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name>overlapUPA</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>XSWildcardDecl</name>)
                                                                    <name>decl1</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>XSWildcardDecl</name>)
                                                                    <name>decl2</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XSContraints</comment>
</unit>
