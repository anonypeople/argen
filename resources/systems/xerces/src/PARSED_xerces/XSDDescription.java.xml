<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\XSDDescription.java">
    <comment type="block">/*
        * Copyright 2002, 2003,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLResourceIdentifierImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>XMLAttributes</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLGrammarDescription</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.<name>grammars</name>.
            <name>XMLSchemaDescription</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * All information specific to XML Schema grammars.
        *
        * @xerces.internal
        *
        * @author Neil Graham, IBM
        * @author Neeraj Bajaj, SUN Microsystems.
        *
        * @version $Id: XSDDescription.java,v 1.13 2004/10/14 03:49:32 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XSDDescription</name>
        <super>
            <extends>extends
                <name>XMLResourceIdentifierImpl</name>
            </extends>
            <implements>implements
                <name>XMLSchemaDescription</name>
            </implements>
        </super>
        <block>{
            <comment type="line">// used to indicate what triggered the call</comment>
            <comment type="javadoc">/**
                * Indicate that this description was just initialized.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_INITIALIZE</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &lt;include&gt;d by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_INCLUDE</name>   =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &lt;redefine&gt;d by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_REDEFINE</name>  =
                    <init>
                        <expr>1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is &lt;import&gt;ed by another
                * schema document.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_IMPORT</name>    =
                    <init>
                        <expr>2</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the current schema document is being preparsed.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_PREPARSE</name>  =
                    <init>
                        <expr>3</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered
                * by xsi:schemaLocation/noNamespaceSchemaLocation attribute(s) in the
                * instance document. This value is only used if we don't defer the loading
                * of schema documents.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_INSTANCE</name>  =
                    <init>
                        <expr>4</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an element whose namespace is the target namespace
                * of this schema document. This value is only used if we do defer the
                * loading of schema documents until a component from that namespace is
                * referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_ELEMENT</name>   =
                    <init>
                        <expr>5</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an attribute whose namespace is the target namespace
                * of this schema document. This value is only used if we do defer the
                * loading of schema documents until a component from that namespace is
                * referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_ATTRIBUTE</name> =
                    <init>
                        <expr>6</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="javadoc">/**
                * Indicate that the parse of the current schema document is triggered by
                * the occurrence of an "xsi:type" attribute, whose value (a QName) has
                * the target namespace of this schema document as its namespace.
                * This value is only used if we do defer the loading of schema documents
                * until a component from that namespace is referenced from the instance.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>final</specifier>
                        <specifier>static</specifier>
                        <name>short</name>
                    </type>
                    <name>CONTEXT_XSITYPE</name>   =
                    <init>
                        <expr>7</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// REVISIT: write description of these fields</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>short</name>
                    </type>
                    <name>fContextType</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>fLocationHints</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>QName</name>
                    </type>
                    <name>fTriggeringComponent</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>QName</name>
                    </type>
                    <name>fEnclosedElementName</name>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>XMLAttributes</name>
                    </type>
                    <name>fAttributes</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * the type of the grammar (e.g., DTD or XSD);
                *
                * @see org.apache.xerces.xni.grammars.Grammar
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getGrammarType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>XMLGrammarDescription</name>.
                                <name>XML_SCHEMA</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Get the context. The returned value is one of the pre-defined
                * CONTEXT_xxx constants.
                *
                * @return the value indicating the context
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>short</name>
                </type>
                <name>getContextType</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fContextType</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If the context is "include" or "redefine", then return the target
                * namespace of the enclosing schema document; otherwise, the expected
                * target namespace of this document.
                *
                * @return the expected/enclosing target namespace
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getTargetNamespace</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fNamespace</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * For import and references from the instance document, it's possible to
                * have multiple hints for one namespace. So this method returns an array,
                * which contains all location hints.
                *
                * @return an array of all location hints associated to the expected
                * target namespace
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                    <index>[]</index>
                </type>
                <name>getLocationHints</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fLocationHints</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If a call is triggered by an element/attribute/xsi:type in the instance,
                * this call returns the name of such triggering component: the name of
                * the element/attribute, or the value of the xsi:type.
                *
                * @return the name of the triggering component
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>getTriggeringComponent</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fTriggeringComponent</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If a call is triggered by an attribute or xsi:type, then this mehtod
                * returns the enclosing element of such element.
                *
                * @return the name of the enclosing element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>QName</name>
                </type>
                <name>getEnclosingElementName</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fEnclosedElementName</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * If a call is triggered by an element/attribute/xsi:type in the instance,
                * this call returns all attribute of such element (or enclosing element).
                *
                * @return all attributes of the tiggering/enclosing element
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XMLAttributes</name>
                </type>
                <name>getAttributes</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fAttributes</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>fromInstance</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fContextType</name>
                            == <name>CONTEXT_ATTRIBUTE</name> ||
                            <name>fContextType</name>
                            == <name>CONTEXT_ELEMENT</name> ||
                            <name>fContextType</name>
                            == <name>CONTEXT_INSTANCE</name> ||
                            <name>fContextType</name>
                            ==
                            <name>CONTEXT_XSITYPE</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Compares this grammar with the given grammar. Currently, we compare
                * the target namespaces.
                *
                * @param descObj The description of the grammar to be compared with
                * @return True if they are equal, else false
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>descObj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!(<name>descObj</name>
                                <name>instanceof</name>
                                <name>XMLSchemaDescription</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return <expr>false</expr>;
                            </return>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XMLSchemaDescription</name>
                            </type>
                            <name>desc</name> =
                            <init>
                                <expr>(<name>XMLSchemaDescription</name>)
                                    <name>descObj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>fNamespace</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>fNamespace</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>desc</name>.
                                                            <name>getTargetNamespace</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                        </then>
                        <else>else
                            <comment type="line">// fNamespace == null</comment>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>desc</name>.
                                            <name>getTargetNamespace</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    ==
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the hash code of this grammar
                *
                * @return The hash code
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>fNamespace</name> == <name>null</name>) ? 0 :
                            <call>
                                <name><name>fNamespace</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setContextType</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>contextType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fContextType</name>
                            =
                            <name>contextType</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTargetNamespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>targetNamespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespace</name>
                            =
                            <name>targetNamespace</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLocationHints</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>locationHints</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <name><name>locationHints</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLocationHints</name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <name>length</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>locationHints</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fLocationHints</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>length</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">//fLocationHints = locationHints ;</comment>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setTriggeringComponent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>triggeringComponent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fTriggeringComponent</name>
                            =
                            <name>triggeringComponent</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setEnclosingElementName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>QName</name>
                            </type>
                            <name>enclosedElementName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fEnclosedElementName</name>
                            =
                            <name>enclosedElementName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAttributes</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XMLAttributes</name>
                            </type>
                            <name>attributes</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fAttributes</name>
                            =
                            <name>attributes</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * resets all the fields
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>clear</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fContextType</name>
                            =
                            <name>CONTEXT_INITIALIZE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLocationHints</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fTriggeringComponent</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fEnclosedElementName</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAttributes</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSDDescription</name>
                </type>
                <name>makeClone</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSDDescription</name>
                            </type>
                            <name>desc</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSDDescription</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fAttributes</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fAttributes</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fBaseSystemId</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fBaseSystemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fContextType</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fContextType</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fEnclosedElementName</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fEnclosedElementName</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fExpandedSystemId</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fExpandedSystemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fLiteralSystemId</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fLiteralSystemId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fLocationHints</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fLocationHints</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fPublicId</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fPublicId</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fNamespace</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fNamespace</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>desc</name>.
                                <name>fTriggeringComponent</name>
                            </name>
                            =
                            <name><name>this</name>.
                                <name>fTriggeringComponent</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>desc</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// XSDDescription</comment>
</unit>
