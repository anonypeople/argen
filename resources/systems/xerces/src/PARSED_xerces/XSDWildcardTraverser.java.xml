<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\traversers\XSDWildcardTraverser.java">
    <comment type="block">/*
        * Copyright 2001-2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>traversers</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaGrammar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>SchemaSymbols</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSAnnotationImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSParticleDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>XSWildcardDecl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XInt</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>DOMUtil</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>w3c</name>.<name>dom</name>.
            <name>Element</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The wildcard schema component traverser.
        *
        * &lt;any
        * id = ID
        * maxOccurs = (nonNegativeInteger | unbounded) : 1
        * minOccurs = nonNegativeInteger : 1
        * namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) ) : ##any
        * processContents = (lax | skip | strict) : strict
        * {any attributes with non-schema namespace . . .}&gt;
        * Content: (annotation?)
        * &lt;/any&gt;
        *
        * &lt;anyAttribute
        * id = ID
        * namespace = ((##any | ##other) | List of (anyURI | (##targetNamespace | ##local)) ) : ##any
        * processContents = (lax | skip | strict) : strict
        * {any attributes with non-schema namespace . . .}&gt;
        * Content: (annotation?)
        * &lt;/anyAttribute&gt;
        *
        * @xerces.internal
        *
        * @author Rahul Srivastava, Sun Microsystems Inc.
        * @author Sandy Gao, IBM
        *
        * @version $Id: XSDWildcardTraverser.java,v 1.15 2004/12/20 05:43:36 mrglavas Exp $
        */
    </comment>
    <class>class <name>XSDWildcardTraverser</name>
        <super>
            <extends>extends
                <name>XSDAbstractTraverser</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * constructor
                *
                * @param handler
                * @param errorReporter
                * @param gAttrCheck
                */
            </comment>
            <constructor>
                <name>XSDWildcardTraverser</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSDHandler</name>
                            </type>
                            <name>handler</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSAttributeChecker</name>
                            </type>
                            <name>gAttrCheck</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>handler</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>gAttrCheck</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>


            <comment type="javadoc">/**
                * Traverse &lt;any&gt;
                *
                * @param elmNode
                * @param schemaDoc
                * @param grammar
                * @return the wildcard node index
                */
            </comment>
            <function>
                <type>
                    <name>XSParticleDecl</name>
                </type>
                <name>traverseAny</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elmNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// General Attribute Checking for elmNode</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>attrValues</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fAttrChecker</name>.
                                            <name>checkAttributes</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elmNode</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>schemaDoc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>traverseWildcardDecl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elmNode</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>attrValues</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>schemaDoc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>grammar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="line">// for &lt;any&gt;, need to create a new particle to reflect the min/max
                        values
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>particle</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>wildcard</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>min</name> =
                                        <init>
                                            <expr>((<name>XInt</name>)
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>XSAttributeChecker</name>.
                                                                <name>ATTIDX_MINOCCURS</name>
                                                            </name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>max</name> =
                                        <init>
                                            <expr>((<name>XInt</name>)
                                                <name>
                                                    <name>attrValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name><name>XSAttributeChecker</name>.
                                                                <name>ATTIDX_MAXOCCURS</name>
                                                            </name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>intValue</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>max</name>
                                            != 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name><name>fSchemaHandler</name>.
                                                            <name>fDeclPool</name>
                                                        </name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>particle</name>
                                                                =
                                                                <call>
                                                                    <name><name>fSchemaHandler</name>.<name>
                                                                        fDeclPool</name>.
                                                                        <name>getParticleDecl</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>particle</name>
                                                                = new
                                                                <call>
                                                                    <name>XSParticleDecl</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </else>
                                            </if>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>particle</name>.
                                                        <name>fType</name>
                                                    </name>
                                                    =
                                                    <name><name>XSParticleDecl</name>.
                                                        <name>PARTICLE_WILDCARD</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>particle</name>.
                                                        <name>fValue</name>
                                                    </name>
                                                    =
                                                    <name>wildcard</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>particle</name>.
                                                        <name>fMinOccurs</name>
                                                    </name>
                                                    =
                                                    <name>min</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>particle</name>.
                                                        <name>fMaxOccurs</name>
                                                    </name>
                                                    =
                                                    <name>max</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fAttrChecker</name>.
                                    <name>returnAttrArray</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attrValues</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>schemaDoc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>particle</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Traverse &lt;anyAttribute&gt;
                *
                * @param elmNode
                * @param schemaDoc
                * @param grammar
                * @return the wildcard node index
                */
            </comment>
            <function>
                <type>
                    <name>XSWildcardDecl</name>
                </type>
                <name>traverseAnyAttribute</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elmNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// General Attribute Checking for elmNode</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>attrValues</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>fAttrChecker</name>.
                                            <name>checkAttributes</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elmNode</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>false</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>schemaDoc</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>traverseWildcardDecl</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elmNode</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>attrValues</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>schemaDoc</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>grammar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>fAttrChecker</name>.
                                    <name>returnAttrArray</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>attrValues</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>schemaDoc</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>wildcard</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                *
                * @param elmNode
                * @param attrValues
                * @param schemaDoc
                * @param grammar
                * @return the wildcard node index
                */
            </comment>
            <function>
                <type>
                    <name>XSWildcardDecl</name>
                </type>
                <name>traverseWildcardDecl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>elmNode</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>attrValues</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XSDocumentInfo</name>
                            </type>
                            <name>schemaDoc</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>grammar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">//get all attributes</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSWildcardDecl</name>
                            </type>
                            <name>wildcard</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>XSWildcardDecl</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// namespace type</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XInt</name>
                            </type>
                            <name>namespaceTypeAttr</name> =
                            <init>
                                <expr>(<name>XInt</name>)
                                    <name>
                                        <name>attrValues</name>
                                        <index>[
                                            <expr>
                                                <name><name>XSAttributeChecker</name>.
                                                    <name>ATTIDX_NAMESPACE</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>wildcard</name>.
                                <name>fType</name>
                            </name>
                            =
                            <call>
                                <name><name>namespaceTypeAttr</name>.
                                    <name>shortValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// namespace list</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>wildcard</name>.
                                <name>fNamespaceList</name>
                            </name>
                            = (
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            )
                            <name>
                                <name>attrValues</name>
                                <index>[
                                    <expr>
                                        <name><name>XSAttributeChecker</name>.
                                            <name>ATTIDX_NAMESPACE_LIST</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// process contents</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XInt</name>
                            </type>
                            <name>processContentsAttr</name> =
                            <init>
                                <expr>(<name>XInt</name>)
                                    <name>
                                        <name>attrValues</name>
                                        <index>[
                                            <expr>
                                                <name><name>XSAttributeChecker</name>.
                                                    <name>ATTIDX_PROCESSCONTENTS</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>wildcard</name>.
                                <name>fProcessContents</name>
                            </name>
                            =
                            <call>
                                <name><name>processContentsAttr</name>.
                                    <name>shortValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">//check content</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Element</name>
                            </type>
                            <name>child</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>DOMUtil</name>.
                                            <name>getFirstChildElement</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>elmNode</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAnnotationImpl</name>
                            </type>
                            <name>annotation</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>child</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>DOMUtil</name>.
                                                    <name>getLocalName</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>child</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>SchemaSymbols</name>.
                                                                <name>ELT_ANNOTATION</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>annotation</name>
                                                    =
                                                    <call>
                                                        <name>traverseAnnotationDecl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attrValues</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>schemaDoc</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>child</name>
                                                    =
                                                    <call>
                                                        <name><name>DOMUtil</name>.
                                                            <name>getNextSiblingElement</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>child</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>text</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>DOMUtil</name>.
                                                                    <name>getSyntheticAnnotation</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>elmNode</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>text</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>annotation</name>
                                                                =
                                                                <call>
                                                                    <name>traverseSyntheticAnnotation</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>elmNode</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>text</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>attrValues</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>false</expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>schemaDoc</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </else>
                                </if>

                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>child</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>reportSchemaError</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"s4s-elt-must-match.1"</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>new
                                                                    <name>
                                                                        <name>Object</name>
                                                                        <index>[]</index>
                                                                    </name>
                                                                    <block>{<expr>"wildcard"</expr>, <expr>
                                                                        "(annotation?)"</expr>,
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>DOMUtil</name>.
                                                                                    <name>getLocalName</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>child</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        }
                                                                    </block>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>elmNode</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>text</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>DOMUtil</name>.
                                                        <name>getSyntheticAnnotation</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>elmNode</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>text</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>annotation</name>
                                                    =
                                                    <call>
                                                        <name>traverseSyntheticAnnotation</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>elmNode</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>text</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>attrValues</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>schemaDoc</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>wildcard</name>.
                                <name>fAnnotation</name>
                            </name>
                            =
                            <name>annotation</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <return>return
                        <expr>
                            <name>wildcard</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>
            <comment type="line">// traverseWildcardDecl</comment>

            }
        </block>
    </class>
    <comment type="line">// XSDWildcardTraverser</comment>
</unit>
