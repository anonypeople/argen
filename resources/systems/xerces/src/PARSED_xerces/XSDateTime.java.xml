<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\xs\datatypes\XSDateTime.java">
    <comment type="block">/*
        * Copyright 2004,2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>datatypes</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>Duration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>xml</name>.<name>datatype</name>.
            <name>XMLGregorianCalendar</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * &lt;p&gt;Interface to expose the values for all date-time related types. The following
        * table shows the methods defined for various XML Schema 1.0 built-in types. 'X'
        * marks whether a particular method is defined for a particular type. Accessing undefined
        * methods may return unexpected values.
        *
        * &lt;table border="1"&gt;
        * &lt;br/&gt;
        * &lt;tr&gt;
        * &lt;td&gt; XML Schema Datatype &lt;/td&gt;
        * &lt;td&gt; getYears() &lt;/td&gt;
        * &lt;td&gt; getMonths() &lt;/td&gt;
        * &lt;td&gt; getDays() &lt;/td&gt;
        * &lt;td&gt; getHours() &lt;/td&gt;
        * &lt;td&gt; getMinutes() &lt;/td&gt;
        * &lt;td&gt; getSeconds() &lt;/td&gt;
        * &lt;td&gt; getTimeZoneHours() &lt;/td&gt;
        * &lt;td&gt; getTimeZoneMinutes() &lt;/td&gt;
        * &lt;td&gt; getXMLGregorianCalendar() &lt;/td&gt;
        * &lt;td&gt; getDuration() &lt;/td&gt;
        * &lt;td&gt; hasTimeZone() &lt;/td&gt;
        * &lt;td&gt; normalize() &lt;/td&gt;
        * &lt;td&gt; isNormalized() &lt;/td&gt;
        * &lt;td&gt; getLexicalValue() &lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; gYear &lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; gMonth &lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; gDay &lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; gYearMonth &lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; gMonthDay &lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; date &lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; time &lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; datetime &lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;tr&gt;
        * &lt;td&gt; duration &lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;-&lt;/td&gt;
        * &lt;td&gt;X&lt;/td&gt;
        * &lt;/tr&gt;
        * &lt;/table&gt;
        * &lt;/p&gt;
        *
        * @author Ankit Pasricha, IBM
        *
        * @version $Id: XSDateTime.java,v 1.12 2005/05/15 20:37:23 mrglavas Exp $
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XSDateTime</name>
        <block>{

            <comment type="javadoc">/**
                * @return years - can be negative for date-time related types;
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getYears</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return months - can be negative only for duration types;
                * For duration types, it returns years*12 + months
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMonths</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return days - cannot be negative;
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDays</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return hours - cannot be negative;
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getHours</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return minutes - cannot be negative;
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getMinutes</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return seconds - can be negative only for durations;
                * For duration types, it returns days*24*3600 + hours*3600
                * + minutes*60 + seconds
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getSeconds</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return boolean (true when timezone is specified in the original lexical value)
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>hasTimeZone</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return timezone hours (for GMT-xx:xx this will be negative),
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTimeZoneHours</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return timezone minutes (for GMT-xx:xx this will be negative),
                *
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getTimeZoneMinutes</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return the original lexical value
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getLexicalValue</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return a new date-time related object with normalized values
                * (has no effect on objects already
                * normalized)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XSDateTime</name>
                </type>
                <name>normalize</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return whether a date-time related object is normalized or not
                * (value is not useful for types where timezone is not specified)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isNormalized</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return an un-normalized XMLGregorianCalendar (if applicable otherwise null)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XMLGregorianCalendar</name>
                </type>
                <name>getXMLGregorianCalendar</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * @return a Duration (if applicable otherwise null)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Duration</name>
                </type>
                <name>getDuration</name>
                <parameter_list>()</parameter_list>;
            </function_decl>
            }
        </block>
    </class>
</unit>
