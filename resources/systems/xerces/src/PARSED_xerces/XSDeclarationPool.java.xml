<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\XSDeclarationPool.java">
    <comment type="block">/*
        * Copyright 2001, 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>dv</name>.<name>xs</name>.
            <name>XSSimpleTypeDecl</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * This class is pool that enables caching of XML Schema declaration objects.
        * Before a compiled grammar object is garbage collected,
        * the implementation will add all XML Schema component
        * declarations to the pool.
        * Note: The cashing mechanism is not implemented yet.
        *
        * @xerces.internal
        *
        * @author Elena Litani, IBM
        * @version $Id: XSDeclarationPool.java,v 1.9 2004/10/06 15:14:55 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>final</specifier> class <name>XSDeclarationPool</name>
        <block>{
            <comment type="javadoc">/** Chunk shift (8). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_SHIFT</name> =
                    <init>
                        <expr>8</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// 2^8 = 256</comment>

            <comment type="javadoc">/** Chunk size (1 &lt;&lt; CHUNK_SHIFT). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_SIZE</name> =
                    <init>
                        <expr>1 &lt;&lt;
                            <name>CHUNK_SHIFT</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Chunk mask (CHUNK_SIZE - 1). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>CHUNK_MASK</name> =
                    <init>
                        <expr>
                            <name>CHUNK_SIZE</name>
                            - 1
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Initial chunk count (). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>INITIAL_CHUNK_COUNT</name> =
                    <init>
                        <expr>(1 &lt;&lt; (10 - <name>CHUNK_SHIFT</name>))
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// 2^10 = 1k</comment>

            <comment type="javadoc">/** Element declaration pool*/</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSElementDecl</name>
                    </type>
                    <name>
                        <name>fElementDecl</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSElementDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fElementDeclIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Particle declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSParticleDecl</name>
                    </type>
                    <name>
                        <name>fParticleDecl</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSParticleDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fParticleDeclIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Particle declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSModelGroupImpl</name>
                    </type>
                    <name>
                        <name>fModelGroup</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSModelGroupImpl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fModelGroupIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Attribute declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSAttributeDecl</name>
                    </type>
                    <name>
                        <name>fAttrDecl</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSAttributeDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fAttrDeclIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** ComplexType declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSComplexTypeDecl</name>
                    </type>
                    <name>
                        <name>fCTDecl</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSComplexTypeDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fCTDeclIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** SimpleType declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSSimpleTypeDecl</name>
                    </type>
                    <name>
                        <name>fSTDecl</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSSimpleTypeDecl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fSTDeclIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** AttributeUse declaration pool */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSAttributeUseImpl</name>
                    </type>
                    <name>
                        <name>fAttributeUse</name>
                        <index>[]</index>
                        <index>[]</index>
                    </name>
                    =
                    <init>
                        <expr>new
                            <name>
                                <name>XSAttributeUseImpl</name>
                                <index>[
                                    <expr>
                                        <name>INITIAL_CHUNK_COUNT</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[]</index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fAttributeUseIndex</name> =
                    <init>
                        <expr>0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSElementDecl</name>
                </type>
                <name>getElementDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fElementDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fElementDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureElementDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fElementDecl</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fElementDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSElementDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fElementDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fElementDeclIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fElementDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSAttributeDecl</name>
                </type>
                <name>getAttributeDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fAttrDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fAttrDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureAttrDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fAttrDecl</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttrDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttrDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fAttrDeclIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttrDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSAttributeUseImpl</name>
                </type>
                <name>getAttributeUse</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fAttributeUseIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fAttributeUseIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureAttributeUseCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fAttributeUse</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttributeUse</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSAttributeUseImpl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fAttributeUse</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fAttributeUseIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fAttributeUse</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSComplexTypeDecl</name>
                </type>
                <name>getComplexTypeDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fCTDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fCTDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureCTDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fCTDecl</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{

                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fCTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSComplexTypeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fCTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fCTDeclIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fCTDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSSimpleTypeDecl</name>
                </type>
                <name>getSimpleTypeDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fSTDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fSTDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureSTDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fSTDecl</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fSTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSSimpleTypeDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fSTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fSTDeclIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fSTDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSParticleDecl</name>
                </type>
                <name>getParticleDecl</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fParticleDeclIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fParticleDeclIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureParticleDeclCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fParticleDecl</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fParticleDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSParticleDecl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fParticleDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fParticleDeclIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fParticleDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>final</specifier>
                    <name>XSModelGroupImpl</name>
                </type>
                <name>getModelGroup</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>       =
                            <init>
                                <expr>
                                    <name>fModelGroupIndex</name>
                                    &gt;&gt;
                                    <name>CHUNK_SHIFT</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>       =
                            <init>
                                <expr>
                                    <name>fModelGroupIndex</name>
                                    &amp;
                                    <name>CHUNK_MASK</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>ensureModelGroupCapacity</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fModelGroup</name>
                                    <index>[
                                        <expr>
                                            <name>chunk</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fModelGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        = new
                                        <call>
                                            <name>XSModelGroupImpl</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fModelGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                            <index>[
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>reset</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr><name>fModelGroupIndex</name>++
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>
                                <name>fModelGroup</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="line">// REVISIT: do we need decl pool for group declarations, attribute group,</comment>
            <comment type="line">// notations?</comment>
            <comment type="line">// it seems like each schema would use a small number of those</comment>
            <comment type="line">// components, so it probably is not worth keeping those components</comment>
            <comment type="line">// in the pool.</comment>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureElementDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fElementDecl</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fElementDecl</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fElementDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fElementDecl</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fElementDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fElementDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSElementDecl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSElementDecl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSElementDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureParticleDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fParticleDecl</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fParticleDecl</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fParticleDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fParticleDecl</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fParticleDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fParticleDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSParticleDecl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureModelGroupCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fModelGroup</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fModelGroup</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fModelGroup</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fModelGroup</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fModelGroup</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fModelGroup</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSModelGroupImpl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSParticleDecl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSParticleDecl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSParticleDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSModelGroupImpl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSModelGroupImpl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSModelGroupImpl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSModelGroupImpl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureAttrDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fAttrDecl</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAttrDecl</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttrDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttrDecl</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fAttrDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttrDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSAttributeDecl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSAttributeDecl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSAttributeDecl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAttributeDecl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSAttributeDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureAttributeUseCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fAttributeUse</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fAttributeUse</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fAttributeUse</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fAttributeUse</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fAttributeUse</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fAttributeUse</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSAttributeUseImpl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSAttributeUseImpl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSAttributeUseImpl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAttributeUseImpl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSAttributeUseImpl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureSTDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fSTDecl</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fSTDecl</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fSTDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fSTDecl</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fSTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fSTDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSSimpleTypeDecl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSSimpleTypeDecl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSSimpleTypeDecl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSSimpleTypeDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>boolean</name>
                </type>
                <name>ensureCTDeclCapacity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>chunk</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>chunk</name>
                                &gt;=
                                <name><name>fCTDecl</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fCTDecl</name>
                                        =
                                        <call>
                                            <name>resize</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>fCTDecl</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>fCTDecl</name>.
                                                            <name>length</name>
                                                        </name>
                                                        * 2
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fCTDecl</name>
                                            <index>[
                                                <expr>
                                                    <name>chunk</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <expr_stmt>
                        <expr>
                            <name>
                                <name>fCTDecl</name>
                                <index>[
                                    <expr>
                                        <name>chunk</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                            = new
                            <name>
                                <name>XSComplexTypeDecl</name>
                                <index>[
                                    <expr>
                                        <name>CHUNK_SIZE</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <name>XSComplexTypeDecl</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>resize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>
                                <name>array</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>newsize</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSComplexTypeDecl</name>
                            </type>
                            <name>
                                <name>newarray</name>
                                <index>[]</index>
                                <index>[]</index>
                            </name>
                            =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSComplexTypeDecl</name>
                                        <index>[
                                            <expr>
                                                <name>newsize</name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[]</index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>System</name>.
                                    <name>arraycopy</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>array</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>newarray</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>array</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>newarray</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>reset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fElementDeclIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fParticleDeclIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fModelGroupIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSTDeclIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fCTDeclIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAttrDeclIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fAttributeUseIndex</name>
                            = 0
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>


            }
        </block>
    </class>
</unit>
