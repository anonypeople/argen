<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\XSModelImpl.java">
    <comment type="block">/*
        * Copyright 2002-2005 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.
            <name>xs</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>StringList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAttributeDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSAttributeGroupDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSConstants</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSElementDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSModel</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSModelGroupDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNamedMap</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNamespaceItemList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSNotationDeclaration</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xs</name>.
            <name>XSTypeDefinition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>NSItemListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>StringListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSNamedMap4Types</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSNamedMapImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.<name>
            util</name>.
            <name>XSObjectListImpl</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolHash</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>XMLSymbols</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Implements XSModel: a read-only interface that represents an XML Schema,
        * which could be components from different namespaces.
        *
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        *
        * @version $Id: XSModelImpl.java,v 1.18 2005/05/25 04:24:40 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XSModelImpl</name>
        <super>
            <implements>implements
                <name>XSModel</name>
            </implements>
        </super>
        <block>{

            <comment type="line">// the max index / the max value of XSObject type</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>short</name>
                    </type>
                    <name>MAX_COMP_IDX</name> =
                    <init>
                        <expr>
                            <name><name>XSTypeDefinition</name>.
                                <name>SIMPLE_TYPE</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>GLOBAL_COMP</name> =
                    <init>
                        <expr>
                            <block>{<expr>false</expr>,
                                <comment type="line">// null</comment>
                                <expr>true</expr>,
                                <comment type="line">// attribute</comment>
                                <expr>true</expr>,
                                <comment type="line">// element</comment>
                                <expr>true</expr>,
                                <comment type="line">// type</comment>
                                <expr>false</expr>,
                                <comment type="line">// attribute use</comment>
                                <expr>true</expr>,
                                <comment type="line">// attribute group</comment>
                                <expr>true</expr>,
                                <comment type="line">// group</comment>
                                <expr>false</expr>,
                                <comment type="line">// model group</comment>
                                <expr>false</expr>,
                                <comment type="line">// particle</comment>
                                <expr>false</expr>,
                                <comment type="line">// wildcard</comment>
                                <expr>false</expr>,
                                <comment type="line">// idc</comment>
                                <expr>true</expr>,
                                <comment type="line">// notation</comment>
                                <expr>false</expr>,
                                <comment type="line">// annotation</comment>
                                <expr>false</expr>,
                                <comment type="line">// facet</comment>
                                <expr>false</expr>,
                                <comment type="line">// multi value facet</comment>
                                <expr>true</expr>,
                                <comment type="line">// complex type</comment>
                                <expr>true</expr>
                                <comment type="line">// simple type</comment>
                                }
                            </block>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// number of grammars/namespaces stored here</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>fGrammarCount</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// all target namespaces</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>fNamespaces</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// all schema grammar objects (for each namespace)</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SchemaGrammar</name>
                        <index>[]</index>
                    </type>
                    <name>fGrammarList</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// a map from namespace to schema grammar</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SymbolHash</name>
                    </type>
                    <name>fGrammarMap</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// a map from element declaration to its substitution group</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>SymbolHash</name>
                    </type>
                    <name>fSubGroupMap</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// store a certain kind of components from all namespaces</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSNamedMap</name>
                        <index>[]</index>
                    </type>
                    <name>fGlobalComponents</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// store a certain kind of components from one namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSNamedMap</name>
                        <index>[]</index>
                        <index>[]</index>
                    </type>
                    <name>fNSComponents</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// store all annotations</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>XSObjectListImpl</name>
                    </type>
                    <name>fAnnotations</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// whether there is any IDC in this XSModel</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>fHasIDC</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Construct an XSModelImpl, by storing some grammars and grammars imported
                * by them to this object.
                *
                * @param grammars the array of schema grammars
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSModelImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SchemaGrammar</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>grammars</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// copy namespaces/grammars from the array to our arrays</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <name><name>grammars</name>.
                                        <name>length</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>Math</name>.
                                                <name>max</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr><name>len</name>+1
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>5</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGrammarList</name>
                            = new
                            <name>
                                <name>SchemaGrammar</name>
                                <index>[
                                    <expr>
                                        <call>
                                            <name><name>Math</name>.
                                                <name>max</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr><name>len</name>+1
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>5</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>hasS4S</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fNamespaces</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>grammars</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>getTargetNamespace</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>fGrammarList</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <name>
                                        <name>grammars</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fNamespaces</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>SchemaSymbols</name>.
                                            <name>URI_SCHEMAFORSCHEMA</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>hasS4S</name>
                                            = true
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <comment type="line">// If a schema for the schema namespace isn't included, include it here.
                    </comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>hasS4S</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fNamespaces</name>
                                            <index>[
                                                <expr>
                                                    <name>len</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name><name>SchemaSymbols</name>.
                                            <name>URI_SCHEMAFORSCHEMA</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>fGrammarList</name>
                                            <index>[
                                                <expr><name>len</name>++
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        =
                                        <name><name>SchemaGrammar</name>.
                                            <name>SG_SchemaNS</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg1</name>,
                            <name>sg2</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>gs</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>, <name>j</name>,
                            <name>k</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// and recursively get all imported grammars, add them to our arrays</comment>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// get the grammar</comment>
                            <expr_stmt>
                                <expr>
                                    <name>sg1</name>
                                    =
                                    <name>
                                        <name>fGrammarList</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>gs</name>
                                    =
                                    <call>
                                        <name><name>sg1</name>.
                                            <name>getImportedGrammars</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// for each imported grammar</comment>
                            <for>for (
                                <init>
                                    <expr>
                                        <name>j</name>
                                        = <name>gs</name> == <name>null</name> ? -1 :
                                        <call>
                                            <name><name>gs</name>.
                                                <name>size</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        - 1
                                    </expr>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &gt;= 0
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>--
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>sg2</name>
                                            = (<name>SchemaGrammar</name>)
                                            <call>
                                                <name><name>gs</name>.
                                                    <name>elementAt</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>j</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    <comment type="line">// check whether this grammar is already in the list</comment>
                                    <for>for (
                                        <init>
                                            <expr>
                                                <name>k</name>
                                                = 0
                                            </expr>
                                            ;
                                        </init>
                                        <condition>
                                            <expr>
                                                <name>k</name>
                                                &lt;
                                                <name>len</name>
                                            </expr>
                                            ;
                                        </condition>
                                        <incr>
                                            <expr><name>k</name>++
                                            </expr>
                                        </incr>
                                        )
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>sg2</name>
                                                        ==
                                                        <name>
                                                            <name>fGrammarList</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>k</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <break>break;</break>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </for>
                                    <comment type="line">// if it's not, add it to the list</comment>
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>k</name>
                                                ==
                                                <name>len</name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <comment type="line">// ensure the capacity of the arrays</comment>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>len</name>
                                                            ==
                                                            <name><name>fGrammarList</name>.
                                                                <name>length</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>String</name>
                                                                        <index>[]</index>
                                                                    </type>
                                                                    <name>newSA</name> =
                                                                    <init>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>String</name>
                                                                                <index>[
                                                                                    <expr><name>len</name>*2
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.
                                                                            <name>arraycopy</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fNamespaces</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>newSA</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>len</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fNamespaces</name>
                                                                    =
                                                                    <name>newSA</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>SchemaGrammar</name>
                                                                        <index>[]</index>
                                                                    </type>
                                                                    <name>newGA</name> =
                                                                    <init>
                                                                        <expr>new
                                                                            <name>
                                                                                <name>SchemaGrammar</name>
                                                                                <index>[
                                                                                    <expr><name>len</name>*2
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>System</name>.
                                                                            <name>arraycopy</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>fGrammarList</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>newGA</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>len</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>fGrammarList</name>
                                                                    =
                                                                    <name>newGA</name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fNamespaces</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>len</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <call>
                                                            <name><name>sg2</name>.
                                                                <name>getTargetNamespace</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>fGrammarList</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>len</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        =
                                                        <name>sg2</name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr><name>len</name>++
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                    </if>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </for>

                    <comment type="line">// establish the mapping from namespace to grammars</comment>
                    <expr_stmt>
                        <expr>
                            <name>fGrammarMap</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>(
                                    <argument>
                                        <expr><name>len</name>*2
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <for>for (
                        <init>
                            <expr>
                                <name>i</name>
                                = 0
                            </expr>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNamespaces</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <comment type="line">// update the idc field</comment>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>fGrammarList</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>hasIDConstraints</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <expr_stmt>
                                        <expr>
                                            <name>fHasIDC</name>
                                            = true
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <expr_stmt>
                        <expr>
                            <name>fGrammarCount</name>
                            =
                            <name>len</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fGlobalComponents</name>
                            = new
                            <name>
                                <name>XSNamedMap</name>
                                <index>[
                                    <expr><name>MAX_COMP_IDX</name>+1
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNSComponents</name>
                            = new
                            <name>
                                <name>XSNamedMap</name>
                                <index>[
                                    <expr>
                                        <name>len</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr><name>MAX_COMP_IDX</name>+1
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// build substitution groups</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>buildSubGroups</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>buildSubGroups</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SubstitutionGroupHandler</name>
                            </type>
                            <name>sgHandler</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>SubstitutionGroupHandler</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fGrammarCount</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>sgHandler</name>.
                                            <name>addSubstitutionGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>getSubstitutionGroups</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSNamedMap</name>
                            </type>
                            <name>elements</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getComponents</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>XSConstants</name>.
                                                        <name>ELEMENT_DECLARATION</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>len</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>elements</name>.
                                            <name>getLength</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fSubGroupMap</name>
                            = new
                            <call>
                                <name>SymbolHash</name>
                                <argument_list>(
                                    <argument>
                                        <expr><name>len</name>*2
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDecl</name>
                            </type>
                            <name>head</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSElementDeclaration</name>
                                <index>[]</index>
                            </type>
                            <name>subGroup</name>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>len</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>head</name>
                                    = (<name>XSElementDecl</name>)
                                    <call>
                                        <name><name>elements</name>.
                                            <name>item</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>subGroup</name>
                                    =
                                    <call>
                                        <name><name>sgHandler</name>.
                                            <name>getSubstitutionGroup</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>head</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>fSubGroupMap</name>.
                                            <name>put</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>head</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>subGroup</name>.
                                                        <name>length</name>
                                                    </name>
                                                    &gt; 0 ?
                                                    new
                                                    <call>
                                                        <name>XSObjectListImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>subGroup</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name><name>subGroup</name>.
                                                                        <name>length</name>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    :
                                                    <name><name>XSObjectListImpl</name>.
                                                        <name>EMPTY_LIST</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a list of all namespaces that belong to
                * this schema.
                * @return A list of all namespaces that belong to this schema or
                * &lt;code&gt;null&lt;/code&gt; if all components don't have a targetNamespace.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>StringList</name>
                </type>
                <name>getNamespaces</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// REVISIT: should the type of fNamespace be StringListImpl?</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>StringListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fNamespaces</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fGrammarCount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSNamespaceItemList</name>
                </type>
                <name>getNamespaceItems</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// REVISIT: should the type of fGrammarList be NSItemListImpl?</comment>
                    <return>return
                        <expr>new
                            <call>
                                <name>NSItemListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>fGrammarList</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>fGrammarCount</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a list of top-level components, i.e. element declarations,
                * attribute declarations, etc.
                * @param objectType The type of the declaration, i.e.
                * &lt;code&gt;ELEMENT_DECLARATION&lt;/code&gt;. Note that
                * &lt;code&gt;XSTypeDefinition.SIMPLE_TYPE&lt;/code&gt; and
                * &lt;code&gt;XSTypeDefinition.COMPLEX_TYPE&lt;/code&gt; can also be used as the
                * &lt;code&gt;objectType&lt;/code&gt; to retrieve only complex types or simple
                * types, instead of all types.
                * @return A list of top-level definitions of the specified type in
                * &lt;code&gt;objectType&lt;/code&gt; or an empty &lt;code&gt;XSNamedMap&lt;/code&gt; if no
                * such definitions exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XSNamedMap</name>
                </type>
                <name>getComponents</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>objectType</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>objectType</name>
                                &lt;= 0 || <name>objectType</name> &gt; <name>MAX_COMP_IDX</name> ||
                                !
                                <name>
                                    <name>GLOBAL_COMP</name>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSNamedMapImpl</name>.
                                            <name>EMPTY_MAP</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SymbolHash</name>
                                <index>[]</index>
                            </type>
                            <name>tables</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>SymbolHash</name>
                                        <index>[
                                            <expr>
                                                <name>fGrammarCount</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// get all hashtables from all namespaces for this type of components</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fGlobalComponents</name>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fGrammarCount</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <switch>switch
                                            <condition>(
                                                <expr>
                                                    <name>objectType</name>
                                                </expr>
                                                )
                                            </condition>
                                            <block>{
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>TYPE_DEFINITION</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSTypeDefinition</name>.
                                                            <name>COMPLEX_TYPE</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSTypeDefinition</name>.
                                                            <name>SIMPLE_TYPE</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalTypeDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>ATTRIBUTE_DECLARATION</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalAttrDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>ELEMENT_DECLARATION</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalElemDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>ATTRIBUTE_GROUP</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalAttrGrpDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>MODEL_GROUP_DEFINITION</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalGroupDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                <case>case
                                                    <expr>
                                                        <name><name>XSConstants</name>.
                                                            <name>NOTATION_DECLARATION</name>
                                                        </name>
                                                    </expr>
                                                    :
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>
                                                                <name>tables</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            =
                                                            <name>
                                                                <name>fGrammarList</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <name>fGlobalNotationDecls</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <break>break;</break>
                                                </case>
                                                }
                                            </block>
                                        </switch>
                                        }
                                    </block>
                                </for>
                                <comment type="line">// for complex/simple types, create a special implementation,
                                </comment>
                                <comment type="line">// which take specific types out of the hash table</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>COMPLEX_TYPE</name>
                                            </name>
                                            ||
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>SIMPLE_TYPE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fGlobalComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMap4Types</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespaces</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>tables</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fGrammarCount</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>objectType</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fGlobalComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMapImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>fNamespaces</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>tables</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>fGrammarCount</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>
                                <name>fGlobalComponents</name>
                                <index>[
                                    <expr>
                                        <name>objectType</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a list of top-level component declarations
                * that are defined within the specified namespace, i.e. element
                * declarations, attribute declarations, etc.
                * @param objectType The type of the declaration, i.e.
                * &lt;code&gt;ELEMENT_DECLARATION&lt;/code&gt;.
                * @param namespace The namespace to which the declaration belongs or
                * &lt;code&gt;null&lt;/code&gt; (for components with no target namespace).
                * @return A list of top-level definitions of the specified type in
                * &lt;code&gt;objectType&lt;/code&gt; and defined in the specified
                * &lt;code&gt;namespace&lt;/code&gt; or an empty &lt;code&gt;XSNamedMap&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XSNamedMap</name>
                </type>
                <name>getComponentsByNamespace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>short</name>
                            </type>
                            <name>objectType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>objectType</name>
                                &lt;= 0 || <name>objectType</name> &gt; <name>MAX_COMP_IDX</name> ||
                                !
                                <name>
                                    <name>GLOBAL_COMP</name>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>XSNamedMapImpl</name>.
                                            <name>EMPTY_MAP</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// try to find the grammar</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespace</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <for>for (<init>;</init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fGrammarCount</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>namespace</name>.
                                                            <name>equals</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>
                                                                        <name>fNamespaces</name>
                                                                        <index>[
                                                                            <expr>
                                                                                <name>i</name>
                                                                            </expr>
                                                                            ]
                                                                        </index>
                                                                    </name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <break>break;</break>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <for>for (<init>;</init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fGrammarCount</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr>++
                                            <name>i</name>
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>fNamespaces</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    ==
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <break>break;</break>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>i</name>
                                ==
                                <name>fGrammarCount</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name><name>XSNamedMapImpl</name>.
                                        <name>EMPTY_MAP</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// get the hashtable for this type of components</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>
                                    <name>fNSComponents</name>
                                    <index>[
                                        <expr>
                                            <name>i</name>
                                        </expr>
                                        ]
                                    </index>
                                    <index>[
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        ]
                                    </index>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>SymbolHash</name>
                                        </type>
                                        <name>table</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <switch>switch
                                    <condition>(
                                        <expr>
                                            <name>objectType</name>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>TYPE_DEFINITION</name>
                                                </name>
                                            </expr>
                                            :
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSTypeDefinition</name>.
                                                    <name>COMPLEX_TYPE</name>
                                                </name>
                                            </expr>
                                            :
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSTypeDefinition</name>.
                                                    <name>SIMPLE_TYPE</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalTypeDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ATTRIBUTE_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalAttrDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ELEMENT_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalElemDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>ATTRIBUTE_GROUP</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalAttrGrpDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>MODEL_GROUP_DEFINITION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalGroupDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        <case>case
                                            <expr>
                                                <name><name>XSConstants</name>.
                                                    <name>NOTATION_DECLARATION</name>
                                                </name>
                                            </expr>
                                            :
                                            <expr_stmt>
                                                <expr>
                                                    <name>table</name>
                                                    =
                                                    <name>
                                                        <name>fGrammarList</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <name>fGlobalNotationDecls</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <break>break;</break>
                                        </case>
                                        }
                                    </block>
                                </switch>

                                <comment type="line">// for complex/simple types, create a special implementation,
                                </comment>
                                <comment type="line">// which take specific types out of the hash table</comment>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>COMPLEX_TYPE</name>
                                            </name>
                                            ||
                                            <name>objectType</name>
                                            ==
                                            <name><name>XSTypeDefinition</name>.
                                                <name>SIMPLE_TYPE</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNSComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMap4Types</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>table</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>objectType</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>
                                                        <name>fNSComponents</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                        <index>[
                                                            <expr>
                                                                <name>objectType</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    = new
                                                    <call>
                                                        <name>XSNamedMapImpl</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>table</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>
                                <name>fNSComponents</name>
                                <index>[
                                    <expr>
                                        <name>i</name>
                                    </expr>
                                    ]
                                </index>
                                <index>[
                                    <expr>
                                        <name>objectType</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level simple or complex type
                * definition.
                * @param name The name of the definition.
                * @param namespace The namespace of the definition, otherwise null.
                * @return An &lt;code&gt;XSTypeDefinition&lt;/code&gt; or null if such definition
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSTypeDefinition</name>
                </type>
                <name>getTypeDefinition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSTypeDefinition</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalTypeDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level attribute declaration.
                * @param name The name of the declaration.
                * @param namespace The namespace of the definition, otherwise null.
                * @return A top-level attribute declaration or null if such declaration
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSAttributeDeclaration</name>
                </type>
                <name>getAttributeDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSAttributeDeclaration</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalAttrDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level element declaration.
                * @param name The name of the declaration.
                * @param namespace The namespace of the definition, otherwise null.
                * @return A top-level element declaration or null if such declaration
                * does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSElementDeclaration</name>
                </type>
                <name>getElementDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSElementDeclaration</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalElemDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level attribute group definition.
                * @param name The name of the definition.
                * @param namespace The namespace of the definition, otherwise null.
                * @return A top-level attribute group definition or null if such
                * definition does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSAttributeGroupDefinition</name>
                </type>
                <name>getAttributeGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSAttributeGroupDefinition</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalAttrGrpDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Convenience method. Returns a top-level model group definition.
                *
                * @param name The name of the definition.
                * @param namespace The namespace of the definition, otherwise null.
                * @return A top-level model group definition definition or null if such
                * definition does not exist.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSModelGroupDefinition</name>
                </type>
                <name>getModelGroupDefinition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSModelGroupDefinition</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalGroupDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * @see org.apache.xerces.xs.XSModel#getNotationDeclaration(String, String)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSNotationDeclaration</name>
                </type>
                <name>getNotationDeclaration</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>name</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>SchemaGrammar</name>
                            </type>
                            <name>sg</name> =
                            <init>
                                <expr>(<name>SchemaGrammar</name>)
                                    <call>
                                        <name><name>fGrammarMap</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>null2EmptyString</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>namespace</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>sg</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>(<name>XSNotationDeclaration</name>)
                            <call>
                                <name><name>sg</name>.<name>fGlobalNotationDecls</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>name</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * {annotations} A set of annotations.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getAnnotations</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fAnnotations</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>fAnnotations</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>

                    <comment type="line">// do this in two passes to avoid inaccurate array size</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>totalAnnotations</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fGrammarCount</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>totalAnnotations</name>
                                    +=
                                    <name>
                                        <name>fGrammarList</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    .
                                    <name>fNumAnnotations</name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>XSAnnotationImpl</name>
                                <index>[]</index>
                            </type>
                            <name>annotations</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>XSAnnotationImpl</name>
                                        <index>[
                                            <expr>
                                                <name>totalAnnotations</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>currPos</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fGrammarCount</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>SchemaGrammar</name>
                                    </type>
                                    <name>currGrammar</name> =
                                    <init>
                                        <expr>
                                            <name>
                                                <name>fGrammarList</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>currGrammar</name>.
                                            <name>fNumAnnotations</name>
                                        </name>
                                        &gt; 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>System</name>.
                                                        <name>arraycopy</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>currGrammar</name>.
                                                                    <name>fAnnotations</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>annotations</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>currPos</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>currGrammar</name>.
                                                                    <name>fNumAnnotations</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>currPos</name>
                                                +=
                                                <name><name>currGrammar</name>.
                                                    <name>fNumAnnotations</name>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <expr_stmt>
                        <expr>
                            <name>fAnnotations</name>
                            = new
                            <call>
                                <name>XSObjectListImpl</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>annotations</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>annotations</name>.
                                                <name>length</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>fAnnotations</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <function>
                <type>
                    <specifier>private</specifier>
                    <specifier>static</specifier>
                    <specifier>final</specifier>
                    <name>String</name>
                </type>
                <name>null2EmptyString</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>str</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>str</name>
                            == <name>null</name> ?
                            <name><name>XMLSymbols</name>.
                                <name>EMPTY_STRING</name>
                            </name>
                            :
                            <name>str</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * REVISIT: to expose identity constraints from XSModel.
                * For now, we only expose whether there are any IDCs.
                * We also need to add these methods to the public
                * XSModel interface.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>hasIDConstraints</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>fHasIDC</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * REVISIT: to expose substitution group of a given element.
                * We need to add this to the XSModel interface.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObjectList</name>
                </type>
                <name>getSubstitutionGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XSElementDeclaration</name>
                            </type>
                            <name>head</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>XSObjectList</name>)
                            <call>
                                <name><name>fSubGroupMap</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>head</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XSModelImpl</comment>
</unit>
