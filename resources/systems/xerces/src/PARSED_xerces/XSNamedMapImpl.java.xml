<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="C:\Users\dnader\git\biorimp\BIO-RIMP\test_data\code\xerces\src\org\apache\xerces\impl\xs\util\XSNamedMapImpl.java">
    <comment type="block">/*
        * Copyright 2002,2004 The Apache Software Foundation.
        *
        * Licensed under the Apache License, Version 2.0 (the "License");
        * you may not use this file except in compliance with the License.
        * You may obtain a copy of the License at
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS,
        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        * See the License for the specific language governing permissions and
        * limitations under the License.
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>impl</name>.<name>xs</name>.
            <name>util</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>util</name>.
            <name>SymbolHash</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.<name>xni</name>.
            <name>QName</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>apache</name>.<name>xerces</name>.
            <name>xs</name>
        </name>
        .*;
    </import>

    <comment type="javadoc">/**
        * Containts the map between qnames and XSObject's.
        *
        * @xerces.internal
        *
        * @author Sandy Gao, IBM
        *
        * @version $Id: XSNamedMapImpl.java,v 1.8 2004/10/06 15:14:50 mrglavas Exp $
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>XSNamedMapImpl</name>
        <super>
            <implements>implements
                <name>XSNamedMap</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * An immutable empty map.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>XSNamedMap</name>
                    </type>
                    <name>EMPTY_MAP</name> =
                    <init>
                        <expr>new
                            <class>
                                <super>
                                    <name>XSNamedMap</name>
                                </super>
                                <argument_list>()</argument_list>
                                <block>{
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>int</name>
                                        </type>
                                        <name>getLength</name>
                                        <parameter_list>()</parameter_list>
                                        <block>{
                                            <return>return <expr>0</expr>;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>XSObject</name>
                                        </type>
                                        <name>itemByName</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>namespace</name>
                                                </decl>
                                            </param>
                                            ,
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>String</name>
                                                    </type>
                                                    <name>localName</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    <function>
                                        <type>
                                            <specifier>public</specifier>
                                            <name>XSObject</name>
                                        </type>
                                        <name>item</name>
                                        <parameter_list>(
                                            <param>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>index</name>
                                                </decl>
                                            </param>
                                            )
                                        </parameter_list>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </function>
                                    }
                                </block>
                            </class>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="line">// components of these namespaces are stored in this map</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>String</name>
                        <index>[]</index>
                    </type>
                    <name>fNamespaces</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// number of namespaces</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>fNSNum</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// each entry contains components in one namespace</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>SymbolHash</name>
                        <index>[]</index>
                    </type>
                    <name>fMaps</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// store all components from all namespace.</comment>
            <comment type="line">// used when this map is accessed as a list.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>XSObject</name>
                        <index>[]</index>
                    </type>
                    <name>fArray</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// store the number of componetns.</comment>
            <comment type="line">// used when this map is accessed as a list.</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>fLength</name> =
                    <init>
                        <expr>-1</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// temprory QName object</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>QName</name>
                    </type>
                    <name>fName</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>QName</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Construct an XSNamedMap implmentation for one namespace
                *
                * @param namespace the namespace to which the components belong
                * @param map the map from local names to components
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSNamedMapImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>SymbolHash</name>
                            </type>
                            <name>map</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <name>namespace</name>
                                </expr>
                                }
                            </block>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaps</name>
                            = new
                            <name>
                                <name>SymbolHash</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <name>map</name>
                                </expr>
                                }
                            </block>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNSNum</name>
                            = 1
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Construct an XSNamedMap implmentation for a list of namespaces
                *
                * @param namespaces the namespaces to which the components belong
                * @param maps the maps from local names to components
                * @param num the number of namespaces
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSNamedMapImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>String</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>namespaces</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>SymbolHash</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>maps</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>num</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            =
                            <name>namespaces</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaps</name>
                            =
                            <name>maps</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNSNum</name>
                            =
                            <name>num</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Construct an XSNamedMap implmentation one namespace from an array
                *
                * @param array containing all components
                * @param length number of components
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>XSNamedMapImpl</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>XSObject</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>array</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>length</name>
                                == 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fNSNum</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fLength</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// because all components are from the same target namesapce,</comment>
                    <comment type="line">// get the namespace from the first one.</comment>
                    <expr_stmt>
                        <expr>
                            <name>fNamespaces</name>
                            = new
                            <name>
                                <name>String</name>
                                <index>[]</index>
                            </name>
                            <block>{
                                <expr>
                                    <name>
                                        <name>array</name>
                                        <index>[<expr>0</expr>]
                                        </index>
                                    </name>
                                    .
                                    <call>
                                        <name>getNamespace</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                }
                            </block>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fMaps</name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fNSNum</name>
                            = 1
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// copy elements to the Vector</comment>
                    <expr_stmt>
                        <expr>
                            <name>fArray</name>
                            =
                            <name>array</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>fLength</name>
                            =
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * The number of &lt;code&gt;XSObjects&lt;/code&gt; in the &lt;code&gt;XSObjectList&lt;/code&gt;. The
                * range of valid child node indices is 0 to &lt;code&gt;length-1&lt;/code&gt;
                * inclusive.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>int</name>
                </type>
                <name>getLength</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fLength</name>
                                == -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>fLength</name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fNSNum</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <expr_stmt>
                                        <expr>
                                            <name>fLength</name>
                                            +=
                                            <name>
                                                <name>fMaps</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            .
                                            <call>
                                                <name>getLength</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>fLength</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Retrieves an &lt;code&gt;XSObject&lt;/code&gt; specified by local name and namespace
                * URI.
                * @param namespace The namespace URI of the &lt;code&gt;XSObject&lt;/code&gt; to
                * retrieve.
                * @param localName The local name of the &lt;code&gt;XSObject&lt;/code&gt; to retrieve.
                * @return A &lt;code&gt;XSObject&lt;/code&gt; (of any type) with the specified local
                * name and namespace URI, or &lt;code&gt;null&lt;/code&gt; if they do not
                * identify any &lt;code&gt;XSObject&lt;/code&gt; in this map.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>XSObject</name>
                </type>
                <name>itemByName</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>namespace</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>localName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>namespace</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <expr_stmt>
                                <expr>
                                    <name>namespace</name>
                                    =
                                    <call>
                                        <name><name>namespace</name>.
                                            <name>intern</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                        </then>
                    </if>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name>fNSNum</name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>namespace</name>
                                        ==
                                        <name>
                                            <name>fNamespaces</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// when this map is created from SymbolHash's</comment>
                                        <comment type="line">// get the component from SymbolHash</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fMaps</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <return>return
                                                    <expr>(<name>XSObject</name>)
                                                        <name>
                                                            <name>fMaps</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                        .
                                                        <call>
                                                            <name>get</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>localName</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </return>
                                            </then>
                                        </if>
                                        <comment type="line">// Otherwise (it's created from an array)</comment>
                                        <comment type="line">// go through the array to find a matcing name</comment>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>XSObject</name>
                                                </type>
                                                <name>ret</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <for>for (
                                            <init>
                                                <decl>
                                                    <type>
                                                        <name>int</name>
                                                    </type>
                                                    <name>j</name> =
                                                    <init>
                                                        <expr>0</expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </init>
                                            <condition>
                                                <expr>
                                                    <name>j</name>
                                                    &lt;
                                                    <name>fLength</name>
                                                </expr>
                                                ;
                                            </condition>
                                            <incr>
                                                <expr><name>j</name>++
                                                </expr>
                                            </incr>
                                            )
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>ret</name>
                                                        =
                                                        <name>
                                                            <name>fArray</name>
                                                            <index>[
                                                                <expr>
                                                                    <name>j</name>
                                                                </expr>
                                                                ]
                                                            </index>
                                                        </name>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <call>
                                                                <name><name>ret</name>.
                                                                    <name>getName</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>equals</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>localName</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <return>return
                                                            <expr>
                                                                <name>ret</name>
                                                            </expr>
                                                            ;
                                                        </return>
                                                    </then>
                                                </if>
                                                }
                                            </block>
                                        </for>
                                        <return>return
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the &lt;code&gt;index&lt;/code&gt;th item in the map. The index starts at
                * 0. If &lt;code&gt;index&lt;/code&gt; is greater than or equal to the number of
                * nodes in the list, this returns &lt;code&gt;null&lt;/code&gt;.
                * @param index The position in the map from which the item is to be
                * retrieved.
                * @return The &lt;code&gt;XSObject&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt;th position
                * in the &lt;code&gt;XSNamedMap&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is
                * not a valid index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>synchronized</specifier>
                    <name>XSObject</name>
                </type>
                <name>item</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>fArray</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <comment type="line">// calculate the total number of elements</comment>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>getLength</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>fArray</name>
                                        = new
                                        <name>
                                            <name>XSObject</name>
                                            <index>[
                                                <expr>
                                                    <name>fLength</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>pos</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <comment type="line">// get components from all SymbolHash's</comment>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>fNSNum</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>pos</name>
                                                +=
                                                <name>
                                                    <name>fMaps</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                .
                                                <call>
                                                    <name>getValues</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>fArray</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>pos</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </for>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>index</name>
                                &lt; 0 || <name>index</name> &gt;=
                                <name>fLength</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <return>return
                                <expr>
                                    <name>null</name>
                                </expr>
                                ;
                            </return>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>
                                <name>fArray</name>
                                <index>[
                                    <expr>
                                        <name>index</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
    <comment type="line">// class XSNamedMapImpl</comment>
</unit>
